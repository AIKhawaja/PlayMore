%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1910.m10.i014.n001.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: Admin
%%CreationDate: 10/27/2019
%%BoundingBox: 0 0 3375 1787
%%HiResBoundingBox: 0 0 3374.5000 1786.5000
%%CropBox: 0 0 3374.5000 1786.5000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Video bloggers. Beauty blogger or vlogger, travel blog and lets play gamer stream translation. Fitness, cooking and science education video tutorial flat vector set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Video bloggers. Beauty blogger or vlogger, travel blog and lets play gamer stream translation. Fitness, cooking and science education video tutorial. Lifestyle vlogging isolated flat vector icons set</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Video bloggers. Beauty blogger or vlogger, travel blog and lets play gamer stream translation. Fitness, cooking and science education video tutorial. Lifestyle vlogging isolated flat vector icons set</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>video</rdf:li>
               <rdf:li>bloggers</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>blog</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>online</rdf:li>
               <rdf:li>social</rdf:li>
               <rdf:li>media</rdf:li>
               <rdf:li>blogging</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>vlog</rdf:li>
               <rdf:li>network</rdf:li>
               <rdf:li>streaming</rdf:li>
               <rdf:li>web</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>channel</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>creator</rdf:li>
               <rdf:li>marketing</rdf:li>
               <rdf:li>multimedia</rdf:li>
               <rdf:li>camera</rdf:li>
               <rdf:li>screen</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>content</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>tutorial</rdf:li>
               <rdf:li>lifestyle</rdf:li>
               <rdf:li>selfie</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>education</rdf:li>
               <rdf:li>influencer</rdf:li>
               <rdf:li>popular</rdf:li>
               <rdf:li>live</rdf:li>
               <rdf:li>famous</rdf:li>
               <rdf:li>fashion</rdf:li>
               <rdf:li>entertainment</rdf:li>
               <rdf:li>app</rdf:li>
               <rdf:li>community</rdf:li>
               <rdf:li>watch</rdf:li>
               <rdf:li>laptop</rdf:li>
               <rdf:li>device</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>set</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-10-27T10:01:25.131+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULdatpVpJ6&#xA;V1eQQS05cJZURqHvRiMNLSgfMWg021O0r7zx/wBcaKaKUeaPzA0TRtMae3uIb68f4be3ikV6t/M/&#xA;EmijMfU5xiG/NzNFopZ5VyiOZSPQvzk0i5VYtWt3s5+hlj/eQk+P8y/j88xcfaET9Qpzs/YsxvA2&#xA;PtZlbeZNBuYRNFfw+mdwzOE/4lTMuGeEuRdZk0mWHOJXf4h8v/8AVztP+R8f/NWX0Wii7/EXl/8A&#xA;6udp/wAj4/8AmrGitKttq+k3UvpW17BPKQSI45UdqDqaKScaKKReBXYqo3V7Z2kYkup47eMniHld&#xA;UBPhViMaVC/4i8v/APVztP8AkfH/AM1YaKad/iLy/wD9XO0/5Hx/81Y0Vpeut6RIpaG7inC0BELr&#xA;IQT0rxJyvJkEObKGOUuSWy+ZFaSVQ6WSxMUT60yIZaCtY6seQ3ymcpkXAgivi2Y4xsiQN38EXHr1&#xA;kkIN5cQ20pNB6sixhgOpXkRk9Pl4x5hGbFwnZU/xF5f/AOrnaf8AI+P/AJqy+i1UXDzDoB2Gp2lf&#xA;+M8f/NWNFaTAGu46YEOxVTubm3toHuLmVIIIxyklkYIigd2ZqADFUr/xl5Q/6vmn/wDSVB/zXkuE&#xA;9yaKyfzx5MgheaTXbARxqWYi5iY0ArsFYk/IYCCEiBJoBgd1/wA5G+UIroxwafqFzbKaG5WONQR/&#xA;MqO4Y/TTKfGDnjs3JV7M8g88eTZoY5k1ywCSKHUNcwq1GFRVSwIPscuES4BiQaXHzn5SFT+m7Bqd&#xA;At1CWPsAGwiBPRidhbAdS/MnW1mkuknS0s0NREURgFB/aZgWJPtm2jooAb7l0E+0chlY2CeeSfOG&#xA;lPZXF3qmpw2DXMgMFjeXpaVUVQDIVuH5J6j1YKNgtO9cwNTj4ZUHa6OZnHiZtaXlpeW6XNnPHc27&#xA;14TQsro1DQ0ZSQd8xqcpVxV2KuxV47d+VfLt95o165v9Ij1rUry7P1cXD0AERMZRWJHEBFG2UYtZ&#xA;LxPDlt3OwzaasIyQPTdEJ+XOhNHMW8jWSukTtCpnUh5AKomzbcjtXM2cyBsbLrsWSRkBLYMJtfIf&#xA;mqHUo5bvSE0vSUlMk8EXDgVJoEHBnPUg17gdc0WWEyTPIL/Q9Vi1OLhEMUv2pzd+UG1mOPT7RIba&#xA;8YrwuU+EqQ4JrxVSQYw1d9vA5TijxS4R1Z5cxhHjkeTI9G/K6PQrWS4k1Z57hlpIZQUgA67LVjWv&#xA;f8My56ARjfE6+Pa5nKuHb7Uqu/L3l68uhNf6ZbXrg7tJGCWH+sKNmNh1M8Z2OzmZtPHIN9iyz/lU&#xA;35cf9WC1/wCBb+udB4ku95fjPexnzT5O8seXfMfku70PTotPuZtbghllhqGaNkfkp36HJCRINsoy&#xA;Ju3seUMXYq8w/NDS9P1b8wvIOmalAt1YXB1YzWz14MY7WNkJA8GFRluM0CzBoFBN+XWihiF8iWZU&#xA;HY+um4/4LJcXm0eLNP8A/lU35cf9WC1/4Fv65HxJd7ZxnvSbVNEsPL139V0G1isIGX1FiQEKZmFA&#xA;7dz9kDNNr5k5Bbvezo3iJTdNJ0nzHYh9Z06O6jtDzhMoqvqgU5Jh0kyBKQ5U4+rgIyEQd7Rl55Q8&#xA;ueYEjbWtPivhblhb+qCeHOnOlCOvEZk6CwCXE1UyCAGCX/k7ytZ+YL4f4Tgk0W2VIVkMbACZgG5i&#xA;nxuDuu22bbMRHAJAjxPM/gOs02fLPUmJEvCHUC/2nuUtU8v/AJZ3vlvzH+jvL0dvf6dpVzc/WODK&#xA;I5VicqByIbkCKjbHwskYxlL+Loyxa2OTKYQJIj1qnpH5b6mlx5Q8vwcuTppVkWY9Swt05dfc5Xlw&#xA;kDibydyyvMdXn357gN+XF2jbo9zZqy9iDcx7HLMX1M4c0Ff/AJf6JHdyJZeTtLnthT05XSNSfhFa&#xA;j51yQl5tByT6IPzV+WGi3Xkq9GneXLK114xhoVt0RWDJIGIRx3ZFP6srykkEBytHlrIDI7PEYUR7&#xA;V5QkQEAAlDSRq9W2qiMeUlT4A09swhIVye1GoxgAcP4/Hf8AB9CaF+WvkhtE09rvQLJ7s20JuHeB&#xA;C5kMY5lqjry65nRmaeJ1GW8kiORkfvdrH5aeV1tFfSPLumG8SWN+MkaRBkVwXUOI5eNQKV4/LfLI&#xA;T33LjZJTrZJm/LDUDN9d1G+tvTjrJ6fxiG3A3JHIfHxH7bU+QzOGujW4dR/JkydiF2jr+T2t6tBp&#xA;CWtrquqyQeqbiaAOWCivEuQaNx349h75rparjldu+hocmDH5BNvyPght/L+t28KCOCHXb+OKNRRV&#xA;RWUKoHYAYcvP4LN6LlTB2KuxV45ptw6ebPMrMxKx6zKFB7Awwk0+lq5iZpCOogT5feXc6eBlppD3&#xA;sqkvLn02MEbTygfBEpoWPYVOw+Zzo5iMRZdGN2Cebh+Yml3ejzXGvx/VNY1CHT5tNt7WPhH6/IhV&#xA;mk5SPXiVLUXxzX5cpnCQA6FysHCJg9yeafpWqXWq27W2pyWMVtya6hWGKQzLUDhycEx/Mb5puzZ8&#xA;MztvTtu1D+7HdbKNT0xbq3Cq5V03Ukmh+eZmrxnMOe7rNHqfCly2KR2tsIpOctC6n4QDUAjvXL+z&#xA;+yTE8eTn0H63I1vaPEOGHLvQuq6JrMmr6hL9SuJopJHNu0b8QKts3fantlwIp0RibOyT6hY6jZ3P&#xA;k5L6N4pG8y27KH68fSIwkjf3N+nBANvbsxmx2KvOvPJJ/NL8uiRQ/wC5nb/ozTLYfSWQ+kot71ub&#xA;fEep75txj2abU5NRKIWLGg98qzyjigZy5Bsw4jkkIjmWNt5gGrX9zaqgEdpxHqhvjZjXkPkKZzfa&#xA;Oo8SETw8N/N6vD2WdNASMiTPp0/tR+m+YbVLj9GJy9W3Tm5A+ABjWhNeu+Zekz4vAEMnpuxbga3s&#xA;3MD48aIJ5dU1bUC1CDQexzb6TRRxR9JsHd0mbIZHcUgtUdriW0CBpJPTICL1JaQ7D32zSdrG8oxj&#xA;ydj2dDhhLKeg/ax6/wBB1Gy0bzPdSWctvBLpF/yMjct/qzgVO1fuzYnIZAAnk6LT4RHJYFWnH5Q3&#xA;tdK0nm3GOHT4F+bGJFVR75sNXj/ciuZpySfUXqmaRk8+/Pb/AMl3c/8AMVZf9RKZZi+pnDmr63cM&#xA;NVljWpaqAKOpJUZt9LD92D+Objlbq1he6bpRv7inLtAD8X2S257fZyEdTEyoLLYJLpP5HeUri5h1&#xA;yK+uZYZlS5htzw9MSkh6uAN15dU+gnNN4XDOz0LtD2lMw4QE08v2p1uG4aCcRyQsyorCocBiA1Qf&#xA;h7eObmeq4KsOrjugr76zZ3DW9ypjlXqD3HiPEZnY+GYuPJBVE8qSebdBv9PN09lFI0fG4VA9WQli&#xA;pUlajcV3Ga3tUChHq5Gly+HMSq6Yzof5Yy+X9biMEZu3hnVXv2KJyRXH2Y+TFeniSc1uHGIjzZa3&#xA;WzzECqiGX/kt/wAcbX/+2/qP/E1yWXmPcxk9Cyti7FWioLA9xirxS1avmnzcv8urufvgi/pmv7Sj&#xA;vE+TvezJekhmHl+9jZnheglbdD3IA3H8cy49oHPKjtQ/tcHVaHwhxDcfimJefdZs9X82+U/LemzR&#xA;3V5b6tHqN6ImD+illyLK9D8JILbHfbMqAoEuJEUCXoiQQpI0qIFkf7bAbnKBAA2Bug5JEAE7BLvM&#xA;Fw8VvGFNFdiG96DNl2dASkfJqmUg+te+bnga1PVtA1CTWNRmNkZ0mkcwMJUShLVDdfwOc8JbNRju&#xA;dkpvtOvLG48nx3Ufpu3mW3ZRVW29Ij9knCTd+5v04IBe3KtB1rvXMZsc7BVLHoMIFq8u/N/T47vU&#xA;PL2pLd+hNp8WoGCFTxkkkmSGMcWBBHE0r86d8tw5TjyAcNgnfyHVjnwienn6qNbeZ6BA6f8AWrW2&#xA;EVzctcyVr6j9QKDavf6c3mn1GLOLgQfx3NUNJlwR4chJPe1qklxLp1wIGKy8GKMOtQO2aLtvUDxI&#xA;Y+g3P6Ho+wcURLjkNrp5pFPPE/OKRo3PVlJU/eMrMQeYfQ5QEhRFp95OuuGoTRMC3rJyL+BU13+d&#xA;cqy6Keeow5h1Hbc448QnLkDXzZmktPst9GY2Oer0hqiB3EWPx7nmJw0+o3sX9q97K9uow0VuZ4yy&#xA;iQcggKg/EAxI+W2OHjzZzkmK/Gzi66cMWDw4m7/BSzUdF1C10TzHcSW3oW/6I1AAGRHpW2eg2NT9&#xA;2ba+ToMMTxhl/wCVXleG18p6FqE0pmlm0+1miSnFU5wqw7nkRXLtTrTKIgBQGzeY7lnmYCXnv568&#xA;v+Ve3Ven1qyp/wBJKZZi+plDmmFlCLjz3OpFVtkWUg9K+mgH4tXNnKXDpB57faWkc0Z55KvZwWxN&#xA;PVL1p1oF4/8AG2YWm5krkSHyhrz2Wgaxp0xZJtNilntOR34MDQCng5H/AAWWZ8dyB72MJbEIbyBI&#xA;1hLblwUFwSrgns9Avy3AOWagcQLHGaLN/MWgQ6vZmOojuo6mCbwP8rf5JyjSao4pX/D1bpC1W2tY&#xA;9G0T0oQGNvGW+IheclK7kkAcm8TlWbKckzI9V5B5pBompyapZzm2ijKSRtO4uYXLsGBZ6c+/WgGS&#xA;vZxeE2E6/Jb/AI42v/8Abf1H/ia5Xl5j3OdJ6FlbF2KpXf67Hp936N1GfScBo5U326EEHwOZWLTH&#xA;JG4ndBNPLdEltrm+8/XqfEq6rC8TdD8SKh6/PI5NB40hiJouVh1JxESG4pCay91daXd29lMba6li&#xA;dIJ1YqVcqeJ5LuN+4zO0vYGPECSeKf2D4MtR2nLJsNoor8mPJlvouiPfXdoq65PJJFPd8/ULRBqr&#xA;xP7IPfue+YeqhKEuEuNKfFyejZisUi83tw06J/CUD71b+mbTsnfIR/R/SGE+TCL7WYLNVaYn4wSo&#xA;Xc7Zl6vtbBgmYTJ4h3By9N2blzR4o1SV6jrVhf6vqN47TejcSs1mqN6fFDQhmADVNa985Qa+B5mQ&#xA;9zmnsfNEDhjE9999/qpSttZtkbQEld3/AEdrkeozORU/Vo049urb9MlDtHGAQSUjsfKOQiLHf1fQ&#xA;el6pZapZR3lm/qQydD3B8Dl+PIJiw67Nhljlwy5u1WUx2bMPEA/fmRgFyaS8m83QG/8AzC8qWUcp&#xA;hbUBeCSenMp9UiE6cFb4d2qDtmyOXw4EEAguHm0QyHjEjGUaqlv1+MSukg+EMQD9OYus9n5D95pz&#xA;R7v1H8e93+n7TBHDlFjv/W1c39rFAxDAihr4Ad65gabsjPmymee4xH1E9a/HNy5ayEIiGHeR+kDz&#xA;YcLLy6wqNRkjH8jQsT967ZUcmUH6b+L23i6jrAfNHaR+h7e4b6nPJNMVoS68RxqCaZuexOI5Dx0N&#xA;tnnPaeWc4Y8UQIcX21smkl8kcbSO3FEBZ2PQACpOdKY1u8MZULKRzee2v/qsdjo9xfwWPL1mUsOS&#xA;s/L9hH4injmk1OITmZXVuvlrbO0bARGl65aavpPmg28Jtnh0bUGktmapVTbsuxJq1Cd8wsuEwrru&#xA;5Ojzic9tntP5eKP8A+WW7/omxH/TsmYU+ZdjLmyHIoeZfn3dOnk9rcH4JZ7Uke63KGuZWCAMSe5l&#xA;DmyzQLU/4i1y7I25W8KH5Qq7f8SXLdRP9xjj/WP+yLVHmUs823aTap6Kmv1ZQjjwZhz/AOIsMcEC&#xA;I33/ANjDId2OXcMLhWcb1VDTaqswBU+IPhlwa0SpKkEbEbj6MCUf5a/NTTJrcQ64/wBXuk2+sBS0&#xA;cnuQgJU+O1MytZ2JMG8W8e7ubI5O9V1rX4fNdjeaZoNZxF6Tyyt+7VqsTQc+J2498wc2hngAlk2J&#xA;6ImeIUEAkGo3bWVmoVjbyxuU+AcViYcqH6MGShFrpX/Jb/jja/8A9t/Uf+JrmJl5j3OZJ6FlbF2K&#xA;pV5j0ptQsCIv96YqtF7+K/TmVpM/hz35FEhby2LyN5XkN3Nc61qmm3V7KXv7S3ungiLq1F5RhaGg&#xA;A65k5o5vEMog+RCRMVWy3/lX3kXp/iXVv+k5v+aMeLV90/tXiHkrxeTvKVunCLzdrcKDfiupSKPu&#xA;C5VPFnkbMSfgU8Y8nf4c8pf9Ttrf/cUk/pmNZ7gvijyU5vKnkudOE/nLWJUrXi+puwr40K5OGWcT&#xA;cdijxB5MO81aPb6Pqt1p1vLcTwwhCkt2xeZucav8TMFJ+1tt0znO0JmWeRPPb7g9h2Z/i8fj95S1&#xA;PsL8hmEXYBHt5f1f0I7xrd0gcfu3cFQwI5AqTsQR75nYezsuSBlEfDr73VantnT4cohMn31Yvu26&#xA;vZvyi/5Q2P8A4zy/rGZug/u/i6jtj+/+ATvzHNcQW5YL6ls68ZB/KwNVaubnSREj/SdTJ55qWi6B&#xA;rd9a3Wpaheabd6aJDZXVlMbdx6wCy/vFViKqoHbauZurwzocItYTpLNI8ieQ9avb610zzBrd5Pp5&#xA;j+tmK5mZV9dSyHmI+LV4nocxJavPHmSPiWz4BvXvy88i6LHanV9a1yCO+nS0t/UnmIeWT7K/3Xt3&#xA;yB1WWQomx72eOcoy4o7SHULJvyw/LaFgk2vajGxUMA15QlWFVO6dCNxlPEe4OSe1dQP8pL/TH9a1&#xA;Py6/LJGDJ5j1BWHRhe0P4Jk4ZZxNjYtWTtHLkjwzmZR7jIkfei2/LPyk2mz6ha6tqt7DCrn95cvL&#xA;bsyivCSiUIO1RXMjHq8pkASfm4GpIOKXLkxhtU07y+WtYry6sFlUzGC2uLmOMn7NQsbqvI8evXbN&#xA;hLFGRsh57HqckRUTQTTy55R0XzBLKsk97GL2B3lubeWY3M6S05JI7eo7oyt8QbrmNqvTAV3ub2fk&#xA;MsxkedPbtD06DTNF0/TbcOILK2htoRJu/CKMIvLpvRd81JNl3ZRuBDEvzF8t6ZrmmQxap6n6OSSt&#xA;0YiyuAPiRgVBO0irmTp5GjEcyt0bYcvl/wAlQAhPMmsxhjVguoXi1NKVNPYZd4GoP8J+SeMeSrY+&#xA;S/KeoySmy1vWrmQUab0768ZtxQFqb9shlGaAHGCO61Ege5rUfJXlLT/TGoa1rVsJamL1b28XlwoT&#xA;SvhUZSMklMgOdIT9B/l//wBTLq3/AHELvDxzY+JHyX2H5feQdRd0sdS1W6dBydY7q6YgHuaDLfze&#xA;YfxH5pEge5Um8jaDolzFLbXOpCT7RW5u7lUNOlUYpy+nbJRyyybzN13qRI7RHyCKmktZYWhMoCuC&#xA;GZHMb77bOjBh8wcsJiWI0+Ufwy+RZT+W2iafo+gzQWAcQzXUk7GSQys0jqnNuTVbcjvmFmHqZWTz&#xA;5srypXYq7FWJ+btPiuCzPpbPLT4byJjWn+UFH/Es22gymP8AHt3FhIMRh8ualO3p2tnIxP7ZUqPp&#xA;ZqDNtLVwjvKQa+FOrPyTpEKEao7XNz0aJOSxp9IAZj+GavUdrzO0Nh9rMY+9Df8AKvPK3+/Ln/gv&#xA;+bM1XiFHgh3/ACrzyt/vy5/4L/mzHxCvghhf5lafev5ju7pIXeCZIvTZVY7Rwohrt4rmh1kD4pNP&#xA;Y9l5Y+ABe4v7yx6DTNVCxutnMaAEH0mI8fDMURkDdOw8WHePmyHWtf1e+02y0uHTbi29HkXY8pPU&#xA;HGh2KAjc/RmwnrspFRBjfPzdV/J2GWU5MhjPex0oj4/2vUfyw0+7sfKcMV1GYpHkeRVPXixBBzK0&#xA;USMe7qe1ckZZiQWVsqspVgGUihB3BBzLBp1zGfMXkTSNR0+7S3iaG5lhkWL034qXKkLUNVQK5nY+&#xA;0csRV2PNjwi3kf5GeQ/N+n33mSxvJ7nQLmD6l6ihA6y8lmYUevFuIP7JPXKcsxs25t6oor8+PKXm&#xA;V9E0m3TULrWpZ75Ujt/SoFZo2AYlSQNzTfHFIWjCKO5T3yt+X2n/AOGdKj1kTQalDaxx3ESMKKVF&#xA;KbKwrTrvkJZN9mvJASNpn/yrzyt/vy5/4L/mzI+IWHghN4NI0+z8t3ei2bP6c/J0aSpIkIFKkAbV&#xA;UZLHkqYkWOXDxYzEdXlet+TZdSnhae3mR7diH4oTyWu61+ffN2MkT1ecOKYNUXoP5baBdQ3rXskL&#xA;QW0EZihVlK1JoKKD2UDMPW5Rw8Idj2dglxcR2D0XNW7l2KoHVrCe6gIt5fTloVIP2HU/ssN8vwZR&#xA;E7iwgh5xqXkjXWdhFp/Kp2KslP8AiWdFh7SxVvL72owKzyv5b816B5ktb+axdLJ+UVyUeOT4GHcI&#xA;zHZqHHX67T5sBiJermNjz+SxiQWX+YtL0rXzB9fhlYW3P0gokWnPjyrQf5IzmBIhslEHmk/+AfKv&#xA;/LNP9839MPiFj4UU18v6NpGhTyzWEEqtMoSTkJWqAa7VGAyJZRgByVfMdgupol1FCZTCOMkToagH&#xA;cFQw396YY7inP0Op8KRvkWNQ6MzSBBZByQAKR9TvXYjb78eEu6nr8YF8X2s90TTjYadHAQA9Szhe&#xA;gJ7D5DBIvOZchnMyPVH5FrdirsVdirsVdiqDg1nSrjUJtOguo5L63HKe3VgXUbdR9OLfPTZIwEzE&#xA;iEuRRmLQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU&#xA;g1H8wPI+m3ktlf67ZW13CeM0Ek6K6GlaMK7HJCBPRPCUN/ytH8uf+pk0/wD6SE/rh4JdyeEoTVPz&#xA;Y8mW9hcT6dqtrqd1Gv7mzt5Vd2Y7CvEmi16nAYkc3N7P7PnqcogNh1PcHmugzeeDqt15r0bTS5uH&#xA;kaUpEWiPNuciqrHkdx+ya5EyHJ7fVx0nhx02WfIDrv3Dy+b0rSvzY8mT6dBLqeqWumXzL+/s55VR&#xA;lYGhoGoeJptkhEnk8R2hoZafKYcx0PeEX/ytH8uf+pk0/wD6SE/rh4JdzhcJd/ytH8uf+pk0/wD6&#xA;SE/rjwS7l4SjNK89eTdXvVsdM1qzvLxwSlvDMjuwUVaig1NBvgMSEGJTzIodiqT+ZPN/lryzbxXG&#xA;u38djFOxSHnyLOwFTxVAzGnc0yUYk8kgEsf/AOV3flZ/1f4v+RU//VPJeFLuTwFZL+eP5XRxPINc&#xA;SUoKiOOGdmY9gB6fU4DAjmyjikTsFCx/Pj8uLlXae+lsOPT6zC45fIxCUfflOOYmaDfm0OTGLI2R&#xA;X/K7vys/6v8AF/yKn/6p5f4Uu5xuAtN+dn5WmlPMEQp/xVP/ANU8fCl3LwFv/ld35Wf9X+L/AJFT&#xA;/wDVPHwpdy8BcPzt/K0kD9Pw7+Mc4/5l4+FLuXgLNLa5t7q3iubeRZbedFkhlQ1V0cclZSOoINcr&#xA;YqmKoHWNd0XRbUXer30FhbM4jWW4dY1LkEhQWIqaAmmEAnkkC0l/5Wj+XP8A1Mmn/wDSQn9clwS7&#xA;k8Jd/wArR/Ln/qZNP/6SE/rjwS7l4S0PzI8mXJWDT9dsLi8kNI4UmRmb2UA7nKswlGJIDPFjuVFM&#xA;bXzLaToWVSQtRUHuPnSmYkdaD0b56KUSgpfzJ8i20jQXuuWVrcptJBJPGGUnfcV8MzMdzjdOPPGQ&#xA;aWf8rR/Ln/qZNP8A+khP65ZwS7mPCXf8rR/Ln/qZNP8A+khP648Eu5eEsis7y0vbWK7s5kuLWdRJ&#xA;DPEwZHVtwysNiMgQxVsVdirsVeQ+U7FZ9R88SxWtncXa+YJ1Rr1AyheK1FeuZHOvcuUmhTJdO02k&#xA;sh1LTtI9FYyUFvGvMuCKD4q7UriYHoC1wMidy8X1HVZNRvzc3EaRxlv7i3RYkVK/ZUKPDud8pN0+&#xA;saTQY9PDhxjfv6n3vY/K50jU/LFukF7NBAIRaXUKTCJY44mdvV4llKu1fidevyzDjInaR9XV4ftL&#xA;FkhqJcQsk2OvPolfkVdC1C+8wzyxW00D37vbGZUduDljUFxWh2zNxxlW1tvb+MwjhEvq8Oj8GXDS&#xA;vLBNBZ2VT29OL+mT4J9xectSa08nKxVodOVlNGUrACCOx2yO6OPzYp5jttIj/MLyFJp0Vuivd3qu&#xA;9uqAGlt0JTwrkhdFsgbBeqZSh2KvOfP8ccn5o/l4kih0P6ZqrAEH/RE7HLYfSWQ+koxrLzJyPH9E&#xA;ca7VVq0/4HJ8PkXH9bDfz9062bRNHurW1a5NvqCeraWyV9SNlLNyKCq/YoD75WcRIN7bFztJl4Zf&#xA;L7FOPy1dfVVm0aK2sro1W1cJHGPVZgy89mI/djix4nYnNLppEZB76d5qyDjIPdb1X6vpP++4P+BT&#xA;N3wS7i8xbvq+k/77t/8AgUx4JdxW1Kd/L9vx+sNaQ868PUMa1p1pWmCigypIPOs/l+fyV5iS1ktJ&#xA;Zhpd6yrEY2ba3fcBd9sMQbDKEgSN0/8Ay8/5QDyz/wBsqx/6hkyE+ZZy5sgyKGA/mjDDNqnkyKZF&#xA;kifWlDo4DKR9Xl6g7ZZj6shyKTvHrMXm2701dN0qazn5SWJa0osCxBfgkkXq0gbkK9wRlccwM+He&#xA;w2TwSGITvn+tmUei6B6a+pYWQkoOfGKOlab02y2pebj2VHUNG0YWM5tbO2S4CExtHHGrV9iBXKdR&#xA;jlKBABb9LkEckSeVsU8u29wmoJBFOVPFY5BIQVEcRJ5EClGINK/LNLhhLJPhAeg1RjDHxHfuZn+h&#xA;vLf/ACw2f/IqL+mdBwy83mLKyXTfKsIDS2tjGrbKXjhUEjwqMHqQZeaGurLylJazpDBYPKY34qiQ&#xA;lqhSdgBjuon5oX8kiT+Vmgf8YpP+T8mOX6i2z5s4yti7FWioJB7jFXk3lGYQ3nneVhUJ5jmJHWoC&#xA;pmZiIG55CJZSiZEAcyivMPmbT9U025n0JpXMMckfKWCS3f1AKkBZUjY8a7EClcs0kvRIA3Lm5emx&#xA;A58fiCoGQBfPXmPzFc2119Us2CMgHqyUDGp3oK1HTKMeMEWXrO2e18mPJ4eI1XM/oT/RvzP0mDyy&#xA;bLULV5dSijdEZVThIWrxJNQV6/Ftmvzdnyll4gdvudRHtSVcUiePvSryR+ZN7omplr8fWbK4ok7A&#xA;ASIAftJxoDTuDm6wEQLr9Zq82oiBOV1y5PedP1CG5NtPBIJIZijxyKahlahBGbKUbiT5OoQF7pb/&#xA;AF2/5NZOZpXKNJdRKyfGT05g1375owWgjnyQ0Nq9t5q8gxu8bn9IageUUiyLvar+0hIwSOxcnTio&#xA;l7VmOzdirzrz0QfzT/Lojv8Apn/qDTLYfSWQ+ksf86fmTBoFx9Tt4frV+w5MpPFIwenIjck+AzeY&#xA;tNxCy6jWdoDEeEC5JtocXmm7Mcur38VoZFB+p2sIJUnsZZGk3/2NPfNbl1kRtAfE/qcvFiynech7&#xA;gP0m1ey0q4tdVSMoxTf49yvHxFdhnO6fHPFmFPT6jUQy4Cb+Hmmd4Hgk2NUIqK/jm9x6o36uTouG&#xA;0Mbv3zaeG12l3mCD6yumz+pbqImkJjuHCB6MppQ9RtvmBnFSIasnMJDf2Bj0XzHcetakHSNQ/c28&#xA;oalbZ+i1JplN8lwj1h6b+Xn/ACgHln/tlWP/AFDJlE+ZcqXNkGRQwT8zP+Ox5K/7bS/9Q8uWY+rI&#xA;ciun1EWOvtcFecb84pV6VXl9PtmPqv3eaEukogOfpYeJglHqDbU1+iAsxoOwzdZpxxR4pGg67Fil&#xA;klwxG6+71HRYtLtJJL5La4v5lgWSVlQRUIaVjy2+FOhO1SvjmtjrTkFx2Ds9P2dMzkDEzEBe1793&#xA;LvPxq1GzttBTUbQW+tW97Jd3HolIZIyeJjeQ8uLOakoAPf55h6fAcczO93LzRySxyE8UoiMb3B7w&#xA;PLvTjWtL+pw/WIGLRA0dW6ivf5ZudNn4jwy5vPkMW8wW0l7p9oUkhT055K+tKkQPwp05kVx1Iqfw&#xA;aMgtL9P05xqwuVa0jjCSn0YbiOQ/3TDZQ7MfozGJ2YwHqZN+SRA/KzQP+MUn/J+TK8v1FzZ82cZW&#xA;xdiqSajq7Wl49N+NKqehFMzcOn44sSXmvlOb6ynnWWIU9bzDKygkDqinqdsnjnHDO5mgA2mEpkCP&#xA;OkU3NWZTs69QCD+rMTPnx4dTDNj/ALuYo9OtH9DscWKWTDLHL64nZ4j5w/L3zDbX2oapK0dxZMZb&#xA;p7lCARUluJjJ5Dfbaoy7T6kZzLh/ha8+GWOuLqw/T7KS+voLON0jkuHEaPK3FAW2FTvTJznwxJ7m&#xA;EY8Rp6p5e/KKytpWk1pvrgVw0AhYqjJT/di0r18DmFHWY8uOVS4MnS/1uV+WlCYscUPJ6RaxpBLb&#xA;JCgjhRkREUUVQCAAAOgzJ7F15nA4pn1AGvP8fd7mntPScJ448uqne6dS9vwZrFjNK5BkmAZPjJ2o&#xA;RQ74AXREc+SGhtjbeavIMZkjl/3IageUTB13tV7jBI7FydOKiXtWY7NZJJGlOZoGNKnphESVee+e&#xA;gB+af5dAdB+mf+oNMsh9JZD6S8h/NG0ZPMIvK1S6T/ho/hI+6mdTi+l5btXHWTi7x9z1rSNUt9S0&#xA;u21GFgIp0D9fsn9pSR3Vqg5yeaHASJdHpcE/EiJR6shsrpLmASIa/stTxGVY8gkLDdlxSgaIpA+Y&#xA;rh7a0jlRObF+AHhyBNdvllWpzHHGwLb9Hpxllwk11YZrGtTWCwzmRQgD1tqVkmfj8KR71rXsFJOZ&#xA;OPtuciBGFja/0ly5dlwAJMvx0QPl7zFL5p0ez1OWOGwjt55VjjuXJWTiUJoQvxDx2y45ZynLi8uX&#xA;9rqdXihHhMftRV/ZKmi+Y7gXNq/LSNQ/c27Hats/RSo2yV8nGwj1h6Z+XpP+AfLAAqDpNjU/9GyZ&#xA;RPmXKlzZDkUME/Mz/jseSv8AttL/ANQ8uWQ6shyKXaxIHvrgd1mkH/DHLe09HLJghKIsx+4hy+zd&#xA;QITIkaBQTOz05NWnSuayHZ+r1BHGCAP5232OxOq0+EHhrfuYZ51o17AySiROBX0walWBqSQOlajN&#xA;oOyp4QBEGV9adp2L29peCQyzx45CX8UgNvifep+Qwg846SZKBRcKanYVFSPxyM9PkiN4yHwLndo9&#xA;raXLppjHlxyPD/DOJ+4vT/NF5dtrE0LzmSOFv3adAvIA0oPn1zS6o5Mc4z6c4/AvOaGOOeMgDfkU&#xA;p1G3N5pNsfWhi9O5lr6zhAfgj2FeudJqZiREhylEH5vN54EGj0Khp9h/uWFyJbNVCSn0YJQx/umH&#xA;wrU5ik7NcB6rZD+S00K/lh5cjcj1JI5eC99p5DXIziSSe5zZ82e5SxdirBfOV1B6xnhkHMfu54W2&#xA;dWXYGh6gjwzednwNUR7muTEfy/0+ZtL1x5vhi1HV7i4hYdSsdIq/8GjZou18v7yUB8XbaLFyn5Jp&#xA;qdjHYoLlWZoyQsimlQexGV4MZ1eIYBQlCzE/eD+OjkSyDDM5Dylsf0MJ896gD5Z1NhsphKAH/LIX&#xA;+OdHpOzvyumkDvI83WajVeNlBHIcnhGYLY9R/KTVJl06+tvUJEUqOqk1ADrTof8AUzN0uhw54kTi&#xA;D9/z5tc9RkxkGJp6La6m8lxBGQKmRNx/rDI4/Z/FhyeJEy2B2+DLL2nPJAwIG6e3PkrXHub10S1d&#xA;LqRnVpGYsoLEjjtsd81fGHWeGd1C38rXMGr+XLqWZKaHd3M9ygBPMXEQioh/yeNd8xJ60CRFO0wa&#xA;E+Hd7l6nE6PEjx/YYAr22OTBsW40okGil+vsUsQ4/ZcV+RBzK0ouVMZPMNa1JpfzQ8iCeUelB+lu&#xA;LOQAOVoB1PyzJ1OIRFjqmJ9JYV+ZIaaK2ZVLFZZACATsQP6Zv41QdD2tG4x97IvyyjnuvJcyMSsl&#xA;ndSLEh2rGURyKH/KZjnKdv4bnY7rdz7M5+GFSG1ke7r+lk+mam9i0nw80cfZrT4h0Oc9p9QcdvVa&#xA;rSDLXQhSv72+uoXuJN4oyKKNlBJoKDvjknkyC+icOLHiIiOZY7LaWkl0bySBGuuHp+sVBfhv8IPW&#xA;m+ZeE5tQIYIDhHX9ZKMgx4jLLI2fxsFeKTSI7TS7K3uLazaykf8A0eVJFiUMylalEZAu2++dBqMU&#xA;ccuAb0Bu8nnyGcuJrU4dPi0fXpf0zpU81zpl7DDa2lzGXeSWBlREQBaknYAZjiY2XHAiVln35aa/&#xA;pNx5Y0bRop66lp+m20V1blWBVoYUjejEcWo3gcqmDdt3GCdmYZBLA/zLAGseSz0rrSk/9I8uWQ6+&#xA;5kORSHWpJI9TuiwIV5ZGjPYqWJBGdHopwyYxwm6AackJRO4pKr2RprSeFW4tLGyK3gWUiuZgg0ZY&#xA;8UTHvCR+U9fgtdOZLufT7e9jJWk8KiRWRiPjPNGfx2pnMdrHPLNQjklHyJr4bUF7Fhp4YfVPFDJ3&#xA;SiLFd5sGX2IyfUtM1Ksd5f6YZJfhraQKstW2+F3eU1+jMeGo1OHfHDIAP50jXyoByzo9LqTwznil&#xA;KX8yI4vgbkWR3iGwkS2ugYpoYo4+LVLcY0CIT134rmJPT63WAem4gnuHPcu608tLpo1E9AOp5K9t&#xA;ot7rejxmz4fuLuUsJCRsUjp0B8M2+oxHCIQlzEB+l0OpPiTMh1JREHlHWLe/bUJ1to4o0kLxwkgC&#xA;sbDZSPfMbiFU1RgeK0u/I2WSTy3ocdSRHFKfkA8n8TmfmiBhtyZ/U9ezUq7FUm17ytp+sLykLQ3F&#xA;KCaOm/8ArA9czNLrZ4eW4YmNsJvdObROGlwuVji5MStRyaRy7Odz9otWlc0faGUzzSl3u/0I/dBU&#xA;0vTLfXTJpuoI1zbOAxiLshqu4+JSrD78ho5ET2RrtsaNm/KjyXHE8kumERopZybm4NAoqdvVzceN&#xA;PvdJxMZ/RP5Lf76/4a//AK5Liyd7Dxx3rl0v8mF+zGRXrRr/APrjx5O9fGHeyK6/K3yRa20tzcac&#xA;Y4IVLyObm4oFAqekuMJ5JkRBslnxJJF5Z/KOZ1jhtucjmiL6l6Kk9Bu2ZGXR6iETKQ2AvmEwnxEA&#xA;dWUpJptrawQuBHCnFCQCeKjsvXsM0enwnNLhAs9Xa5Z+GDL5Mo029S8t/WijMcFeMRbYsB3oO2bL&#xA;Li8M11dRdr762S6tJLdzxEo4g+DdQfvwYpmMge5BeX6po3lt75rbzXpi3bQV+rs4LBeX2iu4qHoN&#xA;/bNxnxSzRjLFuxjLhQT6H+TSbtokIH/GJ/65jjs7Unp9oZ+N5pho3kT8r9ZSV9N8vwTiEhZRxCFS&#xA;RUbO6nfMfUYM2EgT2tIyX1RWqXXlPStRa1vjcQzx8WaD7a0YBh8S8iaj/KzV/kIE25f8qTiOGx7+&#xA;qS3kf5PXtw1xeaatxcPTlLLHK7GgoN2JOwzMjGURQ2DhnUWbJTTSPy9/LXWLQ3en+XIZrcMYy/EJ&#xA;8QAJFHdT3xM5DqkZL5F5Ld6eF1M3UMottPjVgsCgBY46iiDb7NMmQbu3F4796Ai8u2EBjuzdn0lZ&#xA;XVjxCncU398jwDmk5SdqejeRtQt7TzJpYgjpJNKEuJW+0TIGj4rQgcKMp3Fa5ZmqRJG3l0RjyS4Y&#xA;wkTLh2F/Hb7XueYzksV83xRy3lmLlUKpyezdwDxkAALAHbl8VMw9RMg10LtdAI8JPVI9Qs9Lu4nt&#xA;LsRNC3xcCBVTWrGvavj1yjFkkJDh+pyspjwkz5BUsvyz8jXkCzW1j6qMAardTmnIVFR6u22bmWSY&#xA;NEuhEiQJdDyQOr+WPy00W4S01CJ7eZkEiRia9b4CSoNUdh1U4BOZQctdUELb8ogahpAR3Euof81Y&#xA;bmgaiuqY6f5O/LnWYJ7y1ga4it/96JpLi7TiAK7mSRdgMRKd0EjJaUfo38lnP2OR92v/AOubE9l6&#xA;vrH7Y/rR4w71RdA/Jx9hBWv+Xe/81ZWeztUP4ftj+tfG82ZeQvLllpdvJNZ25tLFqpp9seVVhLcu&#xA;XxEn4j0rlWqyERjj6x5+/wDYvM2y3MFLsVdirF9e0WS71F5jA8ikKFZa0oFA7e+a/PikZk07bS54&#xA;xxgWu8v6M9pfiX0WjXieTNXwp3w6fERK6Rq88ZQoG01vbx3WW3FrMyMGR24MQQdjSmZ7qmMf4N8t&#xA;/wDVnk/4GX/mrJcZYeHF3+DfLf8A1Z5P+Bl/5qx4yvhxR/mmLWNZ0STTLOJoZrh41aaVHVAgYMal&#xA;Q1OmZfZ+eGLKJzBIHcmQsJFa/llfaaiXcV4Lq8jNRCECL4GjMxr9wzI7T7WlmxGEI1fm26QRjkBk&#xA;dmQ6b5a+tRRXGqqyyKSRag0Xr1alT+OanQ5JYYmhUpORrconKh9IZIiKihEAVVFFUbAAZIm3EWzw&#xA;xzRNE4qrD6fnhjIxNhWK6t5a1RzWAi4QfYBajD/gtvxzaYNZAc9mBiUifyL5huSQY44Qe8kgI/4T&#xA;nmcO08MepPw/Wx4CjPKvlLX/AC7rEl0yxTW88RjkWBiamoKmjenuKZjdodo48+MRAPED1TGBBTi/&#xA;0Gxv7lrq80kTzvQNI6oSQBQfteGaUSLIxBQ/+EdF/wCrIv8AwCf81YeIrwDuTTS7c6ZCYLPT2hgL&#xA;FzGgQDkep+17YCbSBTzny/8AlZqV1qfDXLYJpcZPqqzAmYDoqhSSAe52+/LZTFNEMZtn8v5eeSZb&#xA;FbF9GtvqyhQqhKEcenxD4q/Tv3yq2/hDCNN/LbXNP822bKgfTLa4SdbsMoHpxtzUFftctgKUy0zF&#xA;NAxkSesZS5DHfO2m3V7p8BtY2lmimX4FFTwb7X6sxdVjMoinO0OUQkbNCmO6D5X1CXUlTUbVktRH&#xA;LyMi1UsahevUjYjKdLjnGYPKnK1mbHPGRtLlsraPpGu6HrSN9VeS2NUeSLiyulCKnioI6Kfi718c&#xA;2JNtup1GDJgoGiOQ7vL8foTTV9G0zV7lbnUNMlmmVBGrFJBRASQNiO7HESIdAYg80D/g3y3/ANWe&#xA;T/gZf+asPGUeHFUn8v2yaJe6Vp1pPZR34AleONmOxH8x7jY+2X6XUeHkEyL4V4BVBi1r+W/mCBOc&#xA;UMci1IC14OQPESBf150R7ZxT52Px5MPDKc6b5V1kOvqWYQqQeTFNqd+uYubXY62l96REs406xkt0&#xA;5TyGWYihNSQPlXNJlyiXIUGwBGZSl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3374.500000</stDim:w>
            <stDim:h>1786.500000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=153 B=204</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1786.5 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1786.5 li
3374.5 1786.5 li
3374.5 0 li
cp
clp
0 1786.5 mo
3374.5 1786.5 li
3374.5 0 li
0 0 li
0 1786.5 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1374.03 621.883 mo
1355.42 594.894 1332.07 571.54 1311.78 545.795 cv
1291.48 520.049 1273.84 490.797 1269.57 458.292 cv
1257.52 488.281 1245.4 518.466 1238.85 550.117 cv
1232.29 581.769 1231.55 615.299 1242.05 645.871 cv
1256.62 688.328 1291.55 721.212 1330.56 743.433 cv
1353.07 756.257 1373.98 767.449 1393.11 785.08 cv
1410.29 800.921 1420.02 789.396 1421.55 766.698 cv
1424.86 717.763 1401.17 661.25 1374.03 621.883 cv
cp
level3{
gsave
clp
[270.635 550.393 -550.393 270.635 1219.26 451.019 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .443137 1 ]
/C1 [1 1 1 ]
/N 1.14599 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.439216 .721569 .858824 ]
/C1 [.45098 .443137 1 ]
/N 1.16834 
>>
]
/Bounds [.961453 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[270.635 550.393 -550.393 270.635 1219.26 451.019 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rr2lpr;6Bfq>'g[p\+:Qo^h\Fo'u5=n*]W2m-O''lKRQskND!hjlGI^io8qTi8<DJh;-l@gY1?6f\"g,
f%&:"e'lamdEp4ccHa\Ybfe/OaiVWEa2Z-<`5KR2_SO((^q[Ut]tM(j]=PSa\@B#W[^ENM['R'DZ*CO:
YHG%1XfSS(WiE%sW2HPjVPU)aUSFQXTqJ'NT:VXFSXc1=R[TY4R$a5+QBd`"P`q;oP*(ifO,o<]NK&mU
Mi3IMM2@%ELPLV=KnY25K7ec-JUr?%It)orI=6KjH[C'bH?jd\G^"@UG'8"NF`__HF)uDCEcQ/>EH#l9
~>
<~rr2lpr;6Bfq>'g[p\+:Qo^h\FnaZ,;n*]T1m-F!&lKRNrkN:pgjQ,@\io/kShr!;Hh;$c>g=b03f[n^*
e^W*te'cXkd*L%`cHXSWbK@uLaiMNC`l5p8`5BI/_8*k$^V7Cp]Y(kf]",A]\$rfS[C!<IZa-j@Yct=6
Y-"h-X/i8#WMlbnVl$;eUnjc\U7n9RTV%jJSXl:@S"#k7R@'A.Q^3r&Pa%AqP*1riOH5H_NfB$WN/NUO
MM[.FLPLV=KnY25K7ec-JUr?%It)orI=6KjH[C'bH$O[[G^"@TG'.qMFEDSFF)l;@EH,uCJ;B;RT;J`s
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,rp[dk>kMtLV
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
1281.47 693.295 mo
1250.84 685.295 1218.94 673.729 1199.75 648.548 cv
1198.06 679.711 1216.09 709.192 1239.62 729.691 cv
1260.44 747.828 1285.93 760.562 1312.93 766.319 cv
1325.21 768.938 1337.79 770.14 1349.96 773.241 cv
1376.44 779.986 1399.79 795.323 1421.04 812.003 cv
1430.26 784.158 1413.11 767.963 1395.05 749.494 cv
1361.97 715.664 1326.35 705.015 1281.47 693.295 cv
cp
level3{
gsave
clp
[364.903 249.35 -249.35 364.903 1110.69 597.03 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[364.903 249.35 -249.35 364.903 1110.69 597.03 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2071.83 365.65 mo
2086.43 344.486 2104.73 326.174 2120.65 305.986 cv
2136.56 285.798 2150.39 262.86 2153.74 237.373 cv
2163.2 260.888 2172.7 284.557 2177.84 309.375 cv
2182.97 334.194 2183.55 360.487 2175.33 384.459 cv
2163.9 417.751 2136.5 443.537 2105.92 460.96 cv
2088.27 471.017 2071.87 479.792 2056.87 493.617 cv
2043.4 506.039 2035.77 497.002 2034.57 479.204 cv
2031.98 440.832 2050.55 396.519 2071.83 365.65 cv
cp
level3{
gsave
clp
[-106.43 291.921 -291.921 -106.43 2179.46 210.941 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-106.43 291.921 -291.921 -106.43 2179.46 210.941 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2144.41 421.646 mo
2168.43 415.373 2193.45 406.304 2208.49 386.559 cv
2209.82 410.994 2195.68 434.111 2177.23 450.185 cv
2160.9 464.407 2140.92 474.392 2119.74 478.907 cv
2110.11 480.96 2100.25 481.903 2090.71 484.334 cv
2069.94 489.624 2051.63 501.649 2034.97 514.729 cv
2027.74 492.895 2041.19 480.196 2055.35 465.714 cv
2081.29 439.187 2109.22 430.836 2144.41 421.646 cv
cp
level3{
gsave
clp
[-176.37 133.798 -133.798 -176.37 2238.03 364.834 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-176.37 133.798 -133.798 -176.37 2238.03 364.834 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1826.91 775.482 mo
1612.89 775.482 li
1612.89 711.786 li
1826.91 711.786 li
1826.91 775.482 li
cp
.482353 .572549 .611765 rgb
f
2120.77 231.835 mo
2120.77 694.901 li
2120.77 709.158 2109.21 720.709 2094.97 720.709 cv
1345.26 720.709 li
1331.01 720.709 1319.46 709.158 1319.46 694.901 cv
1319.46 231.835 li
1319.46 217.59 1331.01 206.04 1345.26 206.04 cv
2094.97 206.04 li
2109.21 206.04 2120.77 217.59 2120.77 231.835 cv
cp
.294118 .196078 .341176 rgb
f
1526.58 824.847 mo
1612.89 775.482 li
1826.91 775.482 li
1921.18 824.847 li
1526.58 824.847 li
cp
.929412 .929412 .929412 rgb
f
1921.18 835.356 mo
1526.58 835.356 li
1526.58 824.847 li
1921.18 824.847 li
1921.18 835.356 li
cp
.776471 .776471 .776471 rgb
f
2095.07 231.526 mo
2095.07 644.281 li
1346 644.281 li
1346 231.526 li
2095.07 231.526 li
cp
.937255 .956863 .964706 rgb
f
2120.77 669.754 mo
2120.77 694.901 li
2120.77 709.158 2109.21 720.709 2094.97 720.709 cv
1345.26 720.709 li
1331.01 720.709 1319.46 709.158 1319.46 694.901 cv
1319.46 669.754 li
2120.77 669.754 li
cp
.929412 .929412 .929412 rgb
f
1927.29 321 mo
1927.29 644.28 li
1375.94 644.28 li
1375.94 321 li
1927.29 321 li
cp
level3{
gsave
clp
[25.4815 733.29 -733.29 25.4815 1639.18 124.596 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.4815 733.29 -733.29 25.4815 1639.18 124.596 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1473.08 289.695 mo
1375.94 289.695 li
1375.94 263.363 li
1473.08 263.363 li
1473.08 289.695 li
cp
.537255 .643137 .690196 rgb
f
2074.75 401.603 mo
1947.04 401.603 li
1947.04 321 li
2074.75 321 li
2074.75 401.603 li
cp
f
2074.75 503.676 mo
1947.04 503.676 li
1947.04 423.073 li
2074.75 423.073 li
2074.75 503.676 li
cp
f
2074.75 605.75 mo
1947.04 605.75 li
1947.04 525.146 li
2074.75 525.146 li
2074.75 605.75 li
cp
f
1992.46 346.399 mo
1992.46 376.051 li
2029.32 361.13 li
1992.46 346.399 li
cp
.854902 .854902 .854902 rgb
f
1992.46 448.549 mo
1992.46 478.2 li
2029.32 463.279 li
1992.46 448.549 li
cp
f
1992.46 550.698 mo
1992.46 580.35 li
2029.32 565.429 li
1992.46 550.698 li
cp
f
1652.52 188.839 mo
1661.92 183.035 1673.28 178.947 1684.43 178.797 cv
1694.34 178.663 1703.04 185.371 1711.55 176.959 cv
1716 172.56 1718.44 166.58 1721.78 161.289 cv
1735.37 139.776 1764.81 131.209 1789.11 138.74 cv
1813.42 146.271 1831.99 167.643 1839.89 191.831 cv
1847.79 216.019 1845.97 242.595 1838.79 267.009 cv
1833.61 284.639 1825.63 302.806 1829.89 320.68 cv
1833.04 333.863 1842.82 348.455 1829.23 357.729 cv
1818.1 365.324 1801.8 365.433 1790.88 357.646 cv
1779 349.176 1773.24 334.118 1772.56 319.546 cv
1771.87 304.975 1775.57 290.594 1779.24 276.476 cv
1781.91 266.232 1784.57 255.988 1787.23 245.745 cv
1790.28 234.03 1793.35 222.122 1792.98 210.023 cv
1792.62 197.924 1788.35 185.391 1779 177.707 cv
1757.94 160.408 1741.85 184.685 1720.96 185.573 cv
1724.84 199.008 1734.23 199.217 1742.14 208.415 cv
1749.55 217.041 1752.77 230.636 1753.09 241.729 cv
1753.91 270.686 1737.2 315.66 1704.95 320.274 cv
1683.7 323.315 1675.1 310.974 1665.43 296.005 cv
1656.06 281.49 1634.66 280.946 1626.83 265.326 cv
1612.06 235.887 1627.16 204.493 1652.52 188.839 cv
cp
.980392 .847059 .698039 rgb
f
1723.53 277.921 mo
1720.79 278.152 1717.8 280.457 1715.69 282.11 cv
1713.48 283.838 1710.89 286.009 1709.63 288.567 cv
1709.24 289.368 1710.34 289.974 1710.95 289.5 cv
1712.66 288.168 1714.09 286.519 1715.7 285.058 cv
1716.65 286.288 1717.62 287.534 1719.04 288.203 cv
1720.12 288.716 1721.08 287.393 1720.67 286.427 cv
1720.14 285.183 1719.04 284.224 1717.96 283.335 cv
1720.04 282.013 1722.48 281.044 1724.24 279.44 cv
1724.92 278.827 1724.38 277.85 1723.53 277.921 cv
cp
.878431 .521569 .360784 rgb
f
1729.74 460.914 mo
1729.74 460.914 1686.71 430.363 1728.93 392.194 cv
1756 367.724 1868.81 479.968 1917.09 460.375 cv
1923.99 457.575 1980.07 290.257 1980.07 290.257 cv
2005.97 297.606 li
2005.97 297.606 1984.06 478.232 1952.28 505.71 cv
1922.74 531.248 1832.5 532.005 1729.74 460.914 cv
cp
.960784 .654902 .517647 rgb
f
1630.44 409.276 mo
1630.44 409.276 1623.82 349.061 1579.06 380.659 cv
1545.92 404.051 1507.31 537.84 1494.97 555.045 cv
1490.81 560.848 1365.56 493.058 1365.56 493.058 cv
1346.92 521.505 li
1346.92 521.505 1466.66 617.313 1506.87 614.568 cv
1544.24 612.016 1608.45 527.116 1630.44 409.276 cv
cp
f
1769.94 435.39 mo
1767.9 447.069 1764.14 458.826 1762.46 469.835 cv
1761.51 476.126 1760.66 482.495 1759.93 488.837 cv
1759.6 492.086 1754.69 504.678 1754.38 507.926 cv
1753.97 512.284 1750.43 521.505 1750.43 521.505 cv
1749.66 525.347 1748.29 531.966 1747.36 536.452 cv
1745.32 546.25 1748.36 553.449 1745.93 565.206 cv
1743.64 576.266 1741.27 587.894 1739.05 599.522 cv
1736.11 614.889 1733.4 630.255 1731.39 644.281 cv
1596.99 644.281 li
1596.88 643.714 1583.48 559.663 1583.32 558.657 cv
1581.36 545.095 1580.67 531.327 1578.66 517.791 cv
1577.91 512.531 1576.93 507.351 1575.67 502.22 cv
1574.58 497.914 1572.98 493.788 1571.57 489.534 cv
1571.15 488.218 1570.69 486.852 1570.33 485.511 cv
1566.13 469.861 1572.88 456.79 1578.63 442.635 cv
1578.73 442.403 1578.81 442.145 1578.91 441.913 cv
1580.18 438.793 1581.31 435.519 1582.32 432.141 cv
1586.39 418.399 1588.2 402.955 1585.82 389.368 cv
1585.08 385.087 1572.62 386.738 1575.56 383.541 cv
1585.2 372.996 1610.75 366.73 1619.42 366.396 cv
1624.83 366.138 1630.2 365.725 1635.48 364.255 cv
1636.15 364.049 1636.95 363.895 1637.77 363.688 cv
1638.63 363.534 1639.53 363.327 1640.38 363.146 cv
1643.6 362.399 1646.95 361.419 1648.78 359.511 cv
1651.96 356.237 1651.81 350.359 1652.79 346.234 cv
1653.64 342.753 1654.28 339.272 1654.71 336.255 cv
1655.67 330.3 1655.98 325.899 1655.98 325.899 cv
1704.29 292.245 li
1704.29 292.245 1709.56 288.567 1709.63 288.567 cv
1709.63 288.645 1709.61 288.841 1709.61 289.073 cv
1709.58 290.337 1708.81 319.522 1708.81 319.522 cv
1708.6 339.479 1708.83 363.766 1712.85 374.878 cv
1714.14 378.487 1721.18 381.904 1729.87 384.869 cv
1731.26 385.359 1732.71 385.81 1734.18 386.248 cv
1735.65 386.687 1737.14 387.15 1738.64 387.563 cv
1739.69 387.872 1740.78 388.156 1741.83 388.439 cv
1743.79 388.955 1753.59 391.303 1753.69 391.327 cv
1762.51 393.423 1767.33 399.707 1769.73 408.499 cv
1772.08 417.135 1771.54 426.237 1769.94 435.39 cv
cp
f
1709.63 288.567 mo
1709.63 288.567 1708.98 301.337 1708.81 317.369 cv
1685.9 344.471 1664.24 347.225 1652.79 346.234 cv
1655.26 335.876 1655.98 325.899 1655.98 325.899 cv
1709.63 288.567 li
cp
.878431 .521569 .360784 rgb
f
1628.46 227.889 mo
1622.5 234.871 1619.71 248.658 1617.74 264.962 cv
1611.76 314.312 1634.05 334.599 1650.26 336.038 cv
1666.91 337.516 1702.6 333.609 1712.11 288.197 cv
1716.86 265.49 1718.4 246.197 1714.16 233.895 cv
1705.29 208.113 1654.59 197.256 1628.46 227.889 cv
cp
.960784 .654902 .517647 rgb
f
1661.07 288.473 mo
1658.94 287.957 1653.85 288.813 1653.04 286.381 cv
1652.36 284.355 1656.86 273.16 1657.53 271.23 cv
1658.26 269.12 1658.98 267.226 1659.69 265.371 cv
1659.5 265.22 1659.34 265.05 1659.14 264.917 cv
1658.7 264.625 1658.25 264.427 1657.8 264.278 cv
1655.08 271.998 1652.91 280.127 1650.36 287.448 cv
1650.13 288.093 1650.56 288.836 1651.27 288.887 cv
1654.45 289.118 1657.48 290.062 1660.65 290.36 cv
1661.71 290.459 1662.17 288.737 1661.07 288.473 cv
cp
.878431 .521569 .360784 rgb
f
1665.21 300.702 mo
1662.07 301.92 1659.65 303.454 1656.11 303.284 cv
1653.35 303.151 1650.49 301.58 1647.81 302.285 cv
1647.39 302.397 1647.04 302.872 1647.28 303.312 cv
1649.03 306.452 1654.21 307.189 1657.48 307.201 cv
1660.99 307.214 1665.23 306.288 1667.3 303.205 cv
1668.28 301.75 1666.76 300.1 1665.21 300.702 cv
cp
f
1668.63 215.248 mo
1669.12 218.972 1670.61 222.688 1673.4 225.05 cv
1676.3 227.497 1680.16 228.2 1683.74 229.323 cv
1687.31 230.445 1691.07 232.402 1692.39 236.038 cv
1693.29 238.508 1692.87 241.271 1693.16 243.898 cv
1693.6 247.837 1695.73 251.527 1698.87 253.76 cv
1701.71 255.782 1705.41 256.762 1707.34 259.731 cv
1708.7 261.835 1708.87 264.526 1709.79 266.878 cv
1710.71 269.23 1713.08 271.439 1715.38 270.541 cv
1720.36 263.335 1725.15 255.707 1727.09 247.081 cv
1730.14 233.551 1725.42 218.702 1715.84 209.128 cv
1706.25 199.554 1692.29 195.25 1679.04 196.884 cv
1668.96 198.127 1667.41 205.853 1668.63 215.248 cv
cp
.980392 .847059 .698039 rgb
f
1709.55 277.06 mo
1709.55 277.06 1719.09 257.244 1730.34 269.188 cv
1741.59 281.132 1722.21 308.981 1703.73 305.036 cv
1703.73 305.036 1702.98 283.547 1709.55 277.06 cv
cp
.960784 .654902 .517647 rgb
f
1630.55 261.949 mo
1630.34 262.118 1630.46 262.479 1630.73 262.499 cv
1633.23 262.684 1635.68 262.322 1638.15 263.014 cv
1640.12 263.567 1641.68 264.927 1643.67 265.362 cv
1644.16 265.471 1644.45 264.861 1644.29 264.474 cv
1642.44 260.04 1634 259.128 1630.55 261.949 cv
cp
.294118 .196078 .341176 rgb
f
1688.49 271.795 mo
1686.42 267.939 1677.51 265.671 1674.61 269.641 cv
1674.4 269.935 1674.52 270.439 1674.89 270.547 cv
1676.76 271.094 1678.57 270.462 1680.51 270.688 cv
1683.04 270.983 1684.88 272.452 1687.25 273.143 cv
1688.02 273.367 1688.92 272.609 1688.49 271.795 cv
cp
f
1647.05 247.561 mo
1644.12 245.729 1638.43 244.807 1635.92 247.799 cv
1635.46 248.343 1635.92 249.268 1636.61 249.293 cv
1638.14 249.351 1639.55 248.73 1641.08 248.739 cv
1642.75 248.748 1644.29 249.264 1645.81 249.899 cv
1647.19 250.475 1648.34 248.368 1647.05 247.561 cv
cp
f
1688.87 256.03 mo
1687.51 251.526 1679.95 250.44 1676.47 252.851 cv
1675.68 253.4 1676.04 254.608 1676.83 254.93 cv
1678.66 255.684 1680.73 255.149 1682.68 255.502 cv
1684.39 255.813 1685.69 256.689 1687.24 257.393 cv
1688.04 257.753 1689.13 256.907 1688.87 256.03 cv
cp
f
1723.36 279.751 mo
1720.44 279.802 1717.44 281.271 1715.03 282.831 cv
1713.29 283.952 1710.28 285.693 1710.37 288.014 cv
1710.38 288.115 1710.46 288.21 1710.57 288.208 cv
1712 288.158 1713.21 287.077 1714.38 286.102 cv
1715.23 287.674 1716.42 289.457 1718.11 289.738 cv
1718.64 289.827 1719.24 289.605 1719.38 289.017 cv
1719.79 287.258 1718.51 285.569 1717.03 284.43 cv
1719.18 283.412 1721.43 282.882 1723.67 282.034 cv
1724.83 281.594 1724.76 279.727 1723.36 279.751 cv
cp
.878431 .521569 .360784 rgb
f
1759.93 488.837 mo
1758.82 499.228 1756.76 509.566 1755.29 519.931 cv
1754.52 523.85 1748.36 553.449 1745.93 565.206 cv
1692.54 575.08 1636.69 581.99 1584.61 567.346 cv
1584.33 565.463 1583.48 559.663 1583.32 558.657 cv
1581.36 545.095 1580.67 531.327 1578.66 517.791 cv
1577.91 512.533 1576.93 507.35 1575.67 502.22 cv
1571.24 484.266 1556.12 462.922 1569.62 446.006 cv
1575.33 438.854 1583.2 433.618 1588.68 426.287 cv
1595.9 416.614 1600.05 404.538 1606.49 394.342 cv
1608.9 390.52 1616.29 366.396 1619.42 366.396 cv
1624.83 366.138 1630.2 365.725 1635.48 364.255 cv
1636.15 364.049 1636.95 363.895 1637.77 363.688 cv
1638.6 363.534 1639.32 363.508 1640.07 363.56 cv
1628.93 403.136 1635.3 419.688 1641.75 426.855 cv
1648.91 434.823 1659.74 437.633 1670.03 436.885 cv
1687.2 435.622 1706.33 425.824 1716.77 411.85 cv
1722.81 403.832 1726.54 394.331 1729.87 384.869 cv
1731.26 385.333 1732.71 385.81 1734.18 386.248 cv
1735.65 386.687 1737.14 387.15 1738.64 387.563 cv
1739.69 387.872 1740.78 388.156 1741.83 388.439 cv
1743.79 388.955 1753.59 391.301 1753.69 391.327 cv
1748.15 403.677 1744.21 416.749 1741.94 430.104 cv
1739.93 441.887 1739.28 454.211 1742.76 465.685 cv
1743.46 467.979 1744.33 470.248 1745.44 472.439 cv
1747.02 475.714 1749 478.782 1751.35 481.541 cv
1753.38 483.964 1755.71 486.104 1758.33 487.883 cv
1758.85 488.27 1759.39 488.554 1759.93 488.837 cv
cp
.952941 .243137 .498039 rgb
f
1705.35 177.333 mo
1705.5 173.935 1709.23 170.476 1713.29 172.525 cv
1720.12 175.967 1726.38 180.236 1732.21 185.176 cv
1736.72 188.995 1730.8 196.714 1725.87 193.396 cv
1720.06 189.478 1713.93 186.078 1707.53 183.229 cv
1704.92 182.068 1704.49 179.507 1705.35 177.333 cv
cp
.2 .6 .8 rgb
f
2038.07 315.274 mo
2045.19 293.225 li
1951.9 263.133 li
1944.79 285.182 li
2038.07 315.274 li
cp
f
1944.04 303.586 mo
1960.87 251.393 li
1961.86 248.33 1960.18 245.044 1957.11 244.057 cv
1943.97 239.815 li
1940.9 238.827 1937.62 240.509 1936.63 243.573 cv
1919.79 295.766 li
1918.8 298.829 1920.49 302.113 1923.55 303.102 cv
1936.7 307.343 li
1939.76 308.332 1943.05 306.649 1944.04 303.586 cv
cp
f
2049 337.447 mo
2065.84 285.254 li
2066.83 282.191 2065.15 278.906 2062.08 277.918 cv
2048.93 273.677 li
2045.87 272.688 2042.59 274.371 2041.6 277.434 cv
2024.76 329.627 li
2023.77 332.69 2025.46 335.975 2028.52 336.963 cv
2041.67 341.205 li
2044.73 342.193 2048.01 340.511 2049 337.447 cv
cp
f
1383.9 458.344 mo
1362.34 449.877 li
1326.52 541.112 li
1348.08 549.58 li
1383.9 458.344 li
cp
f
1366.4 551.477 mo
1315.35 531.433 li
1312.36 530.257 1308.98 531.732 1307.8 534.729 cv
1302.75 547.588 li
1301.57 550.584 1303.05 553.967 1306.04 555.144 cv
1357.09 575.187 li
1360.09 576.363 1363.47 574.888 1364.65 571.892 cv
1369.7 559.032 li
1370.87 556.036 1369.4 552.653 1366.4 551.477 cv
cp
f
1406.71 448.813 mo
1355.67 428.77 li
1352.67 427.593 1349.29 429.068 1348.11 432.064 cv
1343.06 444.924 li
1341.88 447.92 1343.36 451.303 1346.36 452.479 cv
1397.4 472.523 li
1400.4 473.7 1403.78 472.224 1404.96 469.228 cv
1410.01 456.368 li
1411.18 453.372 1409.71 449.99 1406.71 448.813 cv
cp
f
2011.64 292.757 mo
2006.94 295.206 2001.24 293.648 1996.19 292.046 cv
1992.9 291.003 1989.61 289.959 1986.32 288.917 cv
1983.05 287.879 1979.54 286.669 1977.6 283.839 cv
1975.91 281.375 1975.78 278.174 1976.03 275.197 cv
1976.44 270.409 1977.79 265.492 1981.07 261.983 cv
1984.16 258.686 1988.68 256.973 1993.18 256.64 cv
1997.68 256.308 2002.19 257.249 2006.49 258.615 cv
2012.69 260.582 2022.48 265.404 2021.38 273.38 cv
2020.5 279.79 2017.81 289.539 2011.64 292.757 cv
cp
.960784 .654902 .517647 rgb
f
1330.67 476.237 mo
1326.09 478.71 1322.95 483.204 1320.43 488.309 cv
1318.54 492.147 1316.78 496.208 1316.73 500.488 cv
1316.64 507.501 1321.29 513.917 1327.19 517.711 cv
1330.05 519.552 1333.4 520.928 1336.78 520.59 cv
1342.5 520.02 1346.57 514.934 1349.78 510.171 cv
1351.73 507.291 1353.64 504.321 1354.64 500.992 cv
1355.64 497.663 1355.63 493.879 1353.85 490.895 cv
1353.22 489.839 1352.37 488.876 1352.07 487.685 cv
1351.54 485.591 1352.82 483.529 1353.78 481.594 cv
1354.89 479.353 1358.46 470.05 1353.43 469.551 cv
1352.73 469.481 1352.04 469.737 1351.41 470.041 cv
1349.27 471.067 1347.44 472.689 1345.2 473.47 cv
1342.89 474.276 1340.38 474.113 1337.93 474.247 cv
1335.16 474.399 1332.76 475.107 1330.67 476.237 cv
cp
f
1764.89 644.28 mo
1560.8 644.28 li
1563.16 639.064 1565.75 634.009 1568.54 629.059 cv
1573.75 619.853 1581.05 605.457 1589.43 599.15 cv
1589.61 598.99 1589.81 598.597 1590.01 598.698 cv
1604.29 605.75 1653.44 614.625 1739.05 599.522 cv
1743.32 598.77 1745.7 603.541 1748.66 608.463 cv
1752.62 615.063 1756.16 621.955 1759.22 629.112 cv
1761.35 634.062 1763.24 639.118 1764.89 644.28 cv
cp
.952941 .243137 .498039 rgb
f
2031.47 671.26 mo
2015.76 660.652 1996.84 654.479 1976.47 654.479 cv
1957.44 654.479 1939.69 659.838 1924.65 669.19 cv
1924.1 663.978 1924.06 657.916 1925.39 651.928 cv
1926.61 646.347 1929.01 640.802 1933.19 635.96 cv
1940.73 627.126 1954.22 620.583 1977.51 620.398 cv
2002.61 620.842 2016.87 627.273 2024.6 635.96 cv
2028.92 640.802 2031.22 646.347 2032.18 651.928 cv
2033.4 658.729 2032.73 665.568 2031.47 671.26 cv
cp
2064.19 708.334 mo
2071.95 676.583 2072.17 655.218 2072.17 651.928 cv
2072.17 651.669 2072.17 651.521 2072.17 651.521 cv
2072.17 645.903 2071.58 640.728 2070.47 635.96 cv
2057.83 580.33 1977.51 581.919 1977.51 581.919 cv
1977.51 581.919 1897 579.406 1884.51 635.96 cv
1883.44 640.728 1882.88 645.903 1882.88 651.521 cv
1882.88 651.521 1882.88 651.669 1882.88 651.928 cv
1882.84 654.996 1883.03 675.215 1890.2 705.488 cv
1882.4 719.534 1878 735.687 1878 752.875 cv
1878 787.436 1895.75 817.782 1922.65 835.34 cv
2030.22 835.34 li
2057.09 817.782 2074.87 787.436 2074.87 752.875 cv
2074.87 736.833 2071.02 721.678 2064.19 708.334 cv
cp
.416 .708 .854 rgb
f
2010.14 749.751 mo
2002.43 762.702 1992.67 774.432 1981.32 784.358 cv
1979.36 786.074 1976.12 788.696 1973.28 788.328 cv
1970.86 788.012 1969.84 786.033 1968.18 784.325 cv
1964.09 780.117 1960.16 775.871 1956.72 771.106 cv
1950 761.816 1945.09 751.354 1941.87 740.365 cv
1939.89 733.627 1938.4 726.448 1940.07 719.629 cv
1941.74 712.809 1947.39 706.517 1954.4 706.21 cv
1958.88 706.015 1963.21 708.252 1966.4 711.397 cv
1970.85 715.777 1974.56 720.695 1977.57 726.141 cv
1979.94 720.935 1982.93 715.877 1987.26 712.146 cv
1997.51 703.317 2013.92 707.51 2017.24 721.279 cv
2019.13 729.133 2016.88 737.531 2013.17 744.421 cv
2012.2 746.219 2011.19 747.997 2010.14 749.751 cv
cp
.145098 .427451 .568627 rgb
f
2072.17 651.521 mo
2072.17 651.521 2072.17 651.669 2072.17 651.928 cv
2032.18 651.928 li
2031.22 646.347 2028.92 640.802 2024.6 635.96 cv
2016.87 627.273 2002.61 620.842 1977.51 620.398 cv
1954.22 620.583 1940.73 627.126 1933.19 635.96 cv
1929.01 640.802 1926.61 646.347 1925.39 651.928 cv
1882.88 651.928 li
1882.88 651.669 1882.88 651.521 1882.88 651.521 cv
1882.88 645.903 1883.44 640.728 1884.51 635.96 cv
1897 579.406 1977.51 581.919 1977.51 581.919 cv
1977.51 581.919 2057.83 580.33 2070.47 635.96 cv
2071.58 640.728 2072.17 645.903 2072.17 651.521 cv
cp
f
1546.3 787.255 mo
1419.37 787.255 li
1419.37 759.887 li
1546.3 759.887 li
1546.3 787.255 li
cp
.482353 .572549 .611765 rgb
f
1415.77 835.356 mo
1403.15 835.356 li
1398.82 835.356 1395.3 831.842 1395.3 827.507 cv
1395.3 719.636 li
1395.3 715.3 1398.82 711.786 1403.15 711.786 cv
1415.77 711.786 li
1420.1 711.786 1423.61 715.3 1423.61 719.636 cv
1423.61 827.507 li
1423.61 831.842 1420.1 835.356 1415.77 835.356 cv
cp
.294118 .196078 .341176 rgb
f
1387.45 817.479 mo
1374.84 817.479 li
1370.5 817.479 1366.99 813.964 1366.99 809.629 cv
1366.99 741.335 li
1366.99 737 1370.5 733.485 1374.84 733.485 cv
1387.45 733.485 li
1391.79 733.485 1395.3 737 1395.3 741.335 cv
1395.3 809.629 li
1395.3 813.964 1391.79 817.479 1387.45 817.479 cv
cp
f
1549.75 835.356 mo
1562.37 835.356 li
1566.7 835.356 1570.22 831.842 1570.22 827.507 cv
1570.22 719.636 li
1570.22 715.3 1566.7 711.786 1562.37 711.786 cv
1549.75 711.786 li
1545.42 711.786 1541.9 715.3 1541.9 719.636 cv
1541.9 827.507 li
1541.9 831.842 1545.42 835.356 1549.75 835.356 cv
cp
f
1578.06 817.479 mo
1590.68 817.479 li
1595.01 817.479 1598.53 813.964 1598.53 809.629 cv
1598.53 741.335 li
1598.53 737 1595.01 733.485 1590.68 733.485 cv
1578.06 733.485 li
1573.73 733.485 1570.22 737 1570.22 741.335 cv
1570.22 809.629 li
1570.22 813.964 1573.73 817.479 1578.06 817.479 cv
cp
f
1291.43 379.92 mo
1287.23 378.864 1282.86 379.303 1278.53 379.728 cv
1278.07 376.142 1276.69 367.285 1276.88 367.115 cv
1277 367.005 1276.99 366.831 1276.93 366.695 cv
1276.32 365.351 1275.75 365.529 1274.23 365.377 cv
1273.15 365.271 1271.97 366.059 1271.46 366.965 cv
1269.32 370.783 1269.53 375.973 1269.38 380.352 cv
1265.21 380.588 1260.98 380.949 1257.02 382.057 cv
1254.48 382.767 1254.86 385.99 1257.02 386.846 cv
1260.74 388.322 1264.91 388.91 1269.05 389.154 cv
1268.95 392.663 1268.93 396.174 1269.13 399.647 cv
1269.5 405.956 1278.6 405.974 1278.95 399.647 cv
1279.14 396.22 1279.12 392.756 1279.02 389.296 cv
1283.61 389.224 1288.18 388.892 1292.33 386.834 cv
1295.27 385.376 1294.46 380.684 1291.43 379.92 cv
cp
.937255 .956863 .964706 rgb
f
1901.17 158.808 mo
1896.87 155.775 1890.99 154.2 1884.9 153.943 cv
1884.63 149.241 1884 144.227 1880.68 141.335 cv
1880.48 141.152 1880.16 141.122 1879.95 141.335 cv
1876.84 144.543 1876.67 149.658 1876.81 154.375 cv
1871.36 155.192 1866.23 157.05 1862.45 159.891 cv
1860.46 161.388 1860.77 165.401 1863.88 165.165 cv
1868.25 164.833 1872.49 163.937 1876.83 163.515 cv
1876.58 169.527 1876.26 176.15 1879.35 180.953 cv
1880.51 182.762 1883.44 183.035 1884.53 180.953 cv
1887.2 175.892 1886.4 169.478 1885.68 163.56 cv
1890.29 164.029 1894.83 164.971 1899.45 165.158 cv
1903.08 165.304 1903.73 160.618 1901.17 158.808 cv
cp
f
2175.81 536.454 mo
2174.11 536.177 2172.35 536.056 2170.56 536.004 cv
2171.07 530.429 2172.36 524.024 2169.5 519.384 cv
2168.83 518.299 2167.56 518.284 2166.64 519.016 cv
2162 522.707 2161.66 530.374 2161.39 536.39 cv
2157 536.83 2152.62 537.512 2148.57 538.021 cv
2145.98 538.346 2144.9 542.226 2147.9 542.956 cv
2151.91 543.932 2156.42 544.634 2160.95 544.766 cv
2160.78 549.868 2161.18 554.974 2164.32 559.018 cv
2165.48 560.508 2168.19 559.968 2168.99 558.416 cv
2171.25 554.036 2170.88 548.951 2170.57 543.965 cv
2172.65 543.514 2174.67 542.896 2176.53 541.996 cv
2178.77 540.913 2178.35 536.87 2175.81 536.454 cv
cp
f
3050.81 1466.59 mo
3084.52 1444.15 3122 1428.05 3157.08 1407.82 cv
3192.16 1387.58 3225.8 1362.1 3245.59 1326.77 cv
3245.68 1366.7 3245.76 1406.88 3238.77 1446.19 cv
3231.78 1485.5 3217.27 1524.31 3191.23 1554.58 cv
3155.06 1596.61 3099.91 1618.33 3044.99 1625.95 cv
3013.29 1630.35 2984.17 1633.6 2954.14 1645.07 cv
2927.17 1655.37 2921.29 1637.69 2929.93 1610.95 cv
2948.56 1553.29 3001.63 1499.31 3050.81 1466.59 cv
cp
level3{
gsave
clp
[-360.847 354.766 -354.766 -360.847 3349.84 1281.45 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .443137 1 ]
/C1 [1 1 1 ]
/N 1.14599 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.45098 .443137 1 ]
/C1 [.45098 .443137 1 ]
/N 1.16834 
>>
]
/Bounds [.961453 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-360.847 354.766 -354.766 -360.847 3349.84 1281.45 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rr2lpr;6Bfq>'g[p\+:Qo^h\Fo'u5=n*]W2m-O''lKRQskND!hjlGI^io8qTi8<DJh;-l@gY1?6f\"g,
f%&:"e'lamdEp4ccHa\Ybfe/OaiVWEa2Z-<`5KR2_SO((^q[Ut]tM(j]=PSa\@B#W[^ENM['R'DZ*CO:
YHG%1XfSS(WiE%sW2HPjVPU)aUSFQXTqJ'NT:VXFSXc1=R[TY4R$a5+QBd`"P`q;oP*(ifO,o<]NK&mU
Mi3IMM2@%ELPLV=KnY25K7ec-JUr?%It)orI=6KjH[C'bH?jd\G^"@UG'8"NF`__HF)uDDF)uDDF)uDD
~>
<~rr2lpr;6Bfq>'g[p\+:Qo^h\FnaZ,;n*]T1m-F!&lKRNrkN:pgjQ,@\io/kShr!;Hh;$c>g=b03f[n^*
e^W*te'cXkd*L%`cHXSWbK@uLaiMNC`l5p8`5BI/_8*k$^V7Cp]Y(kf]",A]\$rfS[C!<IZa-j@Yct=6
Y-"h-X/i8#WMlbnVl$;eUnjc\U7n9RTV%jJSXl:@S"#k7R@'A.Q^3r&Pa%AqP*1riOH5H_NfB$WN/NUO
MM[.FLPLV=KnY25K7ec-JUr?%It)orI=6KjH[C'bH$O[[G^"@TG'.qMFEDSFF)l;@EH,u<EH,u<EH,u<
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
3124.27 1590.92 mo
3163.07 1595.77 3204.97 1597.12 3238.53 1577.03 cv
3226.18 1613.55 3191.99 1639.11 3155.6 1651.85 cv
3123.41 1663.11 3088.34 1666.05 3054.72 1660.28 cv
3039.43 1657.66 3024.45 1653.27 3009.07 1651.25 cv
2975.6 1646.86 2941.79 1653.76 2909.76 1663.15 cv
2911.95 1626.99 2939.04 1616.27 2968.22 1603.35 cv
3021.67 1579.7 3067.41 1583.8 3124.27 1590.92 cv
cp
level3{
gsave
clp
[-395.311 97.3077 -97.3077 -395.311 3283.77 1571.76 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-395.311 97.3077 -97.3077 -395.311 3283.77 1571.76 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
2890.16 1607.67 mo
2676.14 1607.67 li
2676.14 1543.97 li
2890.16 1543.97 li
2890.16 1607.67 li
cp
.482353 .572549 .611765 rgb
f
3184.02 1064.02 mo
3184.02 1527.09 li
3184.02 1541.35 3172.47 1552.9 3158.22 1552.9 cv
2408.51 1552.9 li
2394.26 1552.9 2382.71 1541.35 2382.71 1527.09 cv
2382.71 1064.02 li
2382.71 1049.78 2394.26 1038.23 2408.51 1038.23 cv
3158.22 1038.23 li
3172.47 1038.23 3184.02 1049.78 3184.02 1064.02 cv
cp
.294118 .196078 .341176 rgb
f
2589.83 1657.03 mo
2676.14 1607.67 li
2890.16 1607.67 li
2984.43 1657.03 li
2589.83 1657.03 li
cp
.929412 .929412 .929412 rgb
f
2984.43 1667.54 mo
2589.83 1667.54 li
2589.83 1657.03 li
2984.43 1657.03 li
2984.43 1667.54 li
cp
.776471 .776471 .776471 rgb
f
3157.68 1063.71 mo
3157.68 1476.47 li
2408.62 1476.47 li
2408.62 1063.71 li
3157.68 1063.71 li
cp
.937255 .956863 .964706 rgb
f
3184.02 1501.94 mo
3184.02 1527.09 li
3184.02 1541.35 3172.47 1552.9 3158.22 1552.9 cv
2408.51 1552.9 li
2394.26 1552.9 2382.71 1541.35 2382.71 1527.09 cv
2382.71 1501.94 li
3184.02 1501.94 li
cp
.929412 .929412 .929412 rgb
f
2990.55 1153.18 mo
2990.55 1476.47 li
2439.19 1476.47 li
2439.19 1153.18 li
2990.55 1153.18 li
cp
level3{
gsave
clp
[65.118 787.083 -787.083 65.118 2685.93 965.029 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[65.118 787.083 -787.083 65.118 2685.93 965.029 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2536.33 1121.88 mo
2439.2 1121.88 li
2439.2 1095.55 li
2536.33 1095.55 li
2536.33 1121.88 li
cp
.537255 .643137 .690196 rgb
f
3138 1233.79 mo
3010.29 1233.79 li
3010.29 1153.19 li
3138 1153.19 li
3138 1233.79 li
cp
f
3138 1335.86 mo
3010.29 1335.86 li
3010.29 1255.26 li
3138 1255.26 li
3138 1335.86 li
cp
f
3138 1437.94 mo
3010.29 1437.94 li
3010.29 1357.33 li
3138 1357.33 li
3138 1437.94 li
cp
f
3055.71 1178.59 mo
3055.71 1208.24 li
3092.57 1193.32 li
3055.71 1178.59 li
cp
.854902 .854902 .854902 rgb
f
3055.71 1280.74 mo
3055.71 1310.39 li
3092.57 1295.47 li
3055.71 1280.74 li
cp
f
3055.71 1382.89 mo
3055.71 1412.54 li
3092.57 1397.62 li
3055.71 1382.89 li
cp
f
2732.59 1230.21 mo
2731.66 1236.17 2729.26 1242.02 2725.99 1247.72 cv
2717.79 1261.95 2704 1275 2693.58 1283.64 cv
2685.59 1290.26 2679.55 1294.31 2679.55 1294.31 cv
2678.49 1295.03 2677.44 1295.78 2676.35 1296.5 cv
2624.17 1332.11 2536.41 1374.6 2506.21 1348.2 cv
2504.54 1346.75 2503.04 1345.05 2501.75 1343.14 cv
2500.72 1341.67 2499.85 1340.07 2499.1 1338.37 cv
2486.41 1309.83 2473.83 1240.24 2466.2 1192.49 cv
2464.42 1181.36 2458.98 1143.69 2458.98 1143.69 cv
2481.18 1129.82 li
2481.18 1129.82 2507.79 1207.66 2508.85 1210.59 cv
2519.88 1241.33 2531.79 1272.5 2539.84 1287.4 cv
2540.12 1287.86 2540.38 1288.3 2540.69 1288.66 cv
2541.38 1289.62 2542.21 1290.42 2543.08 1291.01 cv
2557.19 1300.24 2594.78 1263.45 2632.63 1232.25 cv
2638.56 1227.38 2644.49 1222.61 2650.34 1218.2 cv
2664.37 1207.63 2677.93 1198.99 2689.74 1195 cv
2691.18 1194.51 2692.6 1194.1 2693.97 1193.73 cv
2694.07 1193.71 2694.17 1193.68 2694.28 1193.68 cv
2696.08 1193.24 2697.81 1192.93 2699.49 1192.78 cv
2699.95 1192.7 2700.39 1192.68 2700.85 1192.65 cv
2701.03 1192.65 2701.23 1192.63 2701.44 1192.62 cv
2703.02 1192.58 2704.43 1192.62 2705.83 1192.81 cv
2707.76 1193.06 2709.49 1193.47 2711.14 1194.14 cv
2712.32 1194.58 2713.46 1195.2 2714.54 1195.9 cv
2730.16 1206.08 2734.47 1218.06 2732.59 1230.21 cv
cp
.960784 .654902 .517647 rgb
f
2493.41 1106.42 mo
2493.08 1105.39 2492.72 1104.32 2491.94 1103.59 cv
2490.09 1101.85 2486.84 1103.03 2485.43 1105.14 cv
2484.02 1107.25 2483.83 1109.91 2483.3 1112.39 cv
2481.99 1118.56 2478.92 1120.61 2474.92 1124.79 cv
2471.59 1128.28 2471.02 1133.17 2470.47 1137.72 cv
2469.96 1141.95 2468.66 1145.72 2468.55 1150.03 cv
2468.25 1161.78 2469.54 1173.59 2472.3 1185.01 cv
2473.89 1191.59 2476.1 1198.28 2480.65 1203.3 cv
2482.61 1205.46 2485.62 1207.36 2488.3 1206.2 cv
2489.98 1205.46 2490.82 1203.83 2491.16 1201.99 cv
2493.14 1200.31 2494.47 1197.94 2495.33 1195.46 cv
2496.63 1191.7 2496.35 1187.94 2497.03 1184.17 cv
2497.82 1179.79 2497.26 1176.61 2495.9 1172.31 cv
2493.18 1163.74 2494.75 1157.81 2497.58 1149.53 cv
2502.34 1135.62 2497.87 1120.43 2493.41 1106.42 cv
cp
f
2533.27 1201.83 mo
2533.09 1202.86 2532.75 1203.95 2532.03 1204.69 cv
2531.31 1205.47 2530.07 1205.85 2529.14 1205.34 cv
2528.42 1204.92 2528.02 1204.08 2527.9 1203.25 cv
2527.79 1202.4 2527.9 1201.55 2527.88 1200.72 cv
2527.88 1200.44 2527.85 1200.16 2527.8 1199.9 cv
2527.39 1196.93 2525.2 1193.81 2523.86 1191.26 cv
2519.4 1182.83 2514.01 1174.22 2508.16 1165.94 cv
2509.37 1167.21 2510.58 1168.47 2511.74 1169.76 cv
2519.53 1178.24 2535.72 1188.42 2533.27 1201.83 cv
cp
2523.01 1202.94 mo
2521.38 1203.2 2519.86 1202.37 2518.44 1200.46 cv
2516.15 1198.14 2514.25 1195.53 2512.54 1192.73 cv
2509.73 1188.15 2507.28 1183.37 2505.27 1178.42 cv
2502.79 1172.33 2500.73 1166.2 2498.15 1160.22 cv
2501.94 1165.76 2505.89 1171.2 2509.7 1176.69 cv
2515.22 1184.69 2522.39 1192.08 2523.01 1202.35 cv
2523.03 1202.55 2523.01 1202.76 2523.01 1202.94 cv
cp
2521.1 1209.15 mo
2519.09 1211.06 2515.79 1211.01 2513.31 1209.77 cv
2510.71 1208.46 2509.03 1206.47 2507.82 1204.15 cv
2506.4 1201.42 2505.6 1198.22 2504.65 1195.21 cv
2501.79 1186.03 2500.65 1175.58 2498.51 1165.61 cv
2503.2 1179.14 2511.43 1201.55 2521.43 1208.69 cv
2521.3 1208.82 2521.23 1209 2521.1 1209.15 cv
cp
2531.23 1185.77 mo
2522.57 1174.37 2512.15 1163.42 2501.68 1153.18 cv
2500.34 1151.86 2493.87 1145.63 2493.23 1145.03 cv
2492.63 1144.46 2491.94 1144.44 2491.4 1144.7 cv
2490.7 1143.9 2490 1143.1 2489.33 1142.35 cv
2489.28 1142.27 2489.21 1142.25 2489.15 1142.22 cv
2488.92 1141.89 2488.72 1141.57 2488.48 1141.27 cv
2487.73 1140.3 2486.45 1141.53 2486.88 1142.48 cv
2487.99 1144.8 2488.95 1147.12 2489.8 1149.49 cv
2490.24 1150.73 2490.65 1151.94 2491.04 1153.18 cv
2493.23 1160.06 2494.67 1167.1 2496.04 1174.17 cv
2496.48 1176.49 2496.92 1178.63 2497.38 1180.87 cv
2498.57 1186.69 2499.9 1192.45 2501.81 1198.07 cv
2503 1201.65 2505.47 1206.75 2508.85 1210.59 cv
2512.54 1214.8 2517.33 1217.46 2522.8 1214.9 cv
2524.91 1213.92 2526.28 1212.53 2527.16 1210.91 cv
2529.3 1211.04 2531.49 1210.39 2533.71 1208.74 cv
2541.57 1202.91 2535.56 1191.47 2531.23 1185.77 cv
cp
1 .996078 1 rgb
f
2452.81 1104.1 mo
2451.32 1101.49 2449.89 1098.48 2450.74 1095.6 cv
2451.26 1093.84 2452.57 1092.43 2453.86 1091.11 cv
2456.39 1088.53 2459.32 1085.88 2462.92 1085.62 cv
2468.58 1085.22 2472.75 1090.68 2475.37 1095.7 cv
2479.95 1104.48 2483.3 1113.83 2486.64 1123.15 cv
2489.57 1131.32 2492.5 1139.49 2495.42 1147.66 cv
2495.81 1148.73 2496.17 1149.98 2495.57 1150.95 cv
2493.04 1154.99 2486.9 1146 2485.41 1144.47 cv
2481.4 1140.34 2477.42 1136.18 2473.57 1131.9 cv
2465.83 1123.29 2458.58 1114.16 2452.81 1104.1 cv
cp
.294118 .196078 .341176 rgb
f
2461.77 1112.32 mo
2465.25 1112.16 2469.02 1112.24 2471.8 1114.33 cv
2474.76 1116.56 2475.81 1120.47 2476.49 1124.1 cv
2477.86 1131.54 2478.45 1139.09 2479.03 1146.62 cv
2479.28 1149.87 2479.53 1153.19 2478.63 1156.32 cv
2477.38 1160.66 2473.83 1164.27 2469.51 1165.59 cv
2468.1 1166.02 2466.57 1166.22 2465.15 1165.81 cv
2462.98 1165.17 2461.46 1163.24 2460.21 1161.35 cv
2456.46 1155.64 2453.87 1149.19 2452.51 1142.49 cv
2451.23 1136.15 2449.64 1128.5 2451.02 1122.11 cv
2452.22 1116.53 2456.04 1112.57 2461.77 1112.32 cv
cp
.960784 .654902 .517647 rgb
f
2881.67 1278.07 mo
2880.95 1283.17 2880.02 1288.25 2878.96 1293.31 cv
2877.08 1302.25 2874.84 1311.15 2872.9 1320.1 cv
2871.95 1324.45 2871.07 1328.81 2870.35 1333.19 cv
2866.28 1357.48 2866.61 1382.15 2868.9 1406.72 cv
2870.17 1420.34 2872.03 1433.93 2874.06 1447.41 cv
2874.4 1449.68 2874.76 1451.95 2875.07 1454.24 cv
2876.12 1461.64 2876.95 1469.12 2876.56 1476.47 cv
2660.3 1476.47 li
2660.99 1474.15 2667.85 1450.47 2668.37 1448.56 cv
2668.42 1448.41 2668.44 1448.31 2668.44 1448.18 cv
2669.09 1445.94 2684.38 1384.45 2684.56 1383.7 cv
2686.42 1376.53 2688.2 1369.24 2689.25 1362.1 cv
2689.69 1359.05 2690 1356.04 2690.13 1353.07 cv
2690.16 1352.66 2690.16 1352.25 2690.16 1351.83 cv
2690.16 1350.42 2690.03 1349.02 2689.82 1347.68 cv
2689.67 1346.68 2689.43 1345.67 2689.17 1344.72 cv
2689.07 1344.31 2688.94 1343.87 2688.81 1343.46 cv
2687.42 1338.97 2685.13 1334.82 2682.78 1330.62 cv
2682.45 1330 2682.08 1329.38 2681.75 1328.76 cv
2681.05 1327.52 2680.41 1326.27 2679.76 1325.02 cv
2679.44 1324.39 2679.12 1323.76 2678.81 1323.11 cv
2678.5 1322.47 2678.22 1321.82 2677.93 1321.15 cv
2677.8 1320.9 2677.68 1320.63 2677.57 1320.35 cv
2675.62 1315.33 2674.81 1310.3 2675.07 1305.25 cv
2675.1 1304.7 2675.12 1304.16 2675.2 1303.65 cv
2675.23 1302.98 2675.3 1302.31 2675.41 1301.64 cv
2675.51 1300.81 2675.64 1299.99 2675.79 1299.16 cv
2675.95 1298.28 2676.14 1297.44 2676.36 1296.56 cv
2676.69 1295.2 2677.03 1293.87 2677.47 1292.56 cv
2677.57 1292.27 2677.65 1292.02 2677.73 1291.76 cv
2678.09 1290.76 2678.42 1289.75 2678.76 1288.8 cv
2678.89 1288.46 2678.99 1288.13 2679.15 1287.82 cv
2681.59 1281.55 2684.82 1275.52 2687.99 1269.95 cv
2688.09 1269.77 2688.2 1269.61 2688.27 1269.43 cv
2688.74 1268.69 2689.15 1267.94 2689.56 1267.19 cv
2689.97 1266.44 2690.36 1265.69 2690.75 1264.92 cv
2691.47 1263.5 2692.14 1262.08 2692.76 1260.67 cv
2693.04 1260.02 2693.3 1259.4 2693.53 1258.79 cv
2693.64 1258.55 2693.74 1258.32 2693.82 1258.11 cv
2694.33 1256.83 2694.77 1255.55 2695.21 1254.27 cv
2695.55 1253.26 2695.88 1252.24 2696.19 1251.21 cv
2697.92 1245.43 2699.05 1239.5 2699.8 1233.34 cv
2700.11 1230.94 2700.36 1228.46 2700.57 1225.96 cv
2701.06 1220.27 2701.47 1216.17 2699.82 1210.55 cv
2698.69 1206.65 2684.79 1198.48 2689.74 1195 cv
2690.26 1194.64 2691.98 1194.17 2693.97 1193.73 cv
2694.07 1193.71 2694.17 1193.68 2694.28 1193.68 cv
2694.61 1193.61 2694.98 1193.53 2695.31 1193.48 cv
2696.01 1193.35 2696.7 1193.22 2697.37 1193.09 cv
2697.68 1193.01 2698.02 1192.96 2698.33 1192.94 cv
2698.71 1192.86 2699.1 1192.81 2699.49 1192.78 cv
2699.95 1192.7 2700.39 1192.68 2700.85 1192.65 cv
2701.01 1192.63 2701.14 1192.63 2701.24 1192.63 cv
2701.55 1192.63 li
2702.94 1192.7 2704.33 1192.78 2705.83 1192.81 cv
2713.38 1192.95 2721.79 1192.52 2729.5 1190.46 cv
2730.17 1190.28 2730.81 1190.09 2731.46 1189.89 cv
2732.1 1189.7 2732.72 1189.51 2733.34 1189.28 cv
2733.93 1189.09 2734.53 1188.89 2735.09 1188.66 cv
2735.71 1188.42 2736.3 1188.15 2736.9 1187.88 cv
2737.84 1187.45 2738.75 1187.03 2739.66 1186.54 cv
2744.25 1184.04 2748.19 1180.66 2750.95 1176.05 cv
2753.71 1171.41 2755.17 1166.22 2755.92 1160.83 cv
2756.23 1158.69 2756.42 1156.53 2756.52 1154.36 cv
2756.54 1153.98 2756.56 1153.59 2756.57 1153.18 cv
2756.66 1149.15 2756.67 1145.11 2756.57 1141.19 cv
2756.49 1139 2755.95 1121.47 2755.9 1120.41 cv
2755.54 1114.09 2755.15 1109.94 2755.15 1109.94 cv
2756.75 1108.68 2758.87 1107.94 2761.37 1107.6 cv
2762.29 1107.47 2763.25 1107.39 2764.25 1107.36 cv
2765.54 1107.34 2766.88 1107.41 2768.28 1107.54 cv
2770.98 1107.8 2773.92 1108.24 2776.91 1108.88 cv
2786.04 1110.9 2795.91 1114.54 2803.16 1117.47 cv
2805.91 1118.58 2808.27 1119.61 2810.07 1120.41 cv
2812.47 1121.47 2813.86 1122.13 2813.86 1122.13 cv
2813.83 1122.24 2813.81 1122.39 2813.78 1122.65 cv
2813.4 1124.9 2811.87 1134.15 2810.53 1143.71 cv
2810.09 1146.91 2809.66 1150.16 2809.3 1153.18 cv
2808.73 1158.23 2808.32 1162.69 2808.39 1165.32 cv
2808.55 1171.59 2809.45 1178.37 2812.05 1183.55 cv
2812.8 1185.05 2814.29 1186.27 2816.31 1187.37 cv
2817.09 1187.79 2817.97 1188.17 2818.91 1188.55 cv
2819.28 1188.7 2819.64 1188.83 2820 1188.97 cv
2820.31 1189.09 2820.64 1189.2 2820.98 1189.3 cv
2821.57 1189.48 2822.19 1189.66 2822.81 1189.84 cv
2836.27 1193.63 2857.83 1194.21 2864.34 1197.42 cv
2875.52 1202.94 2873.73 1218.33 2877.34 1228.46 cv
2883.11 1244.71 2884.07 1261.03 2881.67 1278.07 cv
cp
f
2941.84 1292.61 mo
2927.97 1313.47 2909.33 1331.18 2887.8 1344 cv
2883.21 1336.39 2878.11 1328.35 2872.9 1320.1 cv
2871.95 1324.45 2871.07 1328.81 2870.35 1333.19 cv
2866.28 1357.48 2866.61 1382.15 2868.9 1406.72 cv
2872.51 1405.85 2875.97 1404.97 2879.24 1404.12 cv
2882 1420.05 2885.33 1436.01 2886.62 1452.08 cv
2886.64 1452.54 2886.69 1452.98 2886.72 1453.44 cv
2882.88 1453.73 2879.01 1454.01 2875.07 1454.24 cv
2876.12 1461.64 2876.95 1469.12 2876.56 1476.47 cv
2660.3 1476.47 li
2660.99 1474.15 2667.85 1450.47 2668.37 1448.56 cv
2668.29 1448.38 2668.21 1448.29 2668.16 1448.13 cv
2667.2 1446.17 2666.31 1443.57 2666.05 1440.47 cv
2666.05 1440.37 2666.04 1440.24 2666.02 1440.11 cv
2666.02 1439.98 2666.02 1439.85 2665.99 1439.72 cv
2665.91 1437.51 2666.16 1435.01 2666.9 1432.35 cv
2666.96 1432.25 2666.97 1432.14 2667.02 1432.02 cv
2667.08 1431.91 2667.13 1431.78 2667.15 1431.68 cv
2667.8 1429.67 2668.75 1427.53 2670.12 1425.26 cv
2670.12 1425.26 2671.77 1425.42 2674.4 1425.65 cv
2674.48 1425.39 2674.53 1425.13 2674.61 1424.85 cv
2675.38 1421.76 2684.38 1384.45 2684.56 1383.7 cv
2686.42 1376.53 2688.2 1369.24 2689.25 1362.1 cv
2689.69 1359.05 2690 1356.04 2690.13 1353.07 cv
2690.16 1352.66 2690.16 1352.25 2690.16 1351.83 cv
2690.16 1350.42 2690.03 1349.02 2689.82 1347.68 cv
2689.67 1346.68 2689.43 1345.67 2689.17 1344.72 cv
2689.07 1344.31 2688.94 1343.87 2688.81 1343.46 cv
2687.42 1338.97 2685.13 1334.82 2682.78 1330.62 cv
2682.45 1330 2682.08 1329.38 2681.75 1328.76 cv
2681.05 1327.52 2680.41 1326.27 2679.76 1325.02 cv
2679.44 1324.39 2679.12 1323.76 2678.81 1323.11 cv
2678.5 1322.47 2678.22 1321.82 2677.93 1321.15 cv
2684.53 1309.96 2691.16 1298.77 2693.35 1285.88 cv
2693.48 1285.13 2693.55 1284.36 2693.58 1283.64 cv
2693.81 1278.22 2691.47 1273.69 2688.27 1269.43 cv
2685.54 1265.75 2682.21 1262.29 2679.38 1258.63 cv
2670.61 1247.31 2661.97 1235.86 2653.47 1224.34 cv
2652.1 1222.46 2650.68 1220.47 2650.34 1218.2 cv
2664.37 1207.63 2677.93 1198.99 2689.74 1195 cv
2690.26 1194.64 2691.98 1194.17 2693.97 1193.73 cv
2694.07 1193.71 2694.17 1193.68 2694.28 1193.68 cv
2694.61 1193.61 2694.98 1193.53 2695.31 1193.48 cv
2695.65 1193.37 2696.01 1193.3 2696.34 1193.25 cv
2696.68 1193.17 2697.04 1193.12 2697.37 1193.09 cv
2697.68 1193.01 2698.02 1192.96 2698.33 1192.94 cv
2698.71 1192.86 2699.1 1192.81 2699.49 1192.78 cv
2699.95 1192.7 2700.39 1192.68 2700.85 1192.65 cv
2701.01 1192.63 2701.14 1192.63 2701.24 1192.63 cv
2701.55 1192.63 li
2703.02 1192.55 2704.44 1192.6 2705.83 1192.81 cv
2713.38 1192.96 2721.79 1192.52 2729.5 1190.46 cv
2730.17 1190.28 2730.81 1190.1 2731.46 1189.89 cv
2731.72 1190.85 2731.97 1191.78 2732.23 1192.68 cv
2732.7 1194.28 2733.31 1195.82 2734.01 1197.29 cv
2740.43 1210.65 2756 1218.92 2771.01 1218.41 cv
2787.69 1217.87 2803.11 1208.02 2813.5 1194.97 cv
2814.45 1193.76 2815.38 1192.52 2816.39 1191.31 cv
2817.19 1190.33 2818.01 1189.4 2818.91 1188.55 cv
2819.27 1188.71 2819.64 1188.83 2820 1188.97 cv
2820.31 1189.09 2820.64 1189.2 2820.98 1189.3 cv
2821.57 1189.48 2822.19 1189.66 2822.81 1189.84 cv
2836.27 1193.63 2857.82 1194.23 2864.34 1197.42 cv
2866.69 1197.63 2868.96 1198.1 2871.23 1198.79 cv
2877 1200.55 2882.47 1203.74 2887.62 1207.81 cv
2909.85 1225.22 2926.25 1258.46 2927.15 1260.28 cv
2928.39 1262.79 2929.65 1265.28 2930.86 1267.83 cv
2932.1 1270.41 2937.69 1282.79 2938.24 1284.05 cv
2939.45 1286.86 2940.66 1289.7 2941.84 1292.61 cv
cp
1 .996078 1 rgb
f
2813.86 1122.13 mo
2813.86 1122.13 2812.08 1132.73 2810.53 1143.71 cv
2794.67 1157.92 2770.67 1160.65 2755.92 1160.83 cv
2756.85 1154.39 2756.72 1147.63 2756.57 1141.19 cv
2764.22 1136.19 2786.97 1122.01 2803.16 1117.47 cv
2809.53 1120.07 2813.86 1122.13 2813.86 1122.13 cv
cp
.878431 .521569 .360784 rgb
f
2724.36 1079.04 mo
2724.87 1075.88 2723.26 1071.23 2723.06 1068 cv
2722.52 1059.34 2722.91 1050.5 2724.88 1042.03 cv
2726.24 1036.18 2728.5 1028.96 2731.62 1023.8 cv
2730.65 1025.4 2723.17 1023.47 2721.81 1023.02 cv
2718.4 1021.89 2715.51 1019.92 2713.04 1017.35 cv
2708.18 1012.3 2705.67 1005.02 2707.46 998.095 cv
2709.93 988.549 2720.04 981.72 2729.85 982.728 cv
2735.87 983.348 2741.38 986.813 2744.97 991.617 cv
2749.34 997.446 2749.93 1003.13 2749.05 1010.34 cv
2749.65 1009.27 2750.99 1008.93 2752.19 1008.68 cv
2759.48 1007.21 2766.64 1006.93 2774.11 1007.05 cv
2782.19 1007.18 2790.39 1009.69 2798.32 1009.69 cv
2810.88 1012.28 2826.45 1016.73 2834.2 1027.75 cv
2831.77 1022.59 2832.8 1016.15 2836.22 1011.59 cv
2839.65 1007.03 2845.19 1004.31 2850.86 1003.68 cv
2861.17 1002.54 2871.89 1008.52 2876.33 1017.9 cv
2880.77 1027.27 2878.6 1039.35 2871.18 1046.6 cv
2863.76 1053.85 2851.63 1055.74 2842.36 1051.09 cv
2848.56 1065.35 2843.87 1084.86 2834.96 1096.98 cv
2819.74 1117.67 2718.89 1112.79 2724.36 1079.04 cv
cp
.980392 .847059 .698039 rgb
f
2734.69 1046.03 mo
2728.74 1053.05 2725.99 1066.89 2724.08 1083.25 cv
2718.27 1132.78 2740.71 1153.04 2756.97 1154.42 cv
2773.68 1155.84 2809.47 1151.79 2818.83 1106.2 cv
2823.5 1083.4 2824.98 1064.04 2820.68 1051.72 cv
2811.68 1025.89 2760.79 1015.2 2734.69 1046.03 cv
cp
.960784 .654902 .517647 rgb
f
2746.75 1088.38 mo
2746.75 1088.38 2742.32 1089.61 2743.62 1082.06 cv
2744.78 1075.28 2747.76 1076.46 2747.76 1076.46 cv
2747.76 1076.46 2750.75 1076.69 2749.79 1082.63 cv
2748.83 1088.57 2746.75 1088.38 2746.75 1088.38 cv
cp
.294118 .196078 .341176 rgb
f
2787.33 1092.81 mo
2787.33 1092.81 2782.9 1094.04 2784.19 1086.5 cv
2785.35 1079.71 2788.33 1080.89 2788.33 1080.89 cv
2788.33 1080.89 2791.32 1081.13 2790.36 1087.07 cv
2789.41 1093.01 2787.33 1092.81 2787.33 1092.81 cv
cp
f
2767.64 1106.67 mo
2765.49 1106.16 2760.39 1107.04 2759.57 1104.6 cv
2758.88 1102.58 2763.36 1091.33 2764.02 1089.39 cv
2764.74 1087.27 2765.46 1085.37 2766.16 1083.5 cv
2765.97 1083.35 2765.81 1083.18 2765.61 1083.05 cv
2765.17 1082.76 2764.72 1082.56 2764.27 1082.41 cv
2761.56 1090.17 2759.42 1098.33 2756.89 1105.68 cv
2756.66 1106.33 2757.09 1107.08 2757.8 1107.13 cv
2761 1107.34 2764.04 1108.28 2767.22 1108.57 cv
2768.28 1108.66 2768.74 1106.93 2767.64 1106.67 cv
cp
.878431 .521569 .360784 rgb
f
2753.41 1065.69 mo
2750.47 1063.86 2744.76 1062.96 2742.25 1065.97 cv
2741.79 1066.52 2742.26 1067.44 2742.95 1067.47 cv
2744.48 1067.52 2745.89 1066.89 2747.44 1066.89 cv
2749.11 1066.9 2750.65 1067.41 2752.18 1068.04 cv
2753.57 1068.61 2754.71 1066.49 2753.41 1065.69 cv
cp
.294118 .196078 .341176 rgb
f
2795.39 1074.02 mo
2794.01 1069.51 2786.42 1068.45 2782.94 1070.88 cv
2782.15 1071.43 2782.53 1072.65 2783.31 1072.96 cv
2785.16 1073.71 2787.23 1073.17 2789.18 1073.52 cv
2790.9 1073.82 2792.21 1074.7 2793.77 1075.39 cv
2794.57 1075.75 2795.66 1074.9 2795.39 1074.02 cv
cp
f
2771.83 1118.92 mo
2768.69 1120.16 2766.27 1121.7 2762.71 1121.55 cv
2759.95 1121.42 2757.08 1119.86 2754.39 1120.58 cv
2753.97 1120.69 2753.62 1121.17 2753.86 1121.61 cv
2755.63 1124.75 2760.83 1125.47 2764.11 1125.47 cv
2767.63 1125.47 2771.88 1124.52 2773.95 1121.42 cv
2774.92 1119.96 2773.38 1118.31 2771.83 1118.92 cv
cp
.878431 .521569 .360784 rgb
f
2774.94 1033.19 mo
2775.44 1036.93 2776.95 1040.65 2779.76 1043.01 cv
2782.68 1045.45 2786.55 1046.14 2790.14 1047.25 cv
2793.74 1048.36 2797.51 1050.31 2798.85 1053.95 cv
2799.76 1056.43 2799.35 1059.2 2799.66 1061.84 cv
2800.11 1065.79 2802.26 1069.48 2805.42 1071.71 cv
2808.28 1073.72 2811.99 1074.69 2813.93 1077.66 cv
2815.31 1079.77 2815.5 1082.47 2816.43 1084.82 cv
2817.36 1087.18 2819.75 1089.38 2822.04 1088.47 cv
2827.01 1081.23 2831.78 1073.56 2833.7 1064.9 cv
2836.71 1051.31 2831.92 1036.44 2822.27 1026.87 cv
2812.62 1017.31 2798.59 1013.04 2785.3 1014.73 cv
2775.2 1016.02 2773.67 1023.77 2774.94 1033.19 cv
cp
.980392 .847059 .698039 rgb
f
2815.83 1094.2 mo
2815.83 1094.2 2825.33 1074.29 2836.66 1086.23 cv
2847.99 1098.17 2828.65 1126.18 2810.11 1122.29 cv
2810.11 1122.29 2809.27 1100.74 2815.83 1094.2 cv
cp
.960784 .654902 .517647 rgb
f
2829.86 1095.01 mo
2827.11 1095.26 2824.13 1097.58 2822.01 1099.25 cv
2819.8 1100.99 2817.2 1103.17 2815.95 1105.74 cv
2815.56 1106.55 2816.68 1107.15 2817.29 1106.68 cv
2819 1105.33 2820.42 1103.67 2822.04 1102.2 cv
2822.99 1103.43 2823.97 1104.68 2825.39 1105.34 cv
2826.48 1105.85 2827.44 1104.52 2827.02 1103.56 cv
2826.48 1102.31 2825.38 1101.35 2824.3 1100.47 cv
2826.37 1099.13 2828.82 1098.15 2830.58 1096.53 cv
2831.26 1095.92 2830.71 1094.94 2829.86 1095.01 cv
cp
.878431 .521569 .360784 rgb
f
2843.9 1476.47 mo
2660.3 1476.47 li
2660.99 1474.15 2667.85 1450.47 2668.37 1448.56 cv
2668.42 1448.44 2668.44 1448.31 2668.44 1448.18 cv
2669.09 1445.94 2684.38 1384.45 2684.56 1383.7 cv
2686.42 1376.53 2688.2 1369.24 2689.25 1362.1 cv
2689.69 1359.05 2690 1356.04 2690.13 1353.07 cv
2690.16 1352.66 2690.16 1352.25 2690.16 1351.83 cv
2690.16 1350.42 2690.03 1349.02 2689.82 1347.68 cv
2689.67 1346.68 2689.43 1345.67 2689.17 1344.72 cv
2689.07 1344.28 2688.94 1343.87 2688.81 1343.46 cv
2687.42 1338.97 2685.13 1334.82 2682.78 1330.62 cv
2682.45 1330 2682.08 1329.38 2681.75 1328.76 cv
2681.05 1327.52 2680.41 1326.27 2679.76 1325.02 cv
2679.44 1324.39 2679.12 1323.76 2678.81 1323.11 cv
2678.5 1322.47 2678.22 1321.82 2677.93 1321.15 cv
2677.8 1320.9 2677.68 1320.63 2677.57 1320.35 cv
2675.62 1315.33 2674.81 1310.3 2675.07 1305.25 cv
2675.1 1304.7 2675.12 1304.16 2675.2 1303.65 cv
2675.23 1302.98 2675.3 1302.31 2675.41 1301.64 cv
2675.51 1300.81 2675.64 1299.99 2675.79 1299.16 cv
2675.95 1298.28 2676.14 1297.44 2676.36 1296.56 cv
2676.69 1295.2 2677.03 1293.87 2677.47 1292.56 cv
2677.57 1292.27 2677.65 1292.02 2677.73 1291.76 cv
2678.09 1290.76 2678.42 1289.75 2678.76 1288.8 cv
2678.89 1288.46 2678.99 1288.13 2679.15 1287.82 cv
2681.59 1281.55 2684.82 1275.52 2687.99 1269.95 cv
2688.09 1269.77 2688.2 1269.61 2688.27 1269.43 cv
2688.74 1268.69 2689.15 1267.94 2689.56 1267.19 cv
2689.97 1266.44 2690.37 1265.69 2690.75 1264.92 cv
2691.45 1263.49 2692.14 1262.08 2692.76 1260.67 cv
2693.04 1260.02 2693.3 1259.4 2693.53 1258.79 cv
2693.64 1258.55 2693.74 1258.32 2693.82 1258.11 cv
2694.33 1256.83 2694.77 1255.55 2695.21 1254.27 cv
2695.55 1253.26 2695.88 1252.24 2696.19 1251.21 cv
2697.73 1250.61 2699.54 1250.69 2701.21 1250.79 cv
2701.86 1250.82 2702.53 1250.87 2703.17 1250.9 cv
2705.83 1241.67 2710.03 1232.59 2713.57 1224.18 cv
2716.58 1216.97 2719.83 1209.85 2723.26 1202.84 cv
2725.27 1198.69 2727.36 1194.56 2729.5 1190.46 cv
2730.17 1190.28 2730.81 1190.09 2731.46 1189.89 cv
2732.1 1189.7 2732.72 1189.51 2733.34 1189.28 cv
2733.93 1189.09 2734.53 1188.89 2735.09 1188.66 cv
2735.71 1188.42 2736.3 1188.15 2736.9 1187.88 cv
2737.84 1187.45 2738.75 1187.03 2739.66 1186.54 cv
2737.75 1190.1 2735.87 1193.68 2734.01 1197.29 cv
2732.05 1201.16 2730.14 1205.08 2728.26 1209 cv
2725.99 1213.79 2723.8 1218.64 2721.71 1223.51 cv
2717.9 1232.36 2715.04 1242.13 2711.37 1251.39 cv
2715.34 1251.62 2780.6 1255.38 2809.27 1257.03 cv
2810.84 1246.9 2812.88 1236.74 2814.12 1226.79 cv
2815.25 1217.84 2816.31 1208.9 2816.52 1199.85 cv
2816.59 1196.98 2816.46 1194.15 2816.39 1191.31 cv
2816.33 1190 2816.31 1188.68 2816.31 1187.37 cv
2817.08 1187.81 2817.96 1188.19 2818.91 1188.55 cv
2819.25 1188.71 2819.61 1188.84 2820 1188.97 cv
2820.31 1189.07 2820.64 1189.2 2820.98 1189.3 cv
2821.57 1189.48 2822.19 1189.66 2822.81 1189.84 cv
2824.82 1201.86 2822.11 1215.91 2820.77 1226.79 cv
2819.56 1236.74 2818.68 1247.23 2817.16 1257.5 cv
2821.16 1257.73 2825.18 1257.96 2829.17 1258.19 cv
2826.75 1294.29 2824.38 1330.72 2825.62 1366.84 cv
2825.82 1372.46 2826.11 1378.11 2826.49 1383.7 cv
2826.62 1385.95 2826.8 1388.16 2826.98 1390.38 cv
2827.27 1393.6 2827.55 1396.83 2827.91 1400.05 cv
2828.45 1405.2 2829.1 1410.36 2829.87 1415.52 cv
2830.75 1421.55 2831.78 1427.58 2832.99 1433.59 cv
2834.49 1441.12 2836.27 1448.6 2838.21 1456.05 cv
2840 1462.91 2841.91 1469.69 2843.9 1476.47 cv
cp
.952941 .243137 .498039 rgb
f
2858.15 1383.7 mo
2857.53 1393.29 2856.43 1402.06 2854.93 1410.03 cv
2851.25 1429.7 2845.23 1444.68 2838.21 1456.05 cv
2832.8 1464.82 2826.83 1471.47 2820.87 1476.47 cv
2657.23 1476.47 li
2626.5 1446.43 2625.98 1383.7 2625.98 1383.7 cv
2858.15 1383.7 li
cp
.0901961 .458824 .678431 rgb
f
2858.15 1383.7 mo
2858.15 1389.22 2849.41 1394.27 2834.69 1398.34 cv
2813.52 1404.2 2779.9 1407.99 2742.07 1407.99 cv
2706.26 1407.99 2674.24 1404.61 2652.94 1399.27 cv
2636.11 1395.07 2625.98 1389.63 2625.98 1383.7 cv
2625.98 1370.29 2677.95 1359.44 2742.07 1359.44 cv
2806.17 1359.44 2858.15 1370.29 2858.15 1383.7 cv
cp
.121569 .611765 .901961 rgb
f
2834.69 1398.34 mo
2813.52 1404.2 2779.9 1407.99 2742.07 1407.99 cv
2706.26 1407.99 2674.24 1404.61 2652.94 1399.27 cv
2655.16 1394.78 2659.54 1391.07 2665.63 1389.16 cv
2672.75 1386.92 2680.43 1387.1 2687.62 1385.09 cv
2693.17 1383.54 2698.37 1380.68 2704.07 1379.99 cv
2711.52 1379.06 2719.31 1381.84 2726.42 1379.47 cv
2729.42 1378.44 2732.07 1376.58 2734.96 1375.29 cv
2741.58 1372.38 2749.6 1372.82 2755.87 1376.43 cv
2758.58 1378 2760.95 1380.11 2763.78 1381.46 cv
2773.81 1386.2 2786.58 1380.22 2796.48 1385.19 cv
2798.44 1386.2 2800.21 1387.57 2802.23 1388.42 cv
2808.41 1390.94 2815.48 1387.85 2822.08 1388.8 cv
2827.54 1389.58 2832.39 1393.39 2834.69 1398.34 cv
cp
1 .788235 .690196 rgb
f
2746.9 1457.41 mo
2746.9 1457.41 2692.67 1465.53 2670.97 1452.51 cv
2670.97 1452.51 2669.86 1451.3 2668.67 1449.19 cv
2668.57 1448.95 2668.47 1448.77 2668.37 1448.56 cv
2668.29 1448.41 2668.21 1448.28 2668.16 1448.13 cv
2667.2 1446.17 2666.31 1443.57 2666.05 1440.47 cv
2666.05 1440.37 2666.04 1440.24 2666.02 1440.11 cv
2666.02 1439.98 2666.02 1439.85 2665.99 1439.72 cv
2665.91 1437.51 2666.16 1435.01 2666.9 1432.35 cv
2666.96 1432.25 2666.97 1432.14 2667.02 1432.02 cv
2667.08 1431.91 2667.13 1431.78 2667.15 1431.68 cv
2667.8 1429.67 2668.75 1427.53 2670.12 1425.26 cv
2670.12 1425.26 2671.77 1425.42 2674.4 1425.65 cv
2682.03 1426.24 2697.88 1427.19 2704.12 1425.47 cv
2704.12 1425.47 2689.22 1419.95 2688.47 1415.02 cv
2689.76 1411.88 li
2689.76 1411.88 2706.52 1415.98 2714.1 1417.09 cv
2728.44 1419.23 2739.01 1428.28 2743.08 1432.3 cv
2744.29 1433.48 2744.94 1434.23 2744.94 1434.23 cv
2744.94 1434.23 2759.19 1451.79 2746.9 1457.41 cv
cp
.960784 .654902 .517647 rgb
f
2700.49 1442.77 mo
2690.34 1444.31 2680.2 1443.62 2670.27 1441.45 cv
2668.86 1441.14 2667.44 1440.81 2666.05 1440.47 cv
2666.05 1440.37 2666.04 1440.24 2666.02 1440.11 cv
2666.02 1439.98 2666.02 1439.85 2665.99 1439.72 cv
2667.51 1440.01 2669.04 1440.24 2670.56 1440.42 cv
2680.43 1441.79 2690.3 1441.94 2700.44 1442.38 cv
2700.64 1442.41 2700.69 1442.74 2700.49 1442.77 cv
cp
.878431 .521569 .360784 rgb
f
2700.46 1450.84 mo
2689.81 1452.69 2679.09 1451.56 2668.67 1449.19 cv
2668.57 1448.95 2668.47 1448.77 2668.37 1448.56 cv
2668.29 1448.41 2668.21 1448.28 2668.16 1448.13 cv
2668.26 1448.16 2668.34 1448.16 2668.44 1448.18 cv
2679.01 1449.81 2689.62 1450.19 2700.41 1450.45 cv
2700.67 1450.46 2700.72 1450.78 2700.46 1450.84 cv
cp
f
2701.62 1434.72 mo
2691.89 1436.66 2682 1435.62 2672.36 1433.59 cv
2670.53 1433.23 2668.71 1432.82 2666.9 1432.35 cv
2666.96 1432.25 2667 1432.14 2667.02 1432.02 cv
2667.08 1431.91 2667.13 1431.78 2667.15 1431.68 cv
2668.98 1432.02 2670.81 1432.3 2672.64 1432.51 cv
2682.21 1433.77 2691.8 1433.9 2701.57 1434.31 cv
2701.8 1434.33 2701.85 1434.68 2701.62 1434.72 cv
cp
f
2930.86 1267.83 mo
2929.65 1265.28 2928.41 1262.78 2927.19 1260.35 cv
2921.13 1264.77 2915.07 1269.2 2908.93 1273.53 cv
2895.92 1282.69 2882.55 1291.81 2868.43 1299.2 cv
2866.31 1300.31 2864.1 1301.44 2861.83 1302.42 cv
2862.32 1303.21 2883.21 1336.39 2887.8 1344 cv
2902.11 1367.66 2911.57 1387.1 2904.63 1394.96 cv
2903.91 1395.79 2903.01 1396.49 2901.98 1397.03 cv
2901.57 1397.29 2901.13 1397.49 2900.61 1397.67 cv
2895.2 1399.68 2887.85 1401.85 2879.24 1404.12 cv
2875.97 1404.97 2872.51 1405.85 2868.9 1406.72 cv
2851.55 1410.98 2830.87 1415.38 2811.04 1419.41 cv
2808.93 1419.85 2736.33 1433.48 2736.33 1433.48 cv
2746.9 1457.41 li
2746.9 1457.41 2767.65 1457.62 2796.24 1457.15 cv
2819.68 1456.74 2848.33 1455.97 2875.07 1454.24 cv
2879.01 1454.01 2882.88 1453.73 2886.72 1453.44 cv
2910.57 1451.64 2931.94 1449.03 2945.29 1445.24 cv
2947.1 1444.73 2948.8 1444.08 2950.42 1443.28 cv
2952.46 1442.28 2954.37 1441.01 2956.04 1439.57 cv
2981.72 1417.5 2964.58 1347.89 2941.84 1292.61 cv
2938.28 1283.9 2934.57 1275.57 2930.86 1267.83 cv
cp
.960784 .654902 .517647 rgb
f
2516.56 1548.49 mo
2493.07 1665.29 li
2391.83 1665.29 li
2369.85 1545.56 li
2516.56 1548.49 li
cp
.921569 .658824 .545098 rgb
f
2353.18 1525.06 mo
2355.03 1517.78 2360.49 1512.21 2366.09 1507.57 cv
2378.3 1497.43 2392.34 1489.78 2407.21 1485.15 cv
2416.74 1482.18 2427.75 1479.57 2432.61 1470.37 cv
2433.11 1469.41 2433.54 1468.37 2433.55 1467.27 cv
2433.57 1464.38 2430.56 1462.33 2427.85 1462.46 cv
2425.13 1462.6 2422.72 1464.27 2420.47 1465.87 cv
2425.69 1458.7 2434.14 1454.32 2442.67 1454.36 cv
2451.2 1454.39 2459.61 1458.85 2464.78 1466.07 cv
2467.01 1469.2 2468.66 1472.8 2471.11 1475.75 cv
2477.48 1483.46 2487.8 1485.4 2497.04 1488.35 cv
2513.9 1493.75 2530.78 1506.17 2533.76 1524.61 cv
2535.63 1536.22 2531.23 1548.7 2522.72 1556.25 cv
2514.22 1563.79 2501.95 1566.17 2491.45 1562.44 cv
2488.71 1561.46 2486.04 1560.1 2483.15 1559.9 cv
2478.18 1559.57 2473.68 1562.74 2469.48 1565.57 cv
2459.02 1572.62 2447.43 1578.51 2435.07 1579.21 cv
2426.33 1579.71 2417.03 1577.24 2410.05 1571.47 cv
2401.62 1564.49 2400.68 1556.26 2388.52 1555.74 cv
2372.44 1555.04 2346.88 1549.74 2353.18 1525.06 cv
cp
1 .788235 .690196 rgb
f
2416.52 1515.56 mo
2415.29 1512.43 2417.55 1505.6 2415.07 1503.21 cv
2413.49 1501.68 2410.93 1502.41 2410.29 1504.47 cv
2409.19 1507.97 2410.56 1511.9 2411.56 1515.28 cv
2412.53 1518.59 2413.35 1523.23 2417.26 1524 cv
2418.88 1524.31 2420.27 1523.76 2421.18 1522.4 cv
2423.37 1519.15 2417.76 1518.72 2416.52 1515.56 cv
cp
.94902 .494118 .658824 rgb
f
2453.83 1475.75 mo
2447.33 1474.58 2439.88 1480.08 2436.11 1484.94 cv
2434.19 1487.43 2436.5 1490.75 2439.5 1489.33 cv
2442.08 1488.12 2444.79 1486.92 2447.44 1485.88 cv
2450.28 1484.78 2450.09 1487.51 2452.52 1485.6 cv
2454.84 1483.78 2456.65 1476.26 2453.83 1475.75 cv
cp
f
2470.85 1518.83 mo
2469.05 1516.03 2467.37 1513.16 2465.67 1510.3 cv
2464.82 1508.87 2462.17 1509.36 2462.34 1511.2 cv
2462.66 1514.71 2463.33 1518.18 2464.39 1521.55 cv
2465.45 1524.94 2466.49 1528.52 2470.03 1529.8 cv
2471.63 1530.38 2473.82 1529.14 2474.13 1527.47 cv
2474.79 1524 2472.65 1521.63 2470.85 1518.83 cv
cp
f
2393.17 1488 mo
2391.97 1487.23 2390.08 1487.19 2388.89 1488 cv
2386.82 1489.4 2384.75 1490.8 2382.68 1492.2 cv
2380.57 1493.63 2378.47 1495 2377.71 1497.55 cv
2377.09 1499.66 2378.77 1501.19 2380.67 1501.43 cv
2383.06 1501.73 2385.23 1500.23 2387.17 1499.02 cv
2389.17 1497.79 2391.17 1496.55 2393.17 1495.32 cv
2394.32 1494.6 2395.46 1493.11 2395.27 1491.66 cv
2395.04 1489.98 2394.65 1488.94 2393.17 1488 cv
cp
f
2521.41 1512 mo
2519.78 1509.63 2517.24 1507.61 2515.01 1505.79 cv
2512.92 1504.09 2510.84 1502.96 2508.13 1502.76 cv
2507.6 1502.73 2507.05 1503.18 2506.93 1503.68 cv
2506.26 1506.47 2507.03 1508.89 2508.45 1511.34 cv
2509.93 1513.9 2512.38 1516.96 2514.93 1518.48 cv
2518.83 1520.8 2524.16 1516 2521.41 1512 cv
cp
f
2389.53 1533.87 mo
2388.23 1534.51 2386.87 1534.88 2385.54 1535.46 cv
2384.2 1536.05 2383.02 1536.93 2381.85 1537.82 cv
2379.53 1539.58 2376.74 1543.15 2379.02 1545.97 cv
2381.52 1549.08 2384.81 1546.18 2386.61 1543.99 cv
2388.52 1541.67 2389.52 1538.65 2391.53 1536.46 cv
2392.83 1535.05 2391.21 1533.05 2389.53 1533.87 cv
cp
f
2413.85 1665.29 mo
2405.06 1665.29 li
2402.65 1655.38 2402.3 1644.91 2401.74 1634.82 cv
2400.92 1620.86 2396.78 1603.57 2400.58 1590.04 cv
2400.71 1589.61 2401.35 1589.35 2401.66 1589.74 cv
2409.07 1598.92 2408.72 1611.46 2409.63 1622.84 cv
2410.75 1636.93 2412.86 1651.16 2413.85 1665.29 cv
cp
.819608 .560784 .45098 rgb
f
2447.26 1665.29 mo
2439.71 1665.29 li
2436.78 1655.51 2437.3 1644.65 2437 1634.43 cv
2436.57 1620.47 2435.27 1605.55 2439.63 1592.11 cv
2440.1 1590.68 2442.13 1590.68 2442.56 1592.11 cv
2446.52 1604.69 2445.75 1618.36 2446.35 1631.46 cv
2446.83 1642.41 2449.07 1654.35 2447.26 1665.29 cv
cp
f
2482.73 1640.47 mo
2482.08 1648.53 2482.04 1657.02 2481.13 1665.29 cv
2471.44 1665.29 li
2471.52 1655.9 2473.07 1646.33 2473.89 1637.19 cv
2475.27 1622.75 2476.09 1607.97 2480.19 1594 cv
2481.05 1591.07 2485.19 1591.81 2485.36 1594.69 cv
2486.26 1609.95 2483.94 1625.29 2482.73 1640.47 cv
cp
f
2547.29 1649.6 mo
2542.62 1646.46 2538.24 1642.8 2534.76 1638.37 cv
2525.75 1626.91 2523.62 1610.42 2529.42 1597.04 cv
2536.48 1580.77 2556.59 1570.36 2573.1 1576.82 cv
2578.56 1578.96 2583.29 1582.65 2587.41 1586.83 cv
2602.47 1602.14 2609.4 1623.53 2614.57 1644.38 cv
2615.67 1648.79 2616.69 1653.52 2615.14 1657.8 cv
2608.58 1675.82 2557.77 1656.65 2547.29 1649.6 cv
cp
.94902 .494118 .658824 rgb
f
2517.07 1597.16 mo
2511.32 1595.73 2506 1592.05 2503.33 1586.77 cv
2503.09 1586.29 2502.89 1585.67 2503.24 1585.27 cv
2503.5 1584.98 2503.94 1584.96 2504.33 1584.95 cv
2511.34 1584.91 2518.36 1584.86 2525.38 1584.82 cv
2522.15 1578.69 2519.97 1572.01 2518.96 1565.16 cv
2518.84 1564.39 2518.79 1563.48 2519.39 1562.97 cv
2520.12 1562.34 2521.25 1562.81 2522.09 1563.29 cv
2525.9 1565.5 2529.71 1567.71 2533.52 1569.92 cv
2534.06 1564.09 2534.66 1558.04 2537.69 1553.04 cv
2538.04 1552.46 2538.55 1551.83 2539.23 1551.87 cv
2539.85 1551.91 2540.28 1552.5 2540.61 1553.04 cv
2544.5 1559.6 2546.52 1567.38 2545.54 1574.94 cv
2543.61 1589.74 2532.15 1600.9 2517.07 1597.16 cv
cp
.416 .708 .854 rgb
f
2544.56 1624.84 mo
2543.51 1623.87 2542.36 1622.75 2541.09 1622.05 cv
2539.78 1621.33 2538.61 1622.86 2539.06 1623.89 cv
2539.67 1626.56 2541.97 1629.74 2544.9 1629.39 cv
2545.53 1629.31 2546.13 1628.9 2546.1 1628.18 cv
2546.06 1626.67 2545.7 1625.9 2544.56 1624.84 cv
cp
1 1 1 rgb
f
2548.89 1597.49 mo
2547.88 1597.43 2547.1 1598.37 2547.06 1599.31 cv
2546.96 1602.31 2549.87 1605.52 2552.78 1605.99 cv
2553.92 1606.18 2555.3 1605.5 2555.21 1604.14 cv
2555.01 1600.94 2552.19 1597.68 2548.89 1597.49 cv
cp
f
2576.94 1595.4 mo
2576 1595.32 2575.31 1596.39 2575.55 1597.22 cv
2576.4 1600.11 2579.68 1604.12 2583.07 1603.19 cv
2583.86 1602.97 2584.31 1602.27 2584.36 1601.49 cv
2584.61 1597.98 2579.87 1595.67 2576.94 1595.4 cv
cp
f
2561.95 1626.19 mo
2561.32 1626.33 2561.05 1626.9 2560.97 1627.48 cv
2560.75 1629.14 2562.03 1630.37 2563.02 1631.56 cv
2564.17 1632.94 2565.52 1633.78 2567.31 1633.93 cv
2568.62 1634.04 2569.29 1632.66 2569.11 1631.58 cv
2568.64 1628.91 2564.76 1625.53 2561.95 1626.19 cv
cp
f
2597.84 1648.18 mo
2597.04 1645.79 2594.2 1644.44 2591.76 1644.35 cv
2590.35 1644.29 2589.81 1645.8 2590.29 1646.9 cv
2591.18 1648.91 2593.47 1651.05 2595.74 1650.94 cv
2597.07 1650.88 2598.31 1649.59 2597.84 1648.18 cv
cp
f
2590.12 1622.81 mo
2588.78 1621.91 2587.13 1620.85 2585.52 1620.58 cv
2584.49 1620.42 2583.09 1621.28 2583.59 1622.51 cv
2584.29 1624.23 2585.63 1625.63 2586.97 1626.9 cv
2587.61 1627.5 2588.63 1627.88 2589.5 1627.57 cv
2589.79 1627.44 2590.08 1627.35 2590.39 1627.3 cv
2590.95 1627.18 2591.35 1626.6 2591.35 1626.04 cv
2591.33 1625.71 2591.35 1625.38 2591.41 1625.06 cv
2591.52 1624.14 2590.82 1623.28 2590.12 1622.81 cv
cp
f
2364.49 1377.16 mo
2361.51 1376.13 2358.37 1376.06 2355.23 1376.16 cv
2355.13 1371.36 2355.12 1366.53 2354.43 1361.8 cv
2354.2 1360.19 2351.74 1360.39 2351.37 1361.8 cv
2350.13 1366.5 2349.75 1371.47 2349.43 1376.37 cv
2345.59 1376.52 2341.68 1376.77 2337.94 1377.57 cv
2335.65 1378.06 2335.65 1381.71 2337.94 1382.2 cv
2341.52 1382.96 2345.25 1383.23 2348.94 1383.38 cv
2348.52 1388.79 2348.16 1394.37 2350.18 1399.4 cv
2351.05 1401.57 2354.08 1401.82 2354.86 1399.4 cv
2356.5 1394.33 2355.97 1388.92 2355.57 1383.62 cv
2358.6 1383.7 2361.62 1383.61 2364.49 1382.61 cv
2367.17 1381.69 2367.18 1378.08 2364.49 1377.16 cv
cp
.937255 .956863 .964706 rgb
f
2669.07 1000.16 mo
2664.52 999.348 2659.09 999.565 2653.7 1000.34 cv
2653.64 999.547 2653.58 998.76 2653.53 997.983 cv
2653.21 992.601 2652.98 987.168 2652.14 981.84 cv
2651.91 980.351 2649.37 980.35 2649.14 981.84 cv
2648.3 987.168 2648.07 992.601 2647.75 997.983 cv
2647.68 999.134 2647.58 1000.31 2647.48 1001.49 cv
2644.33 1002.18 2641.3 1002.98 2638.66 1003.84 cv
2635.85 1004.75 2636.56 1008.48 2639.33 1008.77 cv
2641.95 1009.05 2644.56 1009.11 2647.16 1009.04 cv
2647.22 1010.89 2647.4 1012.72 2647.86 1014.48 cv
2648.56 1017.23 2652.71 1017.23 2653.42 1014.48 cv
2653.91 1012.59 2654.1 1010.62 2654.13 1008.63 cv
2654.38 1008.61 2654.63 1008.6 2654.88 1008.57 cv
2659.56 1008.17 2664.7 1008.11 2669.07 1006.35 cv
2671.64 1005.3 2672.55 1000.79 2669.07 1000.16 cv
cp
f
3259.24 1264.87 mo
3254.46 1263.21 3249.11 1263.68 3243.97 1264.47 cv
3244.41 1259.14 3245.27 1253.82 3244.85 1248.57 cv
3245.31 1246.06 3241.39 1244.85 3239.95 1247.07 cv
3236.51 1252.34 3235.5 1259.36 3235.25 1265.92 cv
3229.71 1266.87 3223.96 1268.14 3219.6 1271.6 cv
3218.28 1272.65 3219.19 1274.56 3220.52 1275.03 cv
3220.75 1275.12 3220.96 1275.13 3221.17 1275.13 cv
3225.78 1275.82 3230.53 1274.95 3235.21 1274.19 cv
3235.35 1280.68 3236.04 1287.52 3240.16 1292.56 cv
3241.51 1294.22 3244.63 1293.32 3245.03 1291.27 cv
3246.2 1285.3 3244.45 1279.3 3243.89 1273.25 cv
3249.1 1272.98 3254.5 1272.93 3259.24 1271 cv
3262.11 1269.83 3262.37 1265.96 3259.24 1264.87 cv
cp
f
1417.78 1462.25 mo
1384.06 1439.81 1346.58 1423.72 1311.5 1403.48 cv
1276.42 1383.24 1242.78 1357.77 1222.99 1322.43 cv
1222.9 1362.36 1222.83 1402.54 1229.81 1441.85 cv
1236.8 1481.17 1251.31 1519.97 1277.36 1550.24 cv
1313.52 1592.27 1368.67 1613.99 1423.6 1621.61 cv
1455.3 1626.01 1484.41 1629.27 1514.44 1640.73 cv
1541.41 1651.03 1547.29 1633.35 1538.65 1606.61 cv
1520.02 1548.96 1466.95 1494.98 1417.78 1462.25 cv
cp
level3{
gsave
clp
[342.603 360.847 -360.847 342.603 1166.06 1308.58 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[342.603 360.847 -360.847 342.603 1166.06 1308.58 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1344.32 1586.58 mo
1305.51 1591.44 1263.61 1592.79 1230.06 1572.69 cv
1242.4 1609.21 1276.59 1634.77 1312.98 1647.51 cv
1345.17 1658.78 1380.24 1661.71 1413.86 1655.94 cv
1429.15 1653.32 1444.13 1648.94 1459.51 1646.92 cv
1492.98 1642.52 1526.8 1649.42 1558.82 1658.82 cv
1556.63 1622.65 1529.54 1611.93 1500.36 1599.02 cv
1446.91 1575.36 1401.17 1579.46 1344.32 1586.58 cv
cp
level3{
gsave
clp
[496.673 135.825 -135.825 496.673 1130.79 1546.81 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[496.673 135.825 -135.825 496.673 1130.79 1546.81 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1827.94 1603.75 mo
1613.92 1603.75 li
1613.92 1540.05 li
1827.94 1540.05 li
1827.94 1603.75 li
cp
.482353 .572549 .611765 rgb
f
2121.8 1060.1 mo
2121.8 1523.17 li
2121.8 1537.43 2110.25 1548.98 2096 1548.98 cv
1346.29 1548.98 li
1332.04 1548.98 1320.49 1537.43 1320.49 1523.17 cv
1320.49 1060.1 li
1320.49 1045.86 1332.04 1034.31 1346.29 1034.31 cv
2096 1034.31 li
2110.25 1034.31 2121.8 1045.86 2121.8 1060.1 cv
cp
.294118 .196078 .341176 rgb
f
1527.62 1653.11 mo
1613.92 1603.75 li
1827.94 1603.75 li
1922.21 1653.11 li
1527.62 1653.11 li
cp
.929412 .929412 .929412 rgb
f
1922.21 1663.62 mo
1527.62 1663.62 li
1527.62 1653.11 li
1922.21 1653.11 li
1922.21 1663.62 li
cp
.776471 .776471 .776471 rgb
f
2095.46 1059.79 mo
2095.46 1472.55 li
1346.4 1472.55 li
1346.4 1059.79 li
2095.46 1059.79 li
cp
.937255 .956863 .964706 rgb
f
2121.8 1498.02 mo
2121.8 1523.17 li
2121.8 1537.43 2110.25 1548.98 2096 1548.98 cv
1346.29 1548.98 li
1332.04 1548.98 1320.49 1537.43 1320.49 1523.17 cv
1320.49 1498.02 li
2121.8 1498.02 li
cp
.929412 .929412 .929412 rgb
f
1928.32 1149.27 mo
1928.32 1472.55 li
1376.98 1472.55 li
1376.98 1149.27 li
1928.32 1149.27 li
cp
level3{
gsave
clp
[31.1439 758.77 -758.77 31.1439 1638.7 971.01 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[31.1439 758.77 -758.77 31.1439 1638.7 971.01 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1474.11 1117.96 mo
1376.98 1117.96 li
1376.98 1091.63 li
1474.11 1091.63 li
1474.11 1117.96 li
cp
.537255 .643137 .690196 rgb
f
2075.78 1229.87 mo
1948.07 1229.87 li
1948.07 1149.27 li
2075.78 1149.27 li
2075.78 1229.87 li
cp
f
2075.78 1331.94 mo
1948.07 1331.94 li
1948.07 1251.34 li
2075.78 1251.34 li
2075.78 1331.94 li
cp
f
2075.78 1434.02 mo
1948.07 1434.02 li
1948.07 1353.41 li
2075.78 1353.41 li
2075.78 1434.02 li
cp
f
1993.49 1174.67 mo
1993.49 1204.32 li
2030.35 1189.4 li
1993.49 1174.67 li
cp
.854902 .854902 .854902 rgb
f
1993.49 1276.82 mo
1993.49 1306.47 li
2030.35 1291.55 li
1993.49 1276.82 li
cp
f
1993.49 1378.96 mo
1993.49 1408.62 li
2030.35 1393.7 li
1993.49 1378.96 li
cp
f
1944.89 1342.4 mo
1944.89 1342.4 1895.41 1435.63 1853.93 1472.45 cv
1737 1472.45 li
1734.79 1471.75 1733.57 1471.34 1733.57 1471.34 cv
1733.57 1471.34 1710.76 1357.87 1702.35 1276.47 cv
1697.92 1233.21 1697.53 1199.02 1706.81 1195.75 cv
1706.81 1195.75 1770.55 1193.04 1788.59 1262.68 cv
1791.51 1273.97 1794.16 1285.99 1796.56 1298.26 cv
1808.99 1361.61 1814.56 1430.7 1814.56 1430.7 cv
1915.93 1342.4 li
1944.89 1342.4 li
cp
.929412 .596078 .435294 rgb
f
1796.56 1298.26 mo
1770.93 1316.77 1729.96 1320.82 1729.96 1320.82 cv
1729.96 1320.82 1715.86 1301.14 1702.35 1276.47 cv
1697.92 1233.21 1697.53 1199.02 1706.81 1195.75 cv
1706.81 1195.75 1770.55 1193.04 1788.59 1262.68 cv
1791.51 1273.97 1794.16 1285.99 1796.56 1298.26 cv
cp
.819608 .819608 .819608 rgb
f
1729.96 1472.45 mo
1719.7 1472.45 li
1696.88 1489.9 1672.39 1505.14 1649.63 1512.2 cv
1636.3 1516.28 1607.06 1516.28 1588.42 1484.49 cv
1586.04 1480.44 1583.62 1476.44 1581.12 1472.45 cv
1431.22 1472.45 li
1432.43 1458.6 1433.26 1439.73 1431.97 1418.1 cv
1431.79 1414.95 1431.56 1411.73 1431.27 1408.45 cv
1429.05 1382.36 1423.67 1353.02 1412.37 1324.14 cv
1379.42 1239.86 1428.36 1209.46 1518 1196.75 cv
1541.88 1193.37 1563.85 1192.5 1583.54 1194.59 cv
1620.57 1198.5 1649.57 1212.81 1668.27 1240.27 cv
1676.93 1253.01 1683.4 1268.58 1687.4 1287.25 cv
1693.92 1317.72 1729.42 1470.23 1729.96 1472.45 cv
cp
.0901961 .458824 .678431 rgb
f
1919.29 1350.46 mo
1916.36 1348.2 1914.27 1346 1910.49 1345.25 cv
1907.14 1344.59 1903.44 1344.9 1900.53 1342.81 cv
1898.51 1341.37 1897.39 1339 1896.36 1336.75 cv
1893.61 1330.76 1890.89 1323.64 1894.07 1317.88 cv
1895.27 1315.71 1897.18 1314.03 1899.16 1312.55 cv
1906.9 1306.78 1918.38 1301.84 1928.24 1302.7 cv
1935.5 1303.33 1942.22 1307.86 1945.86 1314.17 cv
1949.51 1320.48 1950.11 1328.38 1947.84 1335.3 cv
1946.4 1339.7 1943.9 1343.66 1941.42 1347.57 cv
1939.34 1350.85 1932.7 1365.53 1928.5 1365.17 cv
1923.46 1364.73 1923.1 1353.42 1919.29 1350.46 cv
cp
.929412 .596078 .435294 rgb
f
1854.09 1319.24 mo
1853.01 1317.72 1852.06 1316.05 1850.33 1315.49 cv
1849.3 1315.16 1848.15 1315.31 1847.13 1314.94 cv
1845.22 1314.24 1845.39 1311.44 1846.01 1309.93 cv
1846.67 1308.33 1848.12 1307.21 1849.55 1306.25 cv
1852.92 1304 1856.6 1302.22 1860.45 1300.97 cv
1862.23 1300.39 1864.38 1299.99 1865.82 1301.19 cv
1866.97 1302.15 1867.22 1303.85 1866.95 1305.33 cv
1866.67 1306.8 1865.96 1308.15 1865.49 1309.58 cv
1864.8 1311.64 1864.61 1313.86 1864.75 1316.04 cv
1864.85 1317.5 1865.11 1318.98 1864.93 1320.44 cv
1864.16 1326.88 1857.71 1323.47 1854.96 1320.35 cv
1854.66 1320 1854.37 1319.63 1854.09 1319.24 cv
cp
.294118 .196078 .341176 rgb
f
1829.19 1384.9 mo
1833.47 1389.46 1841 1387.86 1846.73 1385.36 cv
1856.33 1381.17 1865.23 1375.38 1872.95 1368.31 cv
1876.88 1364.71 1880.55 1360.75 1885.03 1357.86 cv
1889.52 1354.97 1895.08 1353.23 1900.22 1354.64 cv
1900.78 1354.8 1901.34 1354.99 1901.77 1355.38 cv
1903.24 1356.68 1902.41 1359.06 1901.57 1360.83 cv
1898.6 1367.13 1896.76 1373.96 1896.19 1380.9 cv
1896.01 1383.08 1896.06 1385.56 1897.66 1387.05 cv
1900.14 1389.38 1904.19 1387.62 1906.92 1385.58 cv
1921.74 1374.51 1931.44 1356.83 1932.81 1338.38 cv
1933.26 1332.4 1932.45 1325.54 1927.63 1321.98 cv
1923.43 1318.88 1917.59 1319.38 1912.57 1320.78 cv
1907.54 1322.19 1902.58 1324.37 1897.37 1324.19 cv
1891.33 1323.98 1885.89 1320.65 1880.08 1319.02 cv
1870.84 1316.44 1860.43 1318.44 1852.81 1324.26 cv
1846.3 1329.23 1842.02 1336.54 1838.32 1343.85 cv
1833.86 1352.65 1820.18 1375.3 1829.19 1384.9 cv
cp
f
1640.37 1097.58 mo
1641.14 1102.13 1643.32 1106.31 1645.79 1110.21 cv
1648.21 1114.03 1651.04 1117.76 1654.89 1120.13 cv
1659.1 1122.72 1664.15 1123.48 1669.05 1124.06 cv
1671.54 1124.35 1674.1 1124.6 1676.51 1123.91 cv
1679.89 1122.95 1682.52 1120.23 1684.27 1117.19 cv
1689.33 1108.37 1687.73 1097 1683.08 1087.96 cv
1681.05 1084.02 1678.44 1080.29 1674.92 1077.6 cv
1669.9 1073.78 1663.14 1072.34 1657 1073.79 cv
1646.77 1076.21 1638.59 1086.98 1640.37 1097.58 cv
cp
f
1754.07 1472.45 mo
1719.7 1472.45 li
1696.88 1489.9 1672.39 1505.14 1649.63 1512.2 cv
1636.3 1516.28 1607.06 1516.28 1588.42 1484.49 cv
1586.04 1480.44 1583.62 1476.44 1581.12 1472.45 cv
1518.73 1472.45 li
1522.31 1458.03 1521.38 1438.62 1518.24 1418.1 cv
1518.16 1417.63 1518.08 1417.17 1518 1416.7 cv
1517.59 1413.97 1517.13 1411.21 1516.61 1408.45 cv
1513.52 1391.49 1509.21 1374.16 1504.91 1358.61 cv
1501.17 1345.13 1497.43 1332.96 1494.54 1323.5 cv
1483.66 1287.84 1491.06 1234.86 1491.35 1232.92 cv
1500.16 1222.41 1555.65 1208.77 1575.4 1201.26 cv
1579.01 1199.9 1581.4 1198.71 1582.15 1197.81 cv
1582.69 1197.14 1583.16 1196.03 1583.54 1194.59 cv
1585.4 1187.8 1585.51 1173.83 1585.28 1164.32 cv
1585.25 1161.89 1585.01 1154.54 1585.01 1154.54 cv
1588.52 1151.63 li
1646.87 1160.6 li
1646.87 1160.6 1645.91 1166.07 1646.04 1172.52 cv
1646.05 1173.08 1646.09 1173.68 1646.14 1174.27 cv
1646.12 1174.35 1646.14 1174.42 1646.14 1174.5 cv
1646.17 1174.91 1646.23 1175.33 1646.27 1175.74 cv
1646.3 1176.02 1646.33 1176.3 1646.38 1176.59 cv
1646.44 1176.97 1646.48 1177.39 1646.56 1177.78 cv
1646.63 1178.32 1646.75 1178.86 1646.87 1179.4 cv
1646.98 1179.94 1647.09 1180.45 1647.25 1180.99 cv
1648.51 1185.56 1650.97 1189.69 1655.48 1191.83 cv
1658.19 1193.09 1661.85 1194.15 1665.87 1194.89 cv
1666.1 1195 1666.41 1195.05 1666.67 1195.1 cv
1675.58 1196.82 1686.26 1197.4 1693.97 1197.65 cv
1700.13 1197.89 1704.41 1197.81 1704.41 1197.81 cv
1704.41 1197.81 1721.2 1223.36 1734.53 1264.02 cv
1737.72 1273.79 1740.74 1284.46 1743.24 1295.83 cv
1746.92 1312.54 1749.46 1343.92 1751.21 1380.32 cv
1751.65 1389.42 1753.89 1463.16 1754.07 1472.45 cv
cp
.960784 .654902 .517647 rgb
f
1760.31 1472.45 mo
1719.7 1472.45 li
1696.88 1489.9 1672.39 1505.14 1649.63 1512.2 cv
1636.3 1516.28 1607.06 1516.28 1588.42 1484.49 cv
1586.04 1480.44 1583.62 1476.44 1581.12 1472.45 cv
1518.73 1472.45 li
1522.31 1458.03 1521.38 1438.62 1518.24 1418.1 cv
1518.16 1417.63 1518.08 1417.17 1518 1416.7 cv
1517.59 1413.97 1517.13 1411.21 1516.61 1408.45 cv
1513.52 1391.49 1509.21 1374.16 1504.91 1358.61 cv
1501.17 1345.13 1497.43 1332.96 1494.54 1323.5 cv
1483.66 1287.84 1491.06 1234.86 1491.35 1232.92 cv
1500.16 1222.41 1555.65 1208.77 1575.4 1201.26 cv
1588.93 1222.2 1623.51 1269.72 1651.17 1259.46 cv
1660.58 1255.95 1665.74 1248.81 1668.27 1240.27 cv
1671.7 1228.49 1670.1 1214.03 1667.67 1202.6 cv
1667.67 1202.5 1667.62 1202.4 1667.62 1202.35 cv
1667.47 1201.55 1667.31 1200.8 1667.16 1200.05 cv
1666.72 1198.25 1666.31 1196.49 1665.87 1194.89 cv
1666.1 1195 1666.41 1195.05 1666.67 1195.1 cv
1669.61 1194.69 1691.24 1195.32 1707.91 1195.73 cv
1730.74 1247.1 li
1742.65 1270.64 1750.15 1322.16 1754.82 1378.11 cv
1755.67 1388.14 1758.51 1432.28 1758.84 1439.29 cv
1759.43 1450.56 1759.9 1461.69 1760.31 1472.45 cv
cp
.901961 .901961 .901961 rgb
f
1810.14 1386.9 mo
1810.14 1386.9 1802.67 1395.59 1790.29 1408.45 cv
1787.41 1411.44 1784.24 1414.69 1780.83 1418.1 cv
1774.31 1424.67 1766.88 1431.86 1758.84 1439.29 cv
1757.09 1440.91 1755.28 1442.56 1753.45 1444.21 cv
1745.54 1451.36 1737.11 1458.63 1728.34 1465.66 cv
1725.5 1467.96 1722.62 1470.2 1719.7 1472.45 cv
1696.88 1489.9 1672.39 1505.14 1649.63 1512.2 cv
1636.3 1516.28 1607.06 1516.28 1588.42 1484.49 cv
1586.04 1480.44 1583.62 1476.44 1581.12 1472.45 cv
1569.75 1454.04 1557.45 1436.09 1545.39 1418.1 cv
1543.53 1415.39 1531.9 1398.19 1528.37 1393.16 cv
1520.3 1381.63 1512.26 1370.29 1504.91 1358.61 cv
1492.12 1338.32 1481.53 1317.02 1476.91 1292.01 cv
1474.54 1279.1 1473.58 1265.57 1477.6 1253.09 cv
1480.13 1245.28 1484.95 1237.95 1491.35 1232.92 cv
1495.14 1229.91 1499.52 1227.74 1504.31 1226.71 cv
1515.25 1224.41 1526.72 1228.62 1535.95 1234.99 cv
1541.7 1238.96 1546.73 1243.75 1551.24 1249.01 cv
1561.22 1260.46 1568.67 1274.44 1575.83 1288.03 cv
1585.01 1305.4 1629.1 1385.63 1642.23 1408.45 cv
1644.08 1411.68 1654.94 1430.42 1658.55 1436.58 cv
1658.55 1436.58 1781.69 1361.65 1788.58 1357.32 cv
1788.63 1357.4 1810.14 1386.9 1810.14 1386.9 cv
cp
.960784 .654902 .517647 rgb
f
1788.58 1357.32 mo
1788.58 1357.32 1792.4 1385.02 1810.14 1386.9 cv
1810.14 1386.9 1820.27 1377.14 1834.31 1371.16 cv
1848.3 1365.18 1878.25 1354.43 1885.04 1345.6 cv
1885.04 1345.6 1886.55 1343.48 1887.65 1340.06 cv
1888.15 1338.64 1888.55 1336.98 1888.74 1335.16 cv
1888.99 1332.88 1888.94 1330.39 1888.27 1327.73 cv
1887.95 1326.61 1887.56 1325.5 1887 1324.33 cv
1886.18 1322.56 1885.05 1320.74 1883.51 1318.96 cv
1882.72 1318.05 1881.81 1317.15 1880.81 1316.23 cv
1879.75 1315.32 li
1877.73 1313.63 1874.91 1313.26 1872.49 1314.31 cv
1863.9 1318 1842.62 1326.7 1833.6 1327.2 cv
1833.6 1327.2 1850.04 1314.03 1848.88 1307.59 cv
1845.93 1304.19 li
1845.93 1304.19 1830.51 1317.86 1815.18 1326.04 cv
1795.8 1336.44 1788.58 1357.32 1788.58 1357.32 cv
cp
f
1842.84 1331.77 mo
1842.6 1331.85 1842.69 1332.2 1842.9 1332.16 cv
1857.34 1330.84 1871.39 1326.61 1883.51 1318.96 cv
1882.72 1318.05 1881.81 1317.15 1880.81 1316.23 cv
1868.97 1323.17 1856.54 1328.58 1842.84 1331.77 cv
cp
.878431 .521569 .360784 rgb
f
1846.07 1341.53 mo
1845.87 1341.58 1845.95 1341.93 1846.16 1341.95 cv
1861.23 1340.55 1875.8 1335.98 1888.27 1327.73 cv
1887.95 1326.61 1887.56 1325.5 1887 1324.33 cv
1874.25 1332 1860.9 1338.08 1846.07 1341.53 cv
cp
f
1849 1351.64 mo
1848.8 1351.69 1848.88 1352.04 1849.09 1352.06 cv
1862.76 1350.8 1875.99 1346.92 1887.65 1340.06 cv
1888.15 1338.64 1888.58 1336.98 1888.74 1335.16 cv
1876.33 1342.5 1863.36 1348.29 1849 1351.64 cv
cp
f
1603.65 1339.69 mo
1566.22 1355.56 1539.2 1381.64 1528.37 1393.16 cv
1506.33 1361.62 1484.19 1331.41 1476.91 1292.01 cv
1474.52 1279.11 1473.57 1265.57 1477.6 1253.09 cv
1481.64 1240.61 1491.46 1229.42 1504.31 1226.71 cv
1515.25 1224.42 1526.71 1228.62 1535.95 1234.99 cv
1541.69 1238.97 1546.73 1243.75 1551.24 1249.01 cv
1561.23 1260.48 1568.66 1274.43 1575.83 1288.03 cv
1585.02 1305.39 1594.25 1322.59 1603.65 1339.69 cv
cp
.819608 .819608 .819608 rgb
f
1647.25 1180.99 mo
1604.84 1192.45 1591.98 1179.21 1585.28 1164.32 cv
1585.22 1158.64 1585.01 1154.54 1585.01 1154.54 cv
1588.52 1151.63 li
1646.87 1160.6 li
1646.87 1160.6 1644.65 1171.75 1647.25 1180.99 cv
cp
.878431 .521569 .360784 rgb
f
1663.76 1107.41 mo
1663.76 1107.41 1659.29 1098.98 1655.59 1075.4 cv
1652.89 1058.16 1633.97 1032.39 1616.6 1034.03 cv
1552 1040.13 1533.71 1073.96 1548.58 1108.35 cv
1565.65 1147.83 1567.03 1135.65 1567.03 1135.65 cv
1567.03 1135.65 1661.63 1113.26 1663.76 1107.41 cv
cp
f
1650 1059.29 mo
1657.46 1064.69 1663.03 1086.48 1666.48 1102.58 cv
1676.91 1151.31 1664.99 1169.27 1640.44 1176.49 cv
1615.89 1183.71 1587.96 1178.8 1574.36 1134.32 cv
1567.56 1112.08 1560.9 1091.6 1567.39 1080.29 cv
1577.08 1063.43 1627.13 1042.74 1650 1059.29 cv
cp
.960784 .654902 .517647 rgb
f
1576.66 1127.13 mo
1576.66 1127.13 1565.33 1108.21 1555.18 1121.16 cv
1545.03 1134.1 1566.92 1160.16 1585.01 1154.54 cv
1585.01 1154.54 1583.81 1133.02 1576.66 1127.13 cv
cp
f
1562.5 1129.37 mo
1565.26 1129.35 1568.45 1131.39 1570.71 1132.85 cv
1573.07 1134.37 1575.87 1136.3 1577.35 1138.74 cv
1577.81 1139.5 1576.76 1140.21 1576.11 1139.79 cv
1574.28 1138.62 1572.71 1137.1 1570.96 1135.79 cv
1570.12 1137.1 1569.27 1138.44 1567.92 1139.23 cv
1566.88 1139.84 1565.8 1138.61 1566.13 1137.61 cv
1566.55 1136.32 1567.55 1135.26 1568.55 1134.27 cv
1566.36 1133.14 1563.83 1132.4 1561.92 1130.95 cv
1561.2 1130.4 1561.65 1129.38 1562.5 1129.37 cv
cp
.878431 .521569 .360784 rgb
f
1643.02 1102.12 mo
1643.02 1102.12 1647.54 1102.94 1645.55 1095.55 cv
1643.75 1088.91 1640.9 1090.36 1640.9 1090.36 cv
1640.9 1090.36 1637.95 1090.87 1639.46 1096.69 cv
1640.97 1102.51 1643.02 1102.12 1643.02 1102.12 cv
cp
.294118 .196078 .341176 rgb
f
1601.8 1113.05 mo
1601.8 1113.05 1606.32 1113.86 1604.33 1106.48 cv
1602.53 1099.83 1599.68 1101.29 1599.68 1101.29 cv
1599.68 1101.29 1596.73 1101.8 1598.24 1107.62 cv
1599.75 1113.44 1601.8 1113.05 1601.8 1113.05 cv
cp
f
1629.11 1128.76 mo
1631.2 1128.05 1636.35 1128.44 1636.94 1125.94 cv
1637.43 1123.86 1631.92 1113.09 1631.08 1111.22 cv
1628.05 1104.5 1625.34 1100.06 1622.49 1091.85 cv
1622.36 1091.49 1622.96 1091.17 1623.2 1091.51 cv
1630.19 1101.84 1634.55 1115.39 1639.71 1126.77 cv
1640 1127.39 1639.64 1128.17 1638.94 1128.29 cv
1635.78 1128.8 1632.84 1130.02 1629.7 1130.6 cv
1628.66 1130.8 1628.04 1129.12 1629.11 1128.76 cv
cp
.878431 .521569 .360784 rgb
f
1634.26 1080.17 mo
1637.02 1078.08 1642.62 1076.64 1645.4 1079.4 cv
1645.9 1079.91 1645.52 1080.87 1644.84 1080.96 cv
1643.32 1081.15 1641.86 1080.66 1640.32 1080.81 cv
1638.66 1080.97 1637.17 1081.63 1635.71 1082.4 cv
1634.38 1083.1 1633.04 1081.1 1634.26 1080.17 cv
cp
.294118 .196078 .341176 rgb
f
1592 1095.12 mo
1592.96 1090.5 1600.4 1088.73 1604.1 1090.82 cv
1604.94 1091.3 1604.68 1092.54 1603.93 1092.93 cv
1602.16 1093.85 1600.05 1093.5 1598.14 1094.03 cv
1596.46 1094.49 1595.24 1095.49 1593.75 1096.33 cv
1592.99 1096.76 1591.82 1096.02 1592 1095.12 cv
cp
f
1650.82 1135.75 mo
1650.82 1135.75 1642.54 1137.42 1620.68 1144.52 cv
1620.68 1144.52 1624.89 1154.05 1639.75 1151.07 cv
1649.5 1149.11 1650.82 1135.75 1650.82 1135.75 cv
cp
1 1 1 rgb
f
1657.16 1055.19 mo
1657.23 1055.37 1657.29 1055.56 1657.36 1055.74 cv
1658.04 1057.71 1658.6 1059.84 1658.07 1061.85 cv
1655.92 1069.97 1646.34 1060.54 1642.16 1059.28 cv
1636.47 1057.57 1630.11 1058.06 1624.62 1060.22 cv
1620.03 1062.02 1617.76 1064.93 1612.72 1065.86 cv
1607.21 1066.88 1601.3 1064.61 1595.71 1064.93 cv
1591.71 1065.15 1587.82 1066.41 1584.23 1068.19 cv
1575.3 1072.62 1568.64 1080.17 1564.53 1089.16 cv
1560.67 1097.58 1563.4 1108.02 1557.52 1115.37 cv
1557.09 1115.91 1556.58 1116.45 1555.9 1116.59 cv
1555.29 1116.72 1554.67 1116.5 1554.1 1116.25 cv
1530.63 1106.22 1531.55 1069.59 1543.45 1051.66 cv
1557.47 1030.5 1594.29 1015.43 1619.26 1021.31 cv
1636.46 1025.35 1651.21 1038.56 1657.16 1055.19 cv
cp
.584314 .231373 .207843 rgb
f
1539.78 1133.08 mo
1539.92 1136.43 1540.73 1139.79 1542.26 1142.9 cv
1543.96 1146.36 1545.93 1149.75 1548.68 1152.46 cv
1557.65 1161.3 1577.23 1160.49 1583.73 1148.86 cv
1588.42 1140.47 1587.37 1131.7 1583.12 1123.43 cv
1581.1 1119.49 1578.48 1115.76 1574.96 1113.08 cv
1569.94 1109.25 1563.18 1107.81 1557.04 1109.27 cv
1545.53 1111.99 1539.33 1122.52 1539.78 1133.08 cv
cp
.294118 .196078 .341176 rgb
f
1552.6 1117.34 mo
1552.6 1117.34 1528.12 1036.15 1590.33 1021.84 cv
1590.33 1021.84 1545.57 1043.12 1575.41 1122.12 cv
1552.6 1117.34 li
cp
f
2198.37 1614.36 mo
2195.21 1695.73 2130.2 1657.66 2114.46 1620.84 cv
2112.25 1615.66 2110.04 1610.49 2107.23 1605.62 cv
2101.46 1595.54 li
1995.65 1595.54 li
1989.91 1605.62 li
1987.11 1610.49 1984.85 1615.66 1982.64 1620.84 cv
1966.94 1657.66 1901.93 1695.73 1898.73 1614.36 cv
1895.37 1528.24 1920.95 1464.3 1930.36 1453.51 cv
1939.81 1442.75 1966.03 1445.44 1977.5 1447.46 cv
1988.92 1449.48 2000.39 1467.66 2000.39 1467.66 cv
2048.55 1469.64 li
2096.75 1467.66 li
2096.75 1467.66 2096.95 1467.35 2097.3 1466.83 cv
2099.68 1463.28 2109.68 1449.2 2119.65 1447.46 cv
2131.07 1445.44 2157.33 1442.75 2166.74 1453.51 cv
2176.19 1464.3 2201.77 1528.24 2198.37 1614.36 cv
cp
.482353 .572549 .611765 rgb
f
1983.21 1585.27 mo
1983.21 1574.12 1992.25 1565.08 2003.4 1565.08 cv
2014.55 1565.08 2023.59 1574.12 2023.59 1585.27 cv
2023.59 1596.42 2014.55 1605.46 2003.4 1605.46 cv
1992.25 1605.46 1983.21 1596.42 1983.21 1585.27 cv
cp
.341176 .341176 .337255 rgb
f
2074.07 1585.27 mo
2074.07 1574.12 2083.11 1565.08 2094.26 1565.08 cv
2105.41 1565.08 2114.45 1574.12 2114.45 1585.27 cv
2114.45 1596.42 2105.41 1605.46 2094.26 1605.46 cv
2083.11 1605.46 2074.07 1596.42 2074.07 1585.27 cv
cp
f
1981.7 1500.72 mo
1970.84 1500.72 li
1967.64 1500.72 1965.04 1498.12 1965.04 1494.92 cv
1965.04 1484.06 li
1965.04 1480.86 1962.44 1478.26 1959.23 1478.26 cv
1951.66 1478.26 li
1948.46 1478.26 1945.86 1480.86 1945.86 1484.06 cv
1945.86 1494.92 li
1945.86 1498.12 1943.26 1500.72 1940.05 1500.72 cv
1929.2 1500.72 li
1925.99 1500.72 1923.39 1503.32 1923.39 1506.53 cv
1923.39 1514.1 li
1923.39 1517.3 1925.99 1519.9 1929.2 1519.9 cv
1940.05 1519.9 li
1943.26 1519.9 1945.86 1522.5 1945.86 1525.71 cv
1945.86 1536.56 li
1945.86 1539.77 1948.46 1542.37 1951.66 1542.37 cv
1959.23 1542.37 li
1962.44 1542.37 1965.04 1539.77 1965.04 1536.56 cv
1965.04 1525.71 li
1965.04 1522.5 1967.64 1519.9 1970.84 1519.9 cv
1981.7 1519.9 li
1984.9 1519.9 1987.5 1517.3 1987.5 1514.1 cv
1987.5 1506.53 li
1987.5 1503.32 1984.9 1500.72 1981.7 1500.72 cv
cp
f
2132.02 1485.04 mo
2132.02 1479.09 2136.85 1474.26 2142.8 1474.26 cv
2148.76 1474.26 2153.58 1479.09 2153.58 1485.04 cv
2153.58 1490.99 2148.76 1495.82 2142.8 1495.82 cv
2136.85 1495.82 2132.02 1490.99 2132.02 1485.04 cv
cp
.952941 .243137 .498039 rgb
f
2132.02 1527.93 mo
2132.02 1521.97 2136.85 1517.15 2142.8 1517.15 cv
2148.76 1517.15 2153.58 1521.97 2153.58 1527.93 cv
2153.58 1533.88 2148.76 1538.71 2142.8 1538.71 cv
2136.85 1538.71 2132.02 1533.88 2132.02 1527.93 cv
cp
level3{
gsave
clp
[21.5575 0 0 21.5575 2132.02 1527.93 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[21.5575 0 0 21.5575 2132.02 1527.93 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2164.25 1495.71 mo
2170.2 1495.71 2175.02 1500.53 2175.02 1506.48 cv
2175.02 1512.44 2170.2 1517.26 2164.25 1517.26 cv
2158.29 1517.26 2153.47 1512.44 2153.47 1506.48 cv
2153.47 1500.53 2158.29 1495.71 2164.25 1495.71 cv
cp
.980392 .847059 .698039 rgb
f
2121.36 1495.71 mo
2127.31 1495.71 2132.14 1500.53 2132.14 1506.48 cv
2132.14 1512.44 2127.31 1517.26 2121.36 1517.26 cv
2115.41 1517.26 2110.58 1512.44 2110.58 1506.48 cv
2110.58 1500.53 2115.41 1495.71 2121.36 1495.71 cv
cp
.129412 .67451 1 rgb
f
2097.3 1466.83 mo
2097.3 1511.44 li
2097.3 1516.1 2093.51 1519.9 2088.84 1519.9 cv
2009.49 1519.9 li
2004.82 1519.9 2001.06 1516.1 2001.06 1511.44 cv
2001.06 1467.7 li
2048.55 1469.64 li
2096.75 1467.66 li
2096.75 1467.66 2096.95 1467.35 2097.3 1466.83 cv
cp
.341176 .341176 .337255 rgb
f
1289.55 1266.22 mo
1284.81 1262.88 1278.2 1261.57 1271.41 1261.73 cv
1270.54 1252.34 1269.46 1242.94 1269.34 1233.92 cv
1269.31 1231.9 1266.33 1231.93 1266.22 1233.92 cv
1265.71 1242.88 1264.66 1252.66 1264.21 1262.43 cv
1258.36 1263.42 1252.83 1265.36 1248.73 1267.92 cv
1246.81 1269.12 1247.37 1272.92 1250 1272.6 cv
1254.7 1272.03 1259.32 1271.14 1264.01 1270.73 cv
1264.01 1278.72 1264.63 1286.55 1266.58 1293.76 cv
1267.42 1296.91 1271.5 1295.88 1271.85 1293.05 cv
1272.76 1285.81 1272.64 1278.29 1272.14 1270.69 cv
1277.42 1271.18 1282.64 1272.52 1287.92 1272.25 cv
1291.24 1272.08 1292.16 1268.06 1289.55 1266.22 cv
cp
.937255 .956863 .964706 rgb
f
1892.25 984.143 mo
1886.34 981.394 1879.63 980.25 1872.87 980.188 cv
1872.76 973.759 1873.04 967.223 1872.37 960.868 cv
1872.16 958.847 1869.41 958.294 1868.74 960.376 cv
1866.69 966.701 1866.05 973.72 1865.45 980.344 cv
1865.44 980.414 1865.43 980.485 1865.43 980.554 cv
1861.74 980.935 1858.12 981.565 1854.7 982.435 cv
1851.73 983.191 1852.52 987.432 1855.4 987.597 cv
1858.49 987.774 1861.62 988.048 1864.77 988.344 cv
1864.56 992.583 1864.76 996.833 1866.28 1000.7 cv
1867.37 1003.46 1871.34 1003.84 1872.29 1000.7 cv
1873.43 996.988 1873.46 993.064 1873.27 989.141 cv
1879.15 989.658 1885.02 990.03 1890.72 989.792 cv
1893.49 989.677 1895.16 985.493 1892.25 984.143 cv
cp
f
2197.6 1325.52 mo
2190.93 1324.83 2183.87 1326.21 2177.18 1327.14 cv
2176.79 1321.48 2176.2 1315.91 2175.68 1310.68 cv
2175.43 1308.13 2171.71 1308.03 2171.64 1310.68 cv
2171.47 1316.37 2170.91 1322.18 2170.33 1328.02 cv
2164.47 1328.75 2158.61 1329.54 2152.93 1331.1 cv
2149.98 1331.92 2150.74 1336.07 2153.63 1336.26 cv
2158.92 1336.62 2164.26 1336.33 2169.58 1335.94 cv
2168.98 1342.69 2168.57 1349.42 2168.97 1355.96 cv
2169.2 1359.59 2174.58 1360.68 2175.55 1356.85 cv
2177.27 1350.12 2177.7 1342.76 2177.54 1335.33 cv
2184.53 1334.83 2191.89 1334.83 2198.58 1332.72 cv
2202.7 1331.42 2201.63 1325.93 2197.6 1325.52 cv
cp
f
277.231 1373.93 mo
253.167 1351.67 225.278 1333.99 199.842 1313.3 cv
174.405 1292.62 150.793 1267.94 139.516 1237.16 cv
134.311 1269.06 129.09 1301.16 129.623 1333.48 cv
130.156 1365.8 136.769 1398.68 153.697 1426.21 cv
177.205 1464.45 218.491 1488.9 261.41 1502.04 cv
286.179 1509.63 309.034 1515.98 331.557 1529 cv
351.794 1540.69 358.761 1527.32 355.29 1504.84 cv
347.807 1456.36 312.332 1406.4 277.231 1373.93 cv
cp
level3{
gsave
clp
[200.696 271.649 -271.649 200.696 114.2 1259.06 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[200.696 271.649 -271.649 200.696 114.2 1259.06 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
202.546 1463.86 mo
170.906 1462.76 137.243 1458.45 113.009 1438.08 cv
118.183 1468.86 142.227 1493.68 169.673 1508.53 cv
193.955 1521.67 221.609 1528.52 249.218 1528.23 cv
261.777 1528.1 274.31 1526.52 286.865 1526.88 cv
314.178 1527.67 340.318 1537.53 364.708 1549.15 cv
367.604 1519.97 347.328 1507.92 325.666 1493.85 cv
285.986 1468.07 248.901 1465.48 202.546 1463.86 cv
cp
level3{
gsave
clp
[277.732 75.0081 -75.0081 277.732 17.0845 1436.93 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[277.732 75.0081 -75.0081 277.732 17.0845 1436.93 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
887.458 1495.62 mo
909.506 1475.22 935.059 1459.03 958.365 1440.08 cv
981.671 1421.13 1003.31 1398.51 1013.64 1370.31 cv
1018.41 1399.54 1023.19 1428.95 1022.7 1458.56 cv
1022.21 1488.17 1016.15 1518.3 1000.64 1543.53 cv
979.105 1578.56 941.278 1600.96 901.955 1613.01 cv
879.26 1619.96 858.32 1625.77 837.684 1637.7 cv
819.142 1648.42 812.759 1636.16 815.939 1615.56 cv
822.795 1571.15 855.298 1525.38 887.458 1495.62 cv
cp
level3{
gsave
clp
[-344.63 389.229 -389.229 -344.63 1128.86 1311.3 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-344.63 389.229 -389.229 -344.63 1128.86 1311.3 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
996.311 1557.93 mo
1032.68 1556.66 1071.38 1551.71 1099.24 1528.29 cv
1093.29 1563.67 1065.65 1592.2 1034.1 1609.28 cv
1006.19 1624.39 974.397 1632.26 942.658 1631.93 cv
928.22 1631.78 913.813 1629.96 899.379 1630.38 cv
867.98 1631.28 837.93 1642.61 809.892 1655.98 cv
806.562 1622.43 829.872 1608.57 854.775 1592.4 cv
900.389 1562.77 943.022 1559.78 996.311 1557.93 cv
cp
level3{
gsave
clp
[-456.129 220.969 -220.969 -456.129 1243.38 1455.24 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-456.129 220.969 -220.969 -456.129 1243.38 1455.24 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
735.875 1607.67 mo
521.856 1607.67 li
521.856 1543.97 li
735.875 1543.97 li
735.875 1607.67 li
cp
.482353 .572549 .611765 rgb
f
1029.73 1064.02 mo
1029.73 1527.09 li
1029.73 1541.35 1018.18 1552.9 1003.94 1552.9 cv
254.223 1552.9 li
239.978 1552.9 228.427 1541.35 228.427 1527.09 cv
228.427 1064.02 li
228.427 1049.78 239.978 1038.23 254.223 1038.23 cv
1003.94 1038.23 li
1018.18 1038.23 1029.73 1049.78 1029.73 1064.02 cv
cp
.294118 .196078 .341176 rgb
f
435.548 1657.03 mo
521.856 1607.67 li
735.875 1607.67 li
830.145 1657.03 li
435.548 1657.03 li
cp
.929412 .929412 .929412 rgb
f
830.145 1667.54 mo
435.548 1667.54 li
435.548 1657.03 li
830.145 1657.03 li
830.145 1667.54 li
cp
.776471 .776471 .776471 rgb
f
1003.39 1063.71 mo
1003.39 1476.47 li
254.331 1476.47 li
254.331 1063.71 li
1003.39 1063.71 li
cp
.937255 .956863 .964706 rgb
f
1029.73 1501.94 mo
1029.73 1527.09 li
1029.73 1541.35 1018.18 1552.9 1003.94 1552.9 cv
254.223 1552.9 li
239.978 1552.9 228.427 1541.35 228.427 1527.09 cv
228.427 1501.94 li
1029.73 1501.94 li
cp
.929412 .929412 .929412 rgb
f
836.255 1153.19 mo
836.255 1476.47 li
284.91 1476.47 li
284.91 1153.19 li
836.255 1153.19 li
cp
level3{
gsave
clp
[79.2751 954.127 -954.127 79.2751 518.922 813.417 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.2751 954.127 -954.127 79.2751 518.922 813.417 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
382.042 1121.88 mo
284.91 1121.88 li
284.91 1095.55 li
382.042 1095.55 li
382.042 1121.88 li
cp
.537255 .643137 .690196 rgb
f
983.71 1233.79 mo
856.004 1233.79 li
856.004 1153.19 li
983.71 1153.19 li
983.71 1233.79 li
cp
f
983.71 1335.86 mo
856.004 1335.86 li
856.004 1255.26 li
983.71 1255.26 li
983.71 1335.86 li
cp
f
983.71 1437.94 mo
856.004 1437.94 li
856.004 1357.33 li
983.71 1357.33 li
983.71 1437.94 li
cp
f
901.427 1178.59 mo
901.427 1208.24 li
938.287 1193.32 li
901.427 1178.59 li
cp
.854902 .854902 .854902 rgb
f
901.427 1280.74 mo
901.427 1310.39 li
938.287 1295.47 li
901.427 1280.74 li
cp
f
901.427 1382.89 mo
901.427 1412.54 li
938.287 1397.62 li
901.427 1382.89 li
cp
f
647.559 1005.9 mo
634.079 990.821 612.297 979.04 591.869 978.581 cv
595.47 970.584 597.765 961.728 596.535 953.044 cv
595.304 944.361 590.05 935.926 581.952 932.559 cv
577.681 930.783 572.916 930.487 568.313 930.943 cv
563.577 931.412 558.884 932.668 554.712 934.959 cv
546.302 939.579 540.423 948.521 539.518 958.074 cv
538.611 967.626 542.703 977.515 550.095 983.633 cv
541.075 989.462 530.472 993.143 521.902 999.421 cv
513.323 1005.71 506.935 1015.26 501.681 1024.34 cv
492.422 1040.35 484.807 1058.25 470.014 1069.34 cv
461.89 1075.44 452.159 1079 443.583 1084.44 cv
429.637 1093.29 418.604 1108.48 419.157 1124.98 cv
419.468 1134.24 423.309 1143.09 423.797 1152.34 cv
424.898 1173.24 409.129 1191.25 405.323 1211.82 cv
402.783 1225.55 405.919 1240.25 413.843 1251.74 cv
421.767 1263.24 434.38 1271.4 448.115 1273.91 cv
458.568 1275.83 469.302 1274.58 479.894 1273.72 cv
506.651 1271.57 534.141 1271.5 560.798 1274.99 cv
570.471 1276.26 577.994 1281.68 587.75 1283.13 cv
600.531 1285.02 613.743 1283.98 626.063 1280.08 cv
636.25 1276.86 646.544 1270.93 650.464 1260.99 cv
653.898 1252.28 651.751 1242.28 654.368 1233.29 cv
657.564 1222.32 667.16 1214.69 675.612 1206.99 cv
684.064 1199.3 692.386 1189.42 691.589 1178.01 cv
690.657 1164.7 677.606 1154.78 676.067 1141.52 cv
675.507 1136.71 676.539 1131.87 677.311 1127.08 cv
680.559 1106.92 679.132 1086.04 673.324 1066.48 cv
670.61 1057.34 667.626 1049.3 665.453 1040.05 cv
662.446 1027.24 656.309 1015.68 647.559 1005.9 cv
cp
.952941 .243137 .498039 rgb
f
517.887 1191.43 mo
517.887 1191.43 493.555 1185.94 468.529 1230.69 cv
450.64 1262.62 435.03 1321.08 421.179 1364.97 cv
419.127 1360.25 417.205 1355.57 415.221 1351.46 cv
402.282 1324.65 390.417 1297.34 377.396 1270.58 cv
376.88 1269.52 376.332 1268.44 375.76 1267.38 cv
375.384 1260.64 372.417 1254.13 367.506 1249.23 cv
362.861 1244.6 356.3 1239.55 347.964 1236.75 cv
340.554 1234.25 324.558 1227.2 324.558 1227.2 cv
322.679 1230.11 li
322.542 1235.16 336.473 1243.31 336.473 1243.31 cv
335.535 1242.76 332.151 1243.25 330.967 1243.13 cv
328.345 1242.88 305.721 1236.23 304.024 1237.4 cv
301.983 1238.79 301.833 1241.7 301.942 1244.17 cv
302.274 1251.65 303.362 1259.71 308.561 1265.09 cv
316.892 1273.71 330.665 1274 341.525 1276.9 cv
345.314 1277.91 348.439 1278.85 351.217 1279.75 cv
355.424 1305.64 362.983 1331.96 368.056 1357.75 cv
371.55 1375.51 377.717 1392.17 382.503 1409.51 cv
386.927 1425.54 404.862 1441.4 422.438 1437.54 cv
438.007 1436.03 447.948 1418.38 453.281 1408.45 cv
484.102 1350.7 543.252 1219.52 517.887 1191.43 cv
cp
.960784 .654902 .517647 rgb
f
758.222 1368.33 mo
727.783 1333.09 683.485 1287.19 664.877 1254.1 cv
639.708 1209.42 657.073 1191.52 657.073 1191.52 cv
694.265 1184.49 775.435 1303.31 808.68 1359.7 cv
816.002 1372.19 830.366 1397.83 807.158 1412.07 cv
788.273 1423.66 705.424 1375.07 758.222 1368.33 cv
cp
f
494.746 1288.04 mo
494.746 1288.04 494.811 1288.11 494.877 1288.31 cv
521.736 1330.6 523.515 1386.45 517.67 1412.06 cv
570.799 1425.13 604.221 1423.52 635.284 1419.91 cv
650.651 1413.08 659.713 1406.78 659.713 1406.78 cv
659.713 1406.78 669.762 1319.43 678.102 1295.99 cv
680.072 1290.41 680.974 1281.54 681.123 1271.36 cv
681.593 1239.18 675.146 1193.67 675.146 1193.67 cv
668.58 1190.06 658.531 1187.43 648.483 1185.66 cv
646.842 1185.4 645.2 1185.13 643.624 1184.87 cv
628.388 1182.57 614.531 1181.92 614.531 1181.92 cv
610.131 1136.73 li
610.065 1136.47 li
609.606 1131.68 607.242 1128.33 603.695 1125.96 cv
602.907 1125.44 602.063 1124.96 601.2 1124.52 cv
596.39 1122.06 590.101 1121.27 583.862 1121.1 cv
571.383 1120.78 559.301 1123.21 559.301 1123.21 cv
559.301 1181.39 li
559.301 1182.31 548.285 1183.27 535.134 1184.08 cv
533.69 1184.17 532.244 1184.28 530.799 1184.41 cv
514.973 1185.79 498.423 1195.12 493.169 1198.6 cv
482.859 1205.43 483.384 1270.25 494.746 1288.04 cv
cp
f
753.913 1263.36 mo
753.913 1263.36 751.888 1265.87 748.293 1269.64 cv
739.407 1278.91 720.952 1295.69 699.308 1301.21 cv
697.029 1301.79 694.726 1302.25 692.396 1302.55 cv
679.587 1279.16 li
679.941 1280 680.296 1281.18 680.574 1282.83 cv
681.46 1288.25 681.41 1298.65 676.473 1317.82 cv
675.081 1323.23 674.119 1330.02 673.537 1337.71 cv
673.334 1340.37 673.182 1343.16 673.081 1346.02 cv
672.752 1353.89 672.752 1362.47 673.03 1371.43 cv
673.056 1372.9 673.106 1374.37 673.157 1375.86 cv
674.524 1411.91 679.815 1452.77 685.384 1476.47 cv
504.329 1476.47 li
510.329 1431.48 517.417 1353.79 502.936 1307.77 cv
493.898 1344.09 li
493.898 1344.09 490.658 1343.87 485.14 1342.55 cv
474.659 1340.12 455.951 1333.82 435.597 1317.87 cv
433.167 1315.99 430.711 1313.97 428.256 1311.79 cv
428.256 1311.79 429.041 1309.01 430.509 1304.25 cv
436.61 1284.25 454.609 1229.62 475.495 1204.02 cv
485.95 1188.46 525.568 1184.51 539.416 1183.57 cv
542.428 1183.39 544.226 1183.34 544.226 1183.34 cv
544.226 1184.71 545.01 1228.76 592.4 1232.45 cv
632.374 1235.59 633.133 1187.47 632.45 1183.42 cv
632.45 1183.34 634.905 1183.34 637.867 1183.34 cv
642.703 1183.34 649.284 1183.34 649.284 1183.34 cv
649.284 1183.34 686.372 1175.97 746.141 1253.06 cv
748.698 1256.33 751.28 1259.77 753.913 1263.36 cv
cp
.294118 .196078 .341176 rgb
f
559.301 1123.21 mo
559.301 1152.56 li
568.102 1162.35 584.388 1173.05 613.743 1173.51 cv
610.131 1136.73 li
610.065 1136.47 li
609.606 1131.68 607.242 1128.33 603.695 1125.96 cv
583.862 1121.1 li
571.385 1120.71 559.301 1123.21 559.301 1123.21 cv
cp
.878431 .521569 .360784 rgb
f
636.612 1042.55 mo
642.797 1050.49 645.189 1065.72 646.562 1083.67 cv
650.717 1138 625.323 1159.14 607.506 1159.93 cv
589.203 1160.75 550.298 1154.74 542.091 1104.55 cv
537.988 1079.45 537.235 1058.25 542.468 1044.98 cv
553.436 1017.18 609.477 1007.74 636.612 1042.55 cv
cp
.960784 .654902 .517647 rgb
f
615.304 1063.2 mo
618.598 1061.33 624.875 1060.6 627.481 1064 cv
627.956 1064.61 627.407 1065.6 626.653 1065.6 cv
624.975 1065.59 623.461 1064.84 621.777 1064.77 cv
619.951 1064.7 618.244 1065.19 616.547 1065.82 cv
615.007 1066.38 613.851 1064.02 615.304 1063.2 cv
cp
.294118 .196078 .341176 rgb
f
569.096 1070.45 mo
570.805 1065.58 579.136 1064.76 582.828 1067.56 cv
583.67 1068.21 583.208 1069.51 582.337 1069.82 cv
580.29 1070.56 578.047 1069.88 575.901 1070.17 cv
574.014 1070.42 572.543 1071.32 570.812 1072.02 cv
569.923 1072.37 568.762 1071.39 569.096 1070.45 cv
cp
f
638.118 1338.83 mo
638.118 1338.83 706.882 1353.43 759.422 1361.95 cv
778.562 1361.34 810.795 1370.05 810.257 1367.99 cv
806.603 1353.98 822.383 1402.33 807.158 1412.07 cv
788.495 1424.01 726.851 1393.86 680.81 1378.69 cv
638.118 1338.83 li
cp
.960784 .654902 .517647 rgb
f
680.81 1378.69 mo
680.81 1378.69 674.906 1375.33 655.835 1371.82 cv
644.778 1369.79 631.027 1370.6 622.038 1362.67 cv
616.429 1357.71 614.705 1349.77 613.781 1342.34 cv
613.476 1339.89 613.396 1336.98 615.32 1335.42 cv
616.919 1334.13 639.998 1338.95 642.632 1339 cv
643.822 1339.02 647.157 1338.27 648.135 1338.74 cv
648.135 1338.74 633.602 1331.72 633.337 1326.67 cv
634.979 1323.63 li
634.979 1323.63 651.484 1329.39 659.07 1331.29 cv
677.522 1335.9 688.536 1351.69 688.536 1351.69 cv
688.536 1351.69 693.766 1374.24 680.81 1378.69 cv
cp
f
639.918 1084.54 mo
637.285 1090.1 631.589 1094.18 625.412 1094.84 cv
612.071 1096.23 604.274 1082.48 607.059 1071.19 cv
607.944 1067.7 609.818 1064.43 612.855 1061.93 cv
615.818 1059.45 619.691 1058.06 623.514 1058.13 cv
626.323 1058.18 629.007 1059.04 631.437 1060.36 cv
634.272 1061.93 636.779 1064.11 638.602 1066.74 cv
639.513 1068.13 640.222 1069.62 640.703 1071.19 cv
642.07 1075.52 641.842 1080.38 639.918 1084.54 cv
cp
572.275 1064.03 mo
579.667 1062.74 585.819 1065.73 589.844 1071.19 cv
591.135 1072.92 592.224 1074.92 593.034 1077.09 cv
594.604 1081.29 594.401 1086.31 591.793 1089.98 cv
588.553 1094.51 582.528 1096.15 577.009 1095.95 cv
570.629 1095.75 563.871 1092.94 561.238 1087.22 cv
559.794 1084.05 559.794 1080.51 560.2 1077.09 cv
560.402 1075.19 560.706 1073.29 561.516 1071.57 cv
561.567 1071.45 561.643 1071.32 561.718 1071.19 cv
563.693 1067.27 567.896 1064.74 572.275 1064.03 cv
cp
642.475 1071.19 mo
642.196 1069.78 641.867 1068.38 641.487 1067.02 cv
638.602 1056.46 633.387 1041.95 622.501 1037.32 cv
619.514 1036.06 616.223 1035.7 612.982 1035.58 cv
603.286 1035.17 593.616 1036.56 584.021 1038.03 cv
571.744 1039.93 561.313 1044.71 552.124 1053.14 cv
547.441 1057.35 545.744 1063.04 545.01 1069.22 cv
544.935 1069.88 544.884 1070.54 544.833 1071.19 cv
543.82 1084.56 548.099 1098 552.959 1110.26 cv
554.884 1115.04 556.934 1119.9 559.314 1124.53 cv
564.225 1134.13 570.528 1142.86 579.642 1148.35 cv
587.642 1153.22 597.236 1155.06 606.628 1154.73 cv
608.35 1154.68 610.122 1154.58 611.868 1154.3 cv
616.223 1153.72 620.476 1152.33 623.893 1149.6 cv
627.184 1146.99 629.488 1143.29 631.589 1139.62 cv
642.626 1120.28 647.437 1094.1 642.475 1071.19 cv
cp
1 1 1 rgb
f
597.964 1107.32 mo
600.331 1106.86 605.859 1108.04 606.867 1105.42 cv
607.706 1103.23 603.315 1090.75 602.679 1088.61 cv
601.982 1086.26 601.287 1084.15 600.602 1082.09 cv
600.81 1081.93 600.998 1081.75 601.223 1081.62 cv
601.717 1081.32 602.214 1081.12 602.715 1080.98 cv
605.325 1089.57 607.306 1098.58 609.748 1106.72 cv
609.962 1107.43 609.459 1108.23 608.683 1108.25 cv
605.187 1108.35 601.825 1109.23 598.34 1109.41 cv
597.176 1109.47 596.75 1107.56 597.964 1107.32 cv
cp
.878431 .521569 .360784 rgb
f
592.844 1120.51 mo
596.219 1122 598.796 1123.79 602.686 1123.78 cv
605.711 1123.77 608.918 1122.19 611.819 1123.09 cv
612.276 1123.23 612.636 1123.77 612.346 1124.24 cv
610.283 1127.59 604.575 1128.15 600.992 1128 cv
597.145 1127.85 592.547 1126.63 590.428 1123.15 cv
589.428 1121.51 591.178 1119.78 592.844 1120.51 cv
cp
f
577.27 1025.9 mo
578.258 1026.07 579.492 1026.48 581.122 1027.14 cv
586.953 1029.49 593.446 1029.41 599.629 1029.44 cv
607.484 1029.47 615.487 1029.78 622.889 1032.41 cv
630.29 1035.04 637.107 1040.36 639.749 1047.75 cv
640.442 1049.7 641.479 1052.22 643.531 1052.02 cv
645.303 1051.85 646.057 1049.7 646.313 1047.94 cv
647.97 1036.49 645.497 1024.48 639.45 1014.61 cv
626.782 993.939 600.98 985.233 577.929 990.286 cv
564.641 993.198 552.386 999.735 541.222 1007.51 cv
533.933 1012.58 526.801 1018.49 523.001 1026.52 cv
519.979 1032.91 519.305 1040.16 519.516 1047.23 cv
519.883 1059.48 521.143 1075.7 527.624 1086.4 cv
529.373 1089.29 532.547 1092.06 535.9 1090 cv
539.823 1087.58 537.976 1082.46 538.073 1078.89 cv
538.35 1068.68 542.916 1058.22 549.535 1050.55 cv
553.507 1045.95 558.301 1042.19 562.839 1038.18 cv
565.203 1036.09 567.552 1033.97 569.652 1031.6 cv
573.369 1027.43 573.882 1025.29 577.27 1025.9 cv
cp
.952941 .243137 .498039 rgb
f
517.803 1097.56 mo
517.654 1096.43 517.563 1095.24 517.906 1094.16 cv
518.332 1092.81 519.372 1091.8 520.458 1091.01 cv
527.326 1086.02 537.135 1087.9 543.296 1093.89 cv
549.56 1099.99 560.792 1129.96 544.288 1126.58 cv
531.125 1123.89 519.728 1112.24 517.803 1097.56 cv
cp
.960784 .654902 .517647 rgb
f
584.872 1078.44 mo
584.441 1076.05 581.161 1076.91 580.942 1078.97 cv
580.718 1081.08 580.746 1082.55 578.705 1083.71 cv
577.364 1084.48 575.823 1084.73 574.312 1084.52 cv
571.731 1084.16 569.997 1082.21 568.052 1080.65 cv
567.564 1080.26 566.934 1080.52 566.869 1081.14 cv
565.815 1091.39 587.11 1090.87 584.872 1078.44 cv
cp
.294118 .196078 .341176 rgb
f
630.608 1073.48 mo
630.021 1072.06 627.933 1071.8 627.441 1073.48 cv
626.435 1076.94 625.691 1080.63 621.159 1080.51 cv
617.663 1080.42 616.715 1077.14 613.819 1076.13 cv
613.12 1075.89 612.44 1076.52 612.422 1077.2 cv
612.29 1082.33 618.963 1085.24 623.312 1084.39 cv
627.719 1083.54 632.54 1078.16 630.608 1073.48 cv
cp
f
362.257 1178.37 mo
354.161 1249.94 li
353.774 1253.32 351.402 1256.44 347.999 1257.26 cv
340.909 1259.04 332.891 1257.91 327.63 1256.7 cv
324.15 1255.92 321.469 1253.19 320.875 1249.76 cv
307.624 1178.94 li
306.618 1173.68 310.897 1168.7 316.467 1168.7 cv
353.31 1168.7 li
358.699 1168.7 362.85 1173.24 362.257 1178.37 cv
cp
1 .996078 1 rgb
f
355.476 1238.26 mo
354.161 1249.94 li
353.774 1253.32 351.402 1256.44 347.999 1257.26 cv
340.909 1259.04 332.891 1257.91 327.63 1256.7 cv
324.15 1255.92 321.469 1253.19 320.875 1249.76 cv
318.839 1238.96 li
323.634 1239.63 328.481 1240.66 332.891 1240.61 cv
340.47 1240.53 347.999 1239.55 355.476 1238.26 cv
cp
.294118 .196078 .341176 rgb
f
351.087 1183.12 mo
345.331 1183.06 339.575 1183.01 333.819 1182.96 cv
328.752 1182.91 323.297 1182.27 318.457 1183.76 cv
316.669 1184.31 316.375 1186.69 318.306 1187.33 cv
323.096 1188.91 328.557 1188.42 333.586 1188.48 cv
339.342 1188.54 345.098 1188.61 350.853 1188.67 cv
354.631 1188.71 354.881 1183.15 351.087 1183.12 cv
cp
1 .788235 .690196 rgb
f
350.781 1194.1 mo
345.341 1194.06 339.901 1194.02 334.461 1193.98 cv
329.672 1193.94 324.518 1193.32 319.94 1194.82 cv
318.25 1195.37 317.966 1197.75 319.79 1198.39 cv
324.313 1199.96 329.475 1199.46 334.229 1199.5 cv
339.668 1199.55 345.107 1199.6 350.547 1199.65 cv
354.118 1199.69 354.366 1194.13 350.781 1194.1 cv
cp
f
536.771 1103.32 mo
534.746 1102 531.079 1099.16 528.922 1101.59 cv
528.428 1102.15 528.904 1103 529.647 1102.83 cv
531.274 1102.46 534.127 1104.51 536.031 1106.02 cv
534.47 1106.84 533.232 1109 534.38 1110.52 cv
534.771 1111.04 535.387 1111.16 535.899 1110.72 cv
536.358 1110.32 536.617 1109.76 537.003 1109.29 cv
537.411 1108.8 537.901 1108.45 538.258 1107.92 cv
539.813 1109.4 541.247 1111.2 543.145 1112.08 cv
543.84 1112.4 544.691 1111.87 544.477 1111.05 cv
543.596 1107.72 539.526 1105.12 536.771 1103.32 cv
cp
.878431 .521569 .360784 rgb
f
377.106 1667.54 mo
251.202 1667.54 li
244.817 1667.54 239.626 1662.41 239.568 1656.03 cv
239.146 1610.04 238.419 1509.29 239.802 1471.16 cv
241.619 1421.06 294.82 1403.5 294.82 1403.5 cv
314.146 1405.76 li
333.47 1403.5 li
333.47 1403.5 386.671 1421.06 388.506 1471.16 cv
389.888 1509.29 389.161 1610.04 388.74 1656.03 cv
388.682 1662.41 383.491 1667.54 377.106 1667.54 cv
cp
1 .788235 .690196 rgb
f
288 1353.47 mo
287.999 1406.22 li
287.999 1408.11 290.029 1409.86 293.467 1411.23 cv
298.258 1413.15 305.738 1414.4 314.146 1414.4 cv
322.552 1414.4 330.032 1413.15 334.823 1411.23 cv
338.261 1409.86 340.292 1408.11 340.292 1406.22 cv
340.294 1353.47 li
288 1353.47 li
cp
.921569 .658824 .545098 rgb
f
288 1353.47 mo
288 1348.95 299.707 1345.28 314.147 1345.28 cv
328.589 1345.28 340.294 1348.95 340.294 1353.47 cv
340.294 1357.99 328.589 1361.65 314.147 1361.65 cv
299.707 1361.65 288 1357.99 288 1353.47 cv
cp
1 .788235 .690196 rgb
f
254.045 1505.96 mo
254.045 1505.96 273.916 1488.38 314.154 1488.38 cv
354.393 1488.38 372.583 1505.96 372.583 1505.96 cv
372.583 1610.85 li
254.045 1610.85 li
254.045 1505.96 li
cp
.921569 .658824 .545098 rgb
f
986.311 1421.33 mo
1065.9 1451.31 li
1070.62 1453.08 1072.75 1458.56 1070.47 1463.07 cv
984.643 1632.88 li
925.678 1610.67 li
975.134 1427.06 li
976.437 1422.22 981.625 1419.56 986.311 1421.33 cv
cp
1 .788235 .690196 rgb
f
959.293 1666.22 mo
922.063 1652.19 li
916.246 1650 913.307 1643.51 915.498 1637.7 cv
925.678 1610.67 li
983.973 1632.63 li
973.792 1659.65 li
971.601 1665.47 965.109 1668.41 959.293 1666.22 cv
cp
.921569 .658824 .545098 rgb
f
975.075 1512.91 mo
976.387 1502.82 979.288 1492.22 986.951 1485.52 cv
989.77 1483.06 994.414 1481.38 996.985 1484.1 cv
998.296 1485.49 998.534 1487.54 998.65 1489.45 cv
999.094 1496.75 998.715 1504.09 997.521 1511.31 cv
1000.81 1505.27 1005.23 1499.86 1010.5 1495.44 cv
1014.66 1491.95 1020.84 1489.06 1025.24 1492.24 cv
1029.59 1495.38 1028.89 1502.06 1026.86 1507.02 cv
1022.95 1516.57 1016.01 1524.51 1009.17 1532.24 cv
1003.43 1538.71 997.688 1545.16 991.925 1551.6 cv
985.064 1559.27 977.069 1558.45 975.064 1547.89 cv
972.953 1536.77 973.626 1524.05 975.075 1512.91 cv
cp
1 .890196 .839216 rgb
f
191.312 1172.97 mo
185.535 1172.18 179.27 1172.16 172.994 1172.54 cv
171.856 1166.81 170.594 1161.12 168.872 1155.54 cv
168.256 1153.55 165.185 1153.87 165.185 1156.04 cv
165.184 1161.74 165.632 1167.42 166.214 1173.08 cv
161.836 1173.52 157.53 1174.08 153.477 1174.68 cv
151.198 1175.01 151.291 1178.77 153.477 1179.19 cv
157.678 1179.99 162.314 1180.58 167.051 1180.84 cv
167.621 1186.44 167.632 1192.09 171.292 1196.56 cv
172.519 1198.05 174.574 1196.96 175.154 1195.54 cv
177 1191 175.807 1185.8 174.698 1180.92 cv
180.535 1180.75 186.276 1179.99 191.312 1178.32 cv
193.629 1177.55 194.248 1173.37 191.312 1172.97 cv
cp
.937255 .956863 .964706 rgb
f
495.844 994.618 mo
488.258 993.294 480.409 992.972 472.551 992.917 cv
472.394 988.895 471.993 984.838 470.324 981.307 cv
469.744 980.08 467.662 980.08 467.083 981.307 cv
465.411 984.844 465.01 988.899 464.854 992.92 cv
460.639 992.947 456.443 992.983 452.313 992.921 cv
448.399 992.864 447.278 999.404 451.36 999.955 cv
455.652 1000.53 460.056 1001.07 464.495 1001.47 cv
464.142 1005.81 463.766 1010.46 467.609 1013.07 cv
468.208 1013.47 469.198 1013.47 469.796 1013.07 cv
473.481 1010.57 473.287 1006.18 472.953 1002 cv
480.71 1002.25 488.458 1001.78 495.844 999.853 cv
498.301 999.213 498.559 995.091 495.844 994.618 cv
cp
f
1074.68 1371.91 mo
1069.97 1370.61 1064.61 1370.43 1059.26 1370.83 cv
1058.76 1367.75 1058.15 1364.68 1057.38 1361.62 cv
1056.68 1358.84 1052.61 1359.53 1052.5 1362.28 cv
1052.38 1365.4 1052.34 1368.52 1052.31 1371.64 cv
1049.49 1372.07 1046.74 1372.6 1044.18 1373.14 cv
1040.47 1373.94 1041.72 1378.99 1045.02 1379.33 cv
1047.31 1379.56 1049.75 1379.76 1052.26 1379.88 cv
1052.26 1381.23 1052.26 1382.58 1052.25 1383.93 cv
1052.2 1390.42 1051.01 1397.21 1052.84 1403.48 cv
1053.88 1407.05 1058.49 1406.64 1059.69 1403.48 cv
1062.17 1396.95 1061.03 1389.24 1060.58 1382.38 cv
1060.52 1381.55 1060.44 1380.74 1060.37 1379.92 cv
1065.42 1379.7 1070.41 1378.95 1074.68 1377.26 cv
1077.08 1376.31 1077.53 1372.7 1074.68 1371.91 cv
cp
f
361.225 623.966 mo
321.624 615.491 280.85 614.298 240.788 608.37 cv
200.726 602.442 160.078 591.111 128.687 565.524 cv
143.274 602.692 157.974 640.088 178.92 674.082 cv
199.867 708.075 227.626 738.832 262.971 757.407 cv
312.056 783.203 371.326 783.132 425.208 770.035 cv
456.305 762.476 484.583 754.803 516.718 754.428 cv
545.591 754.091 544.558 735.493 526.693 713.799 cv
488.178 667.027 418.988 636.327 361.225 623.966 cv
cp
level3{
gsave
clp
[632.498 492.619 -492.619 632.498 -54.7811 384.364 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[632.498 492.619 -492.619 632.498 -54.7811 384.364 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
338.603 766.593 mo
304.296 785.374 265.824 802.03 227.234 795.671 cv
252.138 825.1 293.331 836.304 331.853 834.775 cv
365.934 833.423 399.628 823.26 428.772 805.542 cv
442.03 797.481 454.347 787.901 467.913 780.369 cv
497.423 763.982 531.406 757.967 564.645 754.937 cv
549.316 722.107 520.179 722.094 488.296 720.808 cv
429.894 718.452 388.862 739.079 338.603 766.593 cv
cp
level3{
gsave
clp
[787.581 -234.146 234.146 787.581 -57.1614 914.073 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[787.581 -234.146 234.146 787.581 -57.1614 914.073 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
741.218 775.482 mo
527.199 775.482 li
527.199 711.786 li
741.218 711.786 li
741.218 775.482 li
cp
.482353 .572549 .611765 rgb
f
1035.07 231.835 mo
1035.07 694.901 li
1035.07 709.158 1023.52 720.709 1009.28 720.709 cv
259.565 720.709 li
245.32 720.709 233.77 709.158 233.77 694.901 cv
233.77 231.835 li
233.77 217.59 245.32 206.04 259.565 206.04 cv
1009.28 206.04 li
1023.52 206.04 1035.07 217.59 1035.07 231.835 cv
cp
.294118 .196078 .341176 rgb
f
440.891 824.847 mo
527.199 775.482 li
741.218 775.482 li
835.488 824.847 li
440.891 824.847 li
cp
.929412 .929412 .929412 rgb
f
835.488 835.356 mo
440.891 835.356 li
440.891 824.847 li
835.488 824.847 li
835.488 835.356 li
cp
.776471 .776471 .776471 rgb
f
1008.74 231.525 mo
1008.74 644.28 li
259.674 644.28 li
259.674 231.525 li
1008.74 231.525 li
cp
.937255 .956863 .964706 rgb
f
1035.07 669.754 mo
1035.07 694.901 li
1035.07 709.158 1023.52 720.709 1009.28 720.709 cv
259.565 720.709 li
245.32 720.709 233.77 709.158 233.77 694.901 cv
233.77 669.754 li
1035.07 669.754 li
cp
.929412 .929412 .929412 rgb
f
841.599 320.992 mo
841.599 644.281 li
290.262 644.281 li
290.262 320.992 li
841.599 320.992 li
cp
level3{
gsave
clp
[39.637 815.397 -815.397 39.637 547.98 113.365 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.637 815.397 -815.397 39.637 547.98 113.365 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
387.385 289.695 mo
290.252 289.695 li
290.252 263.363 li
387.385 263.363 li
387.385 289.695 li
cp
.537255 .643137 .690196 rgb
f
989.053 401.603 mo
861.347 401.603 li
861.347 321 li
989.053 321 li
989.053 401.603 li
cp
f
989.053 503.676 mo
861.347 503.676 li
861.347 423.073 li
989.053 423.073 li
989.053 503.676 li
cp
f
989.053 605.75 mo
861.347 605.75 li
861.347 525.146 li
989.053 525.146 li
989.053 605.75 li
cp
f
907.603 346.399 mo
907.603 376.051 li
944.463 361.13 li
907.603 346.399 li
cp
.854902 .854902 .854902 rgb
f
907.603 448.549 mo
907.603 478.2 li
944.463 463.279 li
907.603 448.549 li
cp
f
907.603 550.698 mo
907.603 580.35 li
944.463 565.429 li
907.603 550.698 li
cp
f
840.641 264.355 mo
849.531 275.257 850.665 290.47 843.649 302.715 cv
833.427 320.719 818.857 336.293 804.166 350.697 cv
781.79 372.639 738.116 406.383 709.034 419.788 cv
685.112 430.814 681.775 419.876 656.448 415.023 cv
648.381 413.478 640.157 412.978 632.302 410.39 cv
626.781 408.571 618.825 405.358 617.947 398.806 cv
616.916 391.112 623.287 381.293 628.046 375.713 cv
633.34 369.506 639.896 364.518 646.363 359.612 cv
658.297 350.561 671.184 342.873 683.282 334.054 cv
706.839 316.882 731.078 300.647 755.548 284.811 cv
755.548 284.811 666.349 246.125 627.744 227.972 cv
623.119 225.869 619.237 224.023 616.342 222.544 cv
630.691 188.534 li
630.691 188.534 635.217 188.916 642.981 189.917 cv
681.391 194.657 799.046 213.095 840.641 264.355 cv
cp
.960784 .654902 .517647 rgb
f
645.241 219.364 mo
645.241 219.364 678.116 205.709 665.047 193.359 cv
665.047 193.359 631.979 184.108 617.07 180.316 cv
602.211 176.556 571.646 166.854 560.804 169.773 cv
560.804 169.773 558.302 170.558 555.324 172.623 cv
554.056 173.456 552.727 174.544 551.458 175.877 cv
549.863 177.553 548.385 179.579 547.299 182.122 cv
546.872 183.216 546.495 184.344 546.237 185.621 cv
545.809 187.546 545.6 189.688 545.747 192.061 cv
545.824 193.269 546.002 194.542 546.24 195.892 cv
546.529 197.273 li
547.113 199.861 549.152 201.883 551.733 202.524 cv
560.865 204.813 583.236 210.85 590.772 215.964 cv
590.772 215.964 569.547 216.462 566.535 222.335 cv
566.824 226.864 li
566.824 226.864 587.529 225.338 604.813 228.155 cv
626.7 231.67 645.241 219.364 645.241 219.364 cv
cp
f
483.468 602.027 mo
471.903 601.733 460.398 604.216 448.83 604.183 cv
437.262 604.148 425 601.153 416.741 591.789 cv
404.767 578.21 404.836 555.98 408.01 536.941 cv
410.922 519.475 415.752 502.438 422.347 486.368 cv
424.66 480.731 427.239 475.009 427.559 468.781 cv
427.878 462.553 425.201 455.602 420.047 453.748 cv
414.984 451.926 409.431 455.462 404.27 454.05 cv
396.089 451.813 394.016 439.395 395.022 429.747 cv
396.694 413.723 401.791 396.247 412.943 384.425 cv
423.576 373.155 432.565 358.933 446.66 351.449 cv
459.649 344.551 474.943 343.948 489.644 343.495 cv
517.425 342.64 545.206 341.785 572.987 340.93 cv
584.675 340.57 596.741 340.272 607.625 344.545 cv
634.09 354.936 635.155 381.171 636.54 405.396 cv
637.959 430.225 636.556 455.127 634.405 479.871 cv
632.721 499.245 630.437 519.104 622.314 536.161 cv
616.081 549.249 606.699 560.006 596.514 569.202 cv
572.168 591.185 542.458 605.136 511.749 609.006 cv
498.668 610.655 485.011 610.416 472.918 604.417 cv
483.468 602.027 li
cp
.294118 .196078 .341176 rgb
f
408.027 277.719 mo
405.245 260.685 467.375 236.359 546.8 223.39 cv
626.226 210.421 692.869 213.719 695.651 230.754 cv
698.432 247.789 636.3 272.111 556.875 285.08 cv
477.45 298.049 410.809 294.753 408.027 277.719 cv
cp
.678431 .290196 .184314 rgb
f
588.915 482.063 mo
586.428 484.022 583.259 485.215 579.24 485.361 cv
574.002 485.551 568.865 484.023 563.901 482.34 cv
540.483 474.399 517.529 461.876 503.51 441.505 cv
494.096 427.824 489.63 410.125 492.619 393.68 cv
493.732 387.555 496.417 376.651 501.763 372.676 cv
505.794 369.679 515.084 373.119 517.323 367.782 cv
519.727 362.049 519.084 343.759 518.122 329.959 cv
517.534 320.596 516.776 313.316 516.776 313.316 cv
514.636 282.336 582.168 320.062 582.168 320.062 cv
582.168 320.062 579.493 334.454 579.118 347.777 cv
578.852 357.835 579.814 367.253 584.148 369.554 cv
585.54 370.356 588.046 370.586 591.309 370.479 cv
595.153 390.061 595.732 410.77 596.397 430.651 cv
596.837 443.832 601.236 472.354 588.915 482.063 cv
cp
.960784 .654902 .517647 rgb
f
582.168 320.062 mo
582.168 320.062 579.493 334.454 579.118 347.777 cv
545.036 358.853 525.72 340.179 518.122 329.959 cv
517.534 320.596 516.776 313.316 516.776 313.316 cv
514.636 282.336 582.168 320.062 582.168 320.062 cv
cp
.878431 .521569 .360784 rgb
f
579.995 250.186 mo
583.104 248.603 588.914 248.181 591.176 251.416 cv
591.587 252.004 591.042 252.894 590.348 252.858 cv
588.803 252.779 587.44 252.03 585.892 251.902 cv
584.213 251.763 582.621 252.146 581.034 252.649 cv
579.593 253.106 578.625 250.884 579.995 250.186 cv
cp
.294118 .196078 .341176 rgb
f
534.268 253.979 mo
536.039 249.568 543.743 249.148 547.029 251.883 cv
547.778 252.507 547.3 253.69 546.485 253.944 cv
544.57 254.54 542.533 253.817 540.545 254 cv
538.797 254.159 537.407 254.926 535.785 255.496 cv
534.952 255.788 533.923 254.839 534.268 253.979 cv
cp
f
610.34 278.326 mo
610.722 261.492 615.513 232.062 598.395 221.861 cv
578.411 209.952 552.169 213.196 530.45 217.216 cv
520.499 219.059 510.267 221.323 502.079 227.273 cv
483.601 240.701 488.443 264.535 495.312 282.554 cv
495.629 283.388 500.523 295.468 502.247 289.765 cv
502.247 289.765 607.184 283.749 610.34 278.326 cv
cp
f
601.504 270.01 mo
601.504 270.01 611.176 258.405 620.847 270.01 cv
630.519 281.616 614.078 303.83 601.504 304.812 cv
601.504 304.812 600.054 275.007 601.504 270.01 cv
cp
.878431 .521569 .360784 rgb
f
599.295 236.452 mo
605.722 243.135 606.253 258.13 606.79 274.714 cv
608.413 324.91 593.378 340.588 567.738 343.35 cv
542.099 346.111 515.275 336.25 509.753 289.703 cv
506.992 266.43 504.047 244.928 512.514 234.874 cv
525.137 219.884 579.572 215.94 599.295 236.452 cv
cp
.960784 .654902 .517647 rgb
f
513.319 282.985 mo
513.319 282.985 505.473 262.195 493.09 273.214 cv
480.708 284.234 497.837 315.644 516.776 313.316 cv
516.776 313.316 519.353 290.098 513.319 282.985 cv
cp
f
498.876 282.67 mo
501.617 283.147 504.416 285.731 506.398 287.584 cv
508.468 289.52 510.892 291.93 511.926 294.615 cv
512.25 295.456 511.078 295.973 510.507 295.442 cv
508.904 293.95 507.616 292.163 506.12 290.549 cv
505.054 291.702 503.968 292.871 502.486 293.417 cv
501.346 293.837 500.5 292.421 501.001 291.485 cv
501.646 290.28 502.833 289.412 503.999 288.614 cv
502.031 287.099 499.657 285.908 498.023 284.135 cv
497.399 283.459 498.029 282.523 498.876 282.67 cv
cp
.878431 .521569 .360784 rgb
f
584.755 273.521 mo
584.755 273.521 589.094 275.136 588.437 267.452 cv
587.845 260.543 584.755 261.476 584.755 261.476 cv
584.755 261.476 581.74 261.455 582.195 267.498 cv
582.651 273.542 584.755 273.521 584.755 273.521 cv
cp
.294118 .196078 .341176 rgb
f
540.773 273.521 mo
540.773 273.521 545.112 275.136 544.455 267.452 cv
543.863 260.543 540.773 261.476 540.773 261.476 cv
540.773 261.476 537.757 261.455 538.213 267.498 cv
538.669 273.542 540.773 273.521 540.773 273.521 cv
cp
f
565.042 293.986 mo
567.239 293.657 572.281 294.971 573.315 292.596 cv
574.177 290.618 570.64 278.95 570.141 276.949 cv
568.341 269.736 566.44 264.853 565.082 256.2 cv
565.023 255.822 565.677 255.607 565.848 255.992 cv
570.938 267.484 572.834 281.702 575.916 293.907 cv
576.084 294.577 575.589 295.287 574.874 295.275 cv
571.65 295.224 568.519 295.905 565.303 295.923 cv
564.229 295.929 563.915 294.155 565.042 293.986 cv
cp
.878431 .521569 .360784 rgb
f
578.997 247.817 mo
581.985 246.295 587.571 245.89 589.746 249 cv
590.141 249.566 589.617 250.42 588.95 250.386 cv
587.465 250.311 586.154 249.59 584.666 249.467 cv
583.052 249.334 581.521 249.702 579.995 250.186 cv
578.61 250.625 577.679 248.489 578.997 247.817 cv
cp
.294118 .196078 .341176 rgb
f
531.886 250.059 mo
533.588 245.818 540.994 245.414 544.154 248.043 cv
544.874 248.643 544.415 249.78 543.631 250.024 cv
541.79 250.597 539.832 249.901 537.92 250.078 cv
536.239 250.231 534.903 250.969 533.343 251.516 cv
532.543 251.797 531.554 250.885 531.886 250.059 cv
cp
f
455.477 644.281 mo
456.535 631.131 457.024 617.596 456.715 603.879 cv
456.457 590.885 455.477 577.71 453.621 564.613 cv
453.337 562.705 453.08 560.797 452.796 558.915 cv
450.682 544.605 448.439 531.275 446.17 518.9 cv
445.5 515.188 443.489 504.513 443.153 502.812 cv
429.798 433.56 418.557 396.793 439.518 381.556 cv
445.371 377.302 452.642 374.62 460.299 372.97 cv
463.883 372.171 467.55 371.631 471.186 371.244 cv
474.589 370.883 477.934 370.675 481.208 370.572 cv
489.64 370.263 497.4 370.624 502.995 370.881 cv
503.227 371.165 503.459 371.449 503.717 371.784 cv
505.393 374.027 507.404 377.276 509.724 381.169 cv
522.796 403.084 545.588 445.394 575.96 444.465 cv
595.503 443.872 595.279 390.615 591.309 370.479 cv
593.165 370.428 595.247 370.267 597.515 370.028 cv
606.594 369.073 618.476 366.859 629.794 365.467 cv
633.352 365.029 636.833 364.665 640.133 364.436 cv
652.198 363.599 662.1 364.565 664.91 370.186 cv
669.422 379.209 675.919 402.568 680.741 422.576 cv
684.298 437.323 686.954 450.241 687.187 454.34 cv
687.238 455.01 698.608 624.789 698.608 624.789 cv
698.531 630.513 699.562 637.139 701.393 644.281 cv
455.477 644.281 li
cp
.901961 .901961 .901961 rgb
f
293.994 570.378 mo
303.239 580.981 318.042 584.666 331.296 579.817 cv
350.767 572.78 368.576 561.047 385.253 548.998 cv
410.655 530.644 436.381 515.01 454.501 488.606 cv
469.406 466.889 474.093 440.035 473.583 414.253 cv
473.421 406.041 474.316 397.85 473.091 389.671 cv
472.23 383.922 470.406 375.538 464.096 373.567 cv
456.687 371.252 445.933 375.875 439.63 379.625 cv
432.619 383.794 426.596 389.415 420.669 394.962 cv
409.733 405.197 399.981 416.602 389.247 427.039 cv
368.346 447.359 348.254 468.512 328.516 489.958 cv
328.516 489.958 305.437 395.51 294.059 354.395 cv
292.766 349.482 291.603 345.344 290.633 342.241 cv
254.701 350.635 li
254.701 350.635 254.301 355.171 253.978 362.993 cv
252.168 401.652 250.487 520.73 293.994 570.378 cv
cp
.960784 .654902 .517647 rgb
f
290.652 342.281 mo
290.652 342.281 269.462 360.903 254.701 350.635 cv
254.701 350.635 253.431 336.505 246.671 322.686 cv
239.954 308.91 224.21 280.972 224.851 269.763 cv
224.851 269.763 225.108 267.153 226.52 263.816 cv
227.076 262.404 227.871 260.881 228.916 259.366 cv
230.23 257.462 231.911 255.601 234.178 254.019 cv
235.162 253.377 236.189 252.778 237.387 252.265 cv
239.184 251.452 241.237 250.81 243.59 250.468 cv
244.789 250.296 246.072 250.211 247.441 250.168 cv
248.853 250.168 li
251.505 250.211 253.901 251.793 255.057 254.189 cv
259.164 262.661 269.646 283.325 276.192 289.657 cv
276.192 289.657 272.341 268.779 277.475 264.629 cv
281.967 263.987 li
281.967 263.987 284.706 284.566 290.995 300.909 cv
298.91 321.616 290.652 342.281 290.652 342.281 cv
cp
f
266.138 287.047 mo
266.266 287.261 265.966 287.475 265.838 287.304 cv
255.698 276.779 247.783 264.287 243.59 250.468 cv
244.789 250.296 246.072 250.211 247.441 250.168 cv
251.891 263.26 257.795 275.582 266.138 287.047 cv
cp
.878431 .521569 .360784 rgb
f
257.239 292.353 mo
257.367 292.523 257.067 292.737 256.896 292.609 cv
246.329 281.614 238.243 268.522 234.178 254.019 cv
235.162 253.377 236.189 252.778 237.387 252.265 cv
242.05 266.511 248.211 279.945 257.239 292.353 cv
cp
f
248.339 298.128 mo
248.468 298.299 248.168 298.514 247.997 298.385 cv
238.414 288.417 230.884 276.736 226.52 263.816 cv
227.076 262.404 227.846 260.864 228.916 259.366 cv
233.537 273.143 239.612 286.106 248.339 298.128 cv
cp
f
275.274 292.699 mo
269.425 296.676 269.273 308.96 271.367 314.911 cv
271.652 315.721 273.03 315.8 273.017 314.771 cv
272.97 310.876 272.718 307.029 273.384 303.164 cv
273.959 299.826 275.831 296.338 275.716 292.979 cv
275.709 292.777 275.482 292.558 275.274 292.699 cv
cp
f
439.574 538.055 mo
439.892 540.344 440.466 542.594 441.3 544.731 cv
441.884 546.229 447.32 559.895 447.107 559.898 cv
453.069 559.815 459.286 556.331 464.198 553.198 cv
481.26 542.347 493.87 525.342 501.667 506.685 cv
509.465 488.028 512.707 467.737 513.711 447.542 cv
514.482 432.047 513.969 416.492 512.188 401.082 cv
511.354 393.865 511.096 386.442 509.322 379.37 cv
508.162 374.746 506.384 367.156 501.987 364.567 cv
499.514 363.111 496.454 363.192 493.596 363.458 cv
490.033 363.791 486.491 364.345 482.998 365.117 cv
477.238 366.39 486.899 395.255 487.704 400.647 cv
489.916 415.461 490.481 430.529 489.494 445.472 cv
488.533 460.028 485.301 474.505 479.648 487.967 cv
475.022 498.988 468.098 516.442 454.53 517.496 cv
450.578 517.802 446.235 517.964 443.308 520.637 cv
441.27 522.497 440.318 525.265 439.809 527.976 cv
439.19 531.268 439.108 534.704 439.574 538.055 cv
cp
.294118 .196078 .341176 rgb
f
414.327 537.433 mo
414.327 537.433 367.551 492.601 357.484 453.437 cv
357.484 453.437 412.939 370.243 471.186 371.244 cv
471.186 371.244 491.302 415.837 479.459 453.839 cv
467.617 491.84 414.327 537.433 414.327 537.433 cv
cp
.901961 .901961 .901961 rgb
f
581.129 303.305 mo
576.578 307.25 571.697 308.863 565.667 308.571 cv
560.38 308.315 556.542 306.04 551.762 304.247 cv
551.463 304.135 551.245 304.508 551.374 304.752 cv
556.373 314.192 579.474 315.892 582.916 304.345 cv
583.239 303.261 581.895 302.641 581.129 303.305 cv
cp
.878431 .521569 .360784 rgb
f
413.789 262.449 mo
406.715 271.517 li
407.806 268.71 410.217 265.649 413.789 262.449 cv
cp
.568627 .270588 .517647 rgb
f
683.273 220.872 mo
660.08 213.079 607.119 213.534 546.8 223.39 cv
486.648 233.214 436.416 249.53 416.799 264.313 cv
525.665 147.489 li
683.273 220.872 li
cp
.819608 .396078 .262745 rgb
f
597.515 370.028 mo
597.515 370.028 630.899 361.301 678.58 333.101 cv
678.58 333.101 701.074 367.34 751.581 401.226 cv
751.581 401.226 699.755 426.941 685.244 463.375 cv
685.244 463.375 570.759 384.289 597.515 370.028 cv
cp
.901961 .901961 .901961 rgb
f
890.393 559.521 mo
885.289 559.521 881.14 563.672 881.14 568.773 cv
881.14 607.3 li
881.14 612.401 885.289 616.551 890.393 616.551 cv
960.008 616.551 li
965.111 616.551 969.26 612.401 969.26 607.3 cv
969.26 568.773 li
969.26 563.672 965.111 559.521 960.008 559.521 cv
890.393 559.521 li
cp
960.008 628.464 mo
890.393 628.464 li
878.72 628.464 869.227 618.971 869.227 607.3 cv
869.227 568.773 li
869.227 557.103 878.72 547.608 890.393 547.608 cv
960.008 547.608 li
971.681 547.608 981.174 557.103 981.174 568.773 cv
981.174 607.3 li
981.174 618.971 971.681 628.464 960.008 628.464 cv
cp
.65098 .317647 .207843 rgb
f
1085.39 620.925 mo
1085.39 815.938 li
1085.39 826.66 1076.69 835.356 1065.97 835.356 cv
784.43 835.356 li
773.709 835.356 765.013 826.66 765.013 815.938 cv
765.013 620.925 li
765.013 610.204 773.709 601.507 784.43 601.507 cv
1065.97 601.507 li
1076.69 601.507 1085.39 610.204 1085.39 620.925 cv
cp
.819608 .396078 .262745 rgb
f
851.182 601.507 mo
851.182 835.356 li
829.897 835.356 li
829.897 601.507 li
851.182 601.507 li
cp
.741176 .356863 .235294 rgb
f
1021.5 601.507 mo
1021.5 835.356 li
1000.21 835.356 li
1000.21 601.507 li
1021.5 601.507 li
cp
f
790.705 604.208 mo
790.705 618.384 779.188 629.9 765.013 629.9 cv
765.013 620.925 li
765.013 610.204 773.709 601.507 784.43 601.507 cv
790.585 601.507 li
790.665 602.381 790.705 603.295 790.705 604.208 cv
cp
.941176 .654902 .564706 rgb
f
790.705 835.356 mo
784.43 835.356 li
773.709 835.356 765.013 826.66 765.013 815.938 cv
765.013 809.704 li
779.188 809.704 790.705 821.18 790.705 835.356 cv
cp
f
1085.39 620.925 mo
1085.39 629.9 li
1071.21 629.9 1059.7 618.384 1059.7 604.208 cv
1059.7 603.295 1059.74 602.381 1059.81 601.507 cv
1065.97 601.507 li
1076.69 601.507 1085.39 610.204 1085.39 620.925 cv
cp
f
1085.39 809.704 mo
1085.39 815.938 li
1085.39 826.66 1076.69 835.356 1065.97 835.356 cv
1059.7 835.356 li
1059.7 821.18 1071.21 809.704 1085.39 809.704 cv
cp
f
1038.44 763.546 mo
981.174 746.231 li
995.035 700.386 li
1052.3 717.701 li
1038.44 763.546 li
cp
.432 .716 .858 rgb
f
957.461 786.733 mo
966.427 723.983 li
1010.61 727.518 li
1006.54 792.411 li
957.461 786.733 li
cp
.901961 .901961 .901961 rgb
f
936.271 756.18 mo
936.271 745.519 944.914 736.877 955.574 736.877 cv
966.234 736.877 974.877 745.519 974.877 756.18 cv
974.877 766.84 966.234 775.482 955.574 775.482 cv
944.914 775.482 936.271 766.84 936.271 756.18 cv
cp
.94902 .494118 .658824 rgb
f
190.701 431.479 mo
185.415 428.241 177.35 426.66 169.481 427.029 cv
169.358 419.989 169.106 412.951 168.529 405.932 cv
168.287 402.99 164.381 403.087 164.024 405.932 cv
163.104 413.264 162.535 420.631 162.1 428.007 cv
157.219 429.093 152.823 431.043 149.777 433.987 cv
148.631 435.095 149.019 437.651 150.809 437.897 cv
154.41 438.391 158.001 437.938 161.603 437.438 cv
161.574 438.072 161.539 438.707 161.511 439.342 cv
161.125 448.015 159.303 457.011 163.03 465.008 cv
163.757 466.569 166.26 466.463 167.02 465.008 cv
171.095 457.197 169.609 447.998 169.598 439.342 cv
169.597 438.439 169.586 437.537 169.583 436.634 cv
176.152 436.428 182.752 437.382 189.287 436.699 cv
191.946 436.421 193.23 433.029 190.701 431.479 cv
cp
.937255 .956863 .964706 rgb
f
415.747 159.285 mo
412.537 159.05 409.254 159.506 405.98 160.046 cv
405.957 154.941 405.806 149.572 404.203 144.838 cv
403.495 142.749 400.107 142.375 399.58 144.838 cv
398.445 150.141 398.723 155.757 398.385 161.179 cv
393.139 161.69 387.449 161.344 382.49 163.015 cv
380.834 163.573 380.168 166.133 381.966 167.026 cv
386.603 169.33 392.421 169.496 397.672 169.302 cv
397.61 171.91 397.973 174.442 399.537 176.678 cv
400.254 177.702 401.576 177.95 402.531 177.063 cv
404.941 174.825 405.699 171.868 405.924 168.758 cv
409.972 168.316 414.012 167.468 417.438 165.527 cv
420.494 163.797 418.912 159.517 415.747 159.285 cv
cp
f
1094.76 445.125 mo
1089.63 443.458 1083.7 442.728 1077.74 442.776 cv
1077.6 435.413 1077.54 428 1076.12 420.771 cv
1075.61 418.18 1071.63 419.087 1071.74 421.332 cv
1070.38 428.55 1070.32 435.944 1070.17 443.285 cv
1066.39 443.746 1062.72 444.482 1059.4 445.541 cv
1057.21 446.239 1056.81 449.901 1059.4 450.386 cv
1062.69 451.003 1066.23 451.429 1069.86 451.686 cv
1069.52 458.167 1069.22 464.764 1071 470.93 cv
1071.84 473.84 1076.06 473.841 1076.91 470.93 cv
1078.67 464.843 1078.4 458.333 1078.08 451.931 cv
1083.87 451.854 1089.63 451.267 1094.76 450.025 cv
1097.31 449.409 1097.05 445.867 1094.76 445.125 cv
cp
f
2520.64 663.106 mo
2494.53 643.281 2465.05 628.388 2437.73 610.271 cv
2410.41 592.154 2384.52 569.875 2370.31 540.331 cv
2368.22 572.585 2366.14 605.045 2369.8 637.16 cv
2373.46 669.273 2383.24 701.357 2402.75 727.122 cv
2429.86 762.902 2473.32 783.227 2517.31 792.152 cv
2542.7 797.303 2566.06 801.402 2589.74 812.175 cv
2611.02 821.854 2616.65 807.87 2611.02 785.828 cv
2598.87 738.309 2558.72 692.023 2520.64 663.106 cv
cp
level3{
gsave
clp
[316.248 319.288 -319.288 316.248 2267.99 498.353 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[316.248 319.288 -319.288 316.248 2267.99 498.353 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2455.02 759.855 mo
2423.42 761.826 2389.5 760.805 2363.41 742.879 cv
2371.54 773.008 2397.88 795.381 2426.64 807.504 cv
2452.08 818.229 2480.26 822.365 2507.71 819.399 cv
2520.2 818.05 2532.52 815.264 2545.05 814.407 cv
2572.32 812.543 2599.29 819.818 2624.69 829.024 cv
2624.74 799.695 2603.39 789.668 2580.47 777.764 cv
2538.48 755.96 2501.32 756.97 2455.02 759.855 cv
cp
level3{
gsave
clp
[358.822 85.1439 -85.1439 358.822 2266.98 734.997 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[358.822 85.1439 -85.1439 358.822 2266.98 734.997 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2905.14 771.793 mo
2691.12 771.793 li
2691.12 708.098 li
2905.14 708.098 li
2905.14 771.793 li
cp
.482353 .572549 .611765 rgb
f
3198.99 228.147 mo
3198.99 691.212 li
3198.99 705.47 3187.44 717.021 3173.2 717.021 cv
2423.48 717.021 li
2409.24 717.021 2397.69 705.47 2397.69 691.212 cv
2397.69 228.147 li
2397.69 213.902 2409.24 202.351 2423.48 202.351 cv
3173.2 202.351 li
3187.44 202.351 3198.99 213.902 3198.99 228.147 cv
cp
.294118 .196078 .341176 rgb
f
2604.81 821.158 mo
2691.12 771.793 li
2905.14 771.793 li
2999.41 821.158 li
2604.81 821.158 li
cp
.929412 .929412 .929412 rgb
f
2999.41 831.668 mo
2604.81 831.668 li
2604.81 821.158 li
2999.41 821.158 li
2999.41 831.668 li
cp
.776471 .776471 .776471 rgb
f
3172.66 227.837 mo
3172.66 640.591 li
2423.59 640.591 li
2423.59 227.837 li
3172.66 227.837 li
cp
.937255 .956863 .964706 rgb
f
3198.99 666.065 mo
3198.99 691.212 li
3198.99 705.47 3187.44 717.021 3173.2 717.021 cv
2423.48 717.021 li
2409.24 717.021 2397.69 705.47 2397.69 691.212 cv
2397.69 666.065 li
3198.99 666.065 li
cp
.929412 .929412 .929412 rgb
f
3005.52 317.303 mo
3005.52 640.591 li
2454.18 640.591 li
2454.18 317.303 li
3005.52 317.303 li
cp
level3{
gsave
clp
[62.2868 617.21 -617.21 62.2868 2691.73 101.228 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[62.2868 617.21 -617.21 62.2868 2691.73 101.228 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2551.3 286.006 mo
2454.17 286.006 li
2454.17 259.675 li
2551.3 259.675 li
2551.3 286.006 li
cp
.537255 .643137 .690196 rgb
f
3152.97 397.914 mo
3025.27 397.914 li
3025.27 317.311 li
3152.97 317.311 li
3152.97 397.914 li
cp
f
3152.97 499.987 mo
3025.27 499.987 li
3025.27 419.384 li
3152.97 419.384 li
3152.97 499.987 li
cp
f
3152.97 602.061 mo
3025.27 602.061 li
3025.27 521.458 li
3152.97 521.458 li
3152.97 602.061 li
cp
f
3073.27 342.71 mo
3073.27 372.362 li
3110.13 357.441 li
3073.27 342.71 li
cp
.854902 .854902 .854902 rgb
f
3073.27 444.86 mo
3073.27 474.511 li
3110.13 459.591 li
3073.27 444.86 li
cp
f
3073.27 547.01 mo
3073.27 576.661 li
3110.13 561.74 li
3073.27 547.01 li
cp
f
3025.25 364.272 mo
3025.25 364.272 3039.16 394.107 3059.75 390.056 cv
3059.75 390.056 3067.75 375.564 3081.46 363.963 cv
3095.11 352.387 3125.05 329.907 3129.63 317.623 cv
3129.63 317.623 3130.58 314.712 3130.63 310.482 cv
3130.7 308.711 3130.57 306.71 3130.16 304.601 cv
3129.65 301.948 3128.72 299.17 3127.04 296.414 cv
3126.29 295.266 3125.47 294.144 3124.43 293.033 cv
3122.89 291.32 3121 289.67 3118.65 288.201 cv
3117.45 287.456 3116.11 286.762 3114.67 286.073 cv
3113.16 285.411 li
3110.3 284.212 3107 284.78 3104.64 286.799 cv
3096.27 293.928 3075.37 311.102 3065.4 314.799 cv
3065.4 314.799 3079.32 294.285 3075.77 287.439 cv
3071.27 284.645 li
3071.27 284.645 3058.69 305.361 3044.3 319.882 cv
3026.12 338.306 3025.25 364.272 3025.25 364.272 cv
cp
.611765 .262745 .270588 rgb
f
3077.38 316.727 mo
3077.14 316.896 3077.36 317.265 3077.58 317.142 cv
3093.35 310.648 3107.68 301.006 3118.65 288.201 cv
3117.45 287.456 3116.11 286.762 3114.67 286.073 cv
3103.77 297.982 3091.67 308.384 3077.38 316.727 cv
cp
.458824 .196078 .2 rgb
f
3084.4 326.575 mo
3084.18 326.697 3084.4 327.067 3084.65 327.01 cv
3101.1 320.214 3115.89 310.012 3127.04 296.414 cv
3126.29 295.266 3125.47 294.144 3124.43 293.033 cv
3112.76 306.076 3099.87 317.546 3084.4 326.575 cv
cp
f
3091.2 336.926 mo
3090.99 337.048 3091.21 337.417 3091.45 337.36 cv
3106.37 331.201 3119.9 322.247 3130.63 310.482 cv
3130.7 308.711 3130.6 306.704 3130.16 304.601 cv
3118.75 317.161 3106.17 328.168 3091.2 336.926 cv
cp
f
3064.96 318.481 mo
3069.34 325.478 3063.74 338.682 3058.71 344.061 cv
3058.02 344.794 3056.51 344.233 3057.01 343.138 cv
3058.89 338.996 3060.96 335.001 3062.07 330.557 cv
3063.02 326.718 3062.65 322.111 3064.35 318.574 cv
3064.45 318.361 3064.8 318.233 3064.96 318.481 cv
cp
f
2840.27 533.954 mo
2834.83 574.484 2827.18 614.216 2821.66 640.591 cv
2594.33 640.591 li
2588.66 608.956 2575.25 531.479 2573.81 524.981 cv
2566.72 492.985 2540.89 449.903 2560.92 418.886 cv
2568.68 406.82 2580.31 397.822 2591.68 389.056 cv
2596.63 385.266 2601.6 381.424 2607.17 378.64 cv
2615.97 374.23 2630.4 377.737 2640.2 378.175 cv
2653.09 378.742 2644.82 362.01 2644.53 352.753 cv
2644.33 345.87 2644.02 337.645 2643.55 329.266 cv
2643.32 325.244 2643.04 321.221 2642.73 317.303 cv
2642.57 315.395 2642.39 313.487 2642.21 311.656 cv
2641.77 307.093 2641.26 302.813 2640.67 298.997 cv
2640.46 297.708 2640.25 296.47 2640.02 295.31 cv
2640.02 295.31 2641.37 296.463 2643.89 298.275 cv
2644.35 298.609 2644.69 298.868 2645.07 299.125 cv
2653.09 304.643 2670.19 314.57 2692.93 317.303 cv
2700.25 318.179 2708.19 318.333 2716.59 317.303 cv
2719.28 316.993 2721.98 316.555 2724.77 315.988 cv
2729.62 367.914 li
2729.62 367.914 2729.74 367.914 2729.98 367.914 cv
2731.96 367.914 2741.89 367.965 2754.88 368.61 cv
2759.03 368.842 2768.8 369.538 2769.17 369.564 cv
2774.55 369.977 2780.12 370.518 2785.64 371.188 cv
2802.97 373.328 2819.91 376.86 2828.93 382.713 cv
2852.08 397.589 2849.25 466.894 2840.27 533.954 cv
cp
.611765 .262745 .270588 rgb
f
3074.02 371.085 mo
3070.75 371.467 3067.68 371.678 3064.82 371.704 cv
3038.59 372.142 3025.91 359.999 3025.91 359.999 cv
3025.78 360.23 3025.65 360.488 3025.55 360.721 cv
3005.95 398.621 2949.8 494.584 2949.8 494.584 cv
2920 459.004 li
2920 459.004 2851.72 384.002 2825.89 375.03 cv
2816.35 371.704 2800.75 369.874 2784.87 368.894 cv
2779.17 368.533 2773.42 368.275 2767.9 368.094 cv
2763.44 367.965 2759.16 367.86 2755.14 367.811 cv
2741.99 367.649 2731.96 367.862 2729.98 367.914 cv
2729.74 367.914 2729.62 367.914 2729.62 367.914 cv
2728.09 352.29 li
2699.76 355.255 2690.35 369.125 2690.35 369.125 cv
2682.12 359.844 2652.55 354.094 2644.53 352.753 cv
2644.84 362.86 2644.92 369.951 2644.92 369.951 cv
2642.65 369.977 2624.8 369.729 2602.61 372.89 cv
2600.67 373.166 2596.48 373.813 2596.17 373.862 cv
2549.93 381.366 2513.15 416.759 2503.27 462.557 cv
2464.85 640.591 li
2552.57 640.591 li
2577.5 544.241 li
2577.5 544.68 li
2577.6 549.243 2578.37 587.917 2578.09 640.591 cv
2842.26 640.591 li
2839.89 566.363 2842.75 541.354 2842.75 541.354 cv
2842.75 541.354 2864.56 560.923 2880.11 574.794 cv
2884.23 578.971 2888.33 582.529 2892.38 585.7 cv
2892.85 586.112 2893.31 586.525 2893.67 586.834 cv
2893.77 586.938 2893.9 586.938 2894.01 586.989 cv
2931.21 615.221 2963.15 604.753 2963.15 604.753 cv
2963.15 604.753 3002.16 606.171 3034.01 519.748 cv
3047.54 482.956 3057.67 449.877 3064.82 424.275 cv
3074.05 391.144 3078.22 370.492 3078.22 370.492 cv
3076.8 370.724 3075.36 370.929 3074.02 371.085 cv
cp
1 1 1 rgb
f
2847.8 640.591 mo
2574.12 640.591 li
2577.52 544.165 li
2599.46 459.107 2597.76 389.056 2597.2 375.674 cv
2597.14 374.746 2597.07 373.354 2597.07 373.354 cv
2632.24 370.491 li
2717.61 564.539 li
2755.04 367.841 li
2755.4 367.765 2755.66 367.682 2755.89 367.63 cv
2759.86 366.754 2763.93 366.444 2767.67 366.47 cv
2769.5 366.47 2771.23 366.547 2772.85 366.702 cv
2779.79 367.244 2784.79 368.662 2784.79 368.662 cv
2842.75 541.354 li
2847.8 640.591 li
cp
.721569 .764706 .890196 rgb
f
2632.24 370.491 mo
2717.61 564.539 li
2640.77 490.044 li
2657.76 464.836 li
2629.83 461.363 li
2629.83 461.363 2624.85 390.263 2623.94 371.167 cv
2632.24 370.491 li
cp
.52549 .584314 .760784 rgb
f
2757.01 459.1 mo
2774.97 481.214 li
2717.61 564.539 li
2755.04 367.841 li
2761.23 366.332 2762.44 365.809 2767.65 366.262 cv
2780.63 456.382 li
2757.01 459.1 li
cp
f
2723.56 640.591 mo
2718.5 640.591 li
2717.47 619.63 2716.18 598.694 2716 577.707 cv
2715.98 576.161 2718.55 575.748 2718.79 577.346 cv
2721.7 598.153 2722.91 619.372 2723.56 640.591 cv
cp
f
2726.83 338.625 mo
2654.72 359.733 2641.26 302.813 2640.67 298.997 cv
2640.46 297.708 2640.25 296.47 2640.02 295.31 cv
2640.02 295.31 2641.37 296.463 2643.89 298.275 cv
2644.35 298.609 2644.69 298.868 2645.07 299.125 cv
2653.09 304.643 2670.19 314.57 2692.93 317.303 cv
2700.25 318.179 2708.19 318.333 2716.59 317.303 cv
2719.28 316.993 2721.98 316.555 2724.77 315.988 cv
2726.83 338.625 li
cp
.458824 .196078 .2 rgb
f
2749.12 258.846 mo
2749.12 258.846 2756.7 185.144 2737.73 175.372 cv
2692.66 152.149 2601.66 186.835 2613.18 236.114 cv
2624.69 285.392 2628.84 271.576 2628.84 271.576 cv
2628.84 271.576 2745.44 265.178 2749.12 258.846 cv
cp
.478431 .203922 .211765 rgb
f
2742.14 209.33 mo
2749.65 217.134 2750.27 234.642 2750.89 254.003 cv
2752.79 312.608 2735.24 330.915 2705.3 334.138 cv
2675.36 337.362 2644.05 325.849 2637.6 271.504 cv
2634.38 244.332 2630.94 219.227 2640.82 207.488 cv
2655.56 189.987 2719.12 185.381 2742.14 209.33 cv
cp
.611765 .262745 .270588 rgb
f
2641.76 263.661 mo
2641.76 263.661 2632.6 239.386 2618.15 252.252 cv
2603.69 265.118 2623.67 301.782 2645.78 299.064 cv
2645.78 299.064 2648.81 271.965 2641.76 263.661 cv
cp
f
2624.9 263.293 mo
2628.1 263.849 2631.37 266.867 2633.68 269.03 cv
2636.1 271.29 2638.93 274.104 2640.14 277.239 cv
2640.51 278.221 2639.15 278.824 2638.48 278.204 cv
2636.61 276.461 2635.1 274.375 2633.36 272.491 cv
2632.11 273.837 2630.84 275.202 2629.11 275.84 cv
2627.78 276.33 2626.8 274.676 2627.38 273.584 cv
2628.13 272.178 2629.52 271.164 2630.88 270.232 cv
2628.58 268.464 2625.81 267.072 2623.9 265.003 cv
2623.18 264.214 2623.91 263.121 2624.9 263.293 cv
cp
.458824 .196078 .2 rgb
f
2725.17 252.61 mo
2725.17 252.61 2730.23 254.496 2729.47 245.524 cv
2728.78 237.459 2725.17 238.547 2725.17 238.547 cv
2725.17 238.547 2721.65 238.523 2722.18 245.579 cv
2722.71 252.634 2725.17 252.61 2725.17 252.61 cv
cp
.294118 .196078 .341176 rgb
f
2673.82 252.61 mo
2673.82 252.61 2678.88 254.496 2678.11 245.524 cv
2677.42 237.459 2673.82 238.547 2673.82 238.547 cv
2673.82 238.547 2670.3 238.523 2670.83 245.579 cv
2671.36 252.634 2673.82 252.61 2673.82 252.61 cv
cp
f
2702.15 276.504 mo
2704.72 276.12 2710.6 277.654 2711.81 274.881 cv
2712.82 272.571 2708.69 258.949 2708.1 256.613 cv
2706 248.191 2703.78 242.49 2702.2 232.387 cv
2702.13 231.946 2702.89 231.695 2703.09 232.145 cv
2709.04 245.563 2711.25 262.162 2714.85 276.413 cv
2715.04 277.194 2714.47 278.023 2713.63 278.01 cv
2709.87 277.95 2706.21 278.745 2702.46 278.766 cv
2701.2 278.773 2700.83 276.701 2702.15 276.504 cv
cp
.458824 .196078 .2 rgb
f
2717.61 289.22 mo
2717.61 289.22 2700.1 295.12 2685.04 289.399 cv
2685.04 289.399 2691.84 300.365 2703.48 301.407 cv
2715.13 302.449 2717.61 289.22 2717.61 289.22 cv
cp
1 1 1 rgb
f
2714.74 236.268 mo
2721.21 225.568 2742.38 228.275 2744.67 240.058 cv
2745.19 242.765 2745.14 245.871 2744.62 248.927 cv
2744.59 249.106 2744.57 249.313 2744.49 249.52 cv
2744.31 250.5 2744.05 251.477 2743.72 252.407 cv
2742.83 254.929 2741.52 257.196 2739.7 258.957 cv
2736.88 261.679 2732.99 263.133 2727.79 262.205 cv
2715.67 260.065 2709.04 245.756 2714.74 236.268 cv
cp
2675.65 266.846 mo
2663.56 264.706 2656.91 250.371 2662.63 240.882 cv
2669.08 230.183 2690.27 232.89 2692.54 244.673 cv
2694.42 254.367 2689.76 269.321 2675.65 266.846 cv
cp
2750.99 242.043 mo
2750.91 240.676 2750.71 239.387 2750.34 238.149 cv
2750.29 237.918 2750.24 237.763 2750.16 237.557 cv
2749.91 236.603 2749.54 235.778 2749.13 234.979 cv
2744.18 225.259 2730.29 221.494 2718.14 226.548 cv
2710.77 229.59 2707.28 235.906 2706.9 242.61 cv
2706.85 243.538 2706.85 244.389 2706.9 245.292 cv
2706.28 245.266 2705.66 245.283 2705.02 245.292 cv
2703.01 245.317 2700.74 245.446 2698.8 246.039 cv
2697.57 231.729 2680.55 225.129 2666.01 231.163 cv
2652.71 236.68 2652.11 252.769 2659.31 262.747 cv
2661.01 265.247 2663.33 267.464 2666.17 269.115 cv
2667.94 270.223 2669.93 271.074 2672.09 271.641 cv
2681.43 274.143 2688.13 271.796 2692.51 267.104 cv
2696.07 263.288 2698.08 257.925 2698.7 252.304 cv
2699.68 251.892 2700.58 251.428 2701.74 251.325 cv
2702.65 251.248 2703.58 251.248 2704.5 251.273 cv
2705.22 251.273 2705.97 251.284 2706.69 251.299 cv
2707.31 251.312 2707.65 251.222 2707.98 251.093 cv
2708.58 253 2709.37 254.886 2710.43 256.61 cv
2710.77 257.152 2711.08 257.667 2711.44 258.131 cv
2713.22 260.735 2715.64 263.03 2718.63 264.706 cv
2720.33 265.711 2722.22 266.485 2724.23 267.026 cv
2727.5 267.903 2730.47 268.187 2733.1 267.955 cv
2735.18 267.8 2737.06 267.32 2738.77 266.588 cv
2740.8 265.718 2742.51 264.551 2743.98 263.107 cv
2744.49 262.618 2744.98 262.076 2745.45 261.509 cv
2745.55 261.406 2745.65 261.277 2745.76 261.148 cv
2745.81 261.096 2745.86 261.044 2745.88 260.993 cv
2748 258.208 2749.48 254.865 2750.24 251.248 cv
2750.3 250.99 2750.35 250.758 2750.4 250.551 cv
2750.54 249.936 2750.63 249.366 2750.71 248.798 cv
2750.84 247.716 2750.95 246.736 2750.99 245.756 cv
2751.02 245.06 2751.03 244.416 2751.01 243.771 cv
2751 243.178 2751.01 242.636 2750.99 242.043 cv
cp
.952941 .243137 .498039 rgb
f
2947.97 202.981 mo
2947.97 163.817 2979.72 132.068 3018.88 132.068 cv
3058.04 132.068 3089.79 163.817 3089.79 202.981 cv
3089.79 242.146 3058.04 273.895 3018.88 273.895 cv
2979.72 273.895 2947.97 242.146 2947.97 202.981 cv
cp
.416 .708 .854 rgb
f
3102.48 126.08 mo
3098.32 120.158 3091.77 118.361 3084.84 119.12 cv
3076.38 120.047 3070.36 122.94 3063.83 128.304 cv
3062.78 129.163 3061.65 130.321 3061.91 131.648 cv
3061.96 131.9 3062.07 132.152 3062.28 132.302 cv
3062.5 132.462 3062.79 132.482 3063.06 132.486 cv
3065.05 132.508 3066.99 131.916 3068.89 131.33 cv
3073.97 129.767 3080.7 126.052 3086.08 126.905 cv
3104.19 129.776 3094.62 146.121 3090.46 153.139 cv
3085 162.356 3077.76 170.143 3070.04 177.49 cv
3055.49 191.337 3039.54 203.988 3023.86 216.518 cv
3007.78 229.363 2991.14 241.67 2973.25 251.908 cv
2963.99 257.212 2954.21 262.684 2944.12 266.24 cv
2921.57 274.186 2933.41 247.18 2938.3 237.642 cv
2939.11 236.049 2937.2 234.614 2935.87 235.767 cv
2922.09 247.642 2911.19 284.463 2941.64 278.014 cv
2973.07 271.358 3003.3 246.835 3027.8 227.322 cv
3053.3 207 3084.19 185.313 3099.73 155.827 cv
3104.4 146.977 3108.92 135.249 3102.48 126.08 cv
cp
.145098 .427451 .568627 rgb
f
2381.89 473.305 mo
2376.97 471.635 2370.96 470.64 2364.87 470.445 cv
2364.74 465.463 2364.91 460.283 2362.67 455.76 cv
2361.99 454.402 2360.43 454.803 2359.8 455.816 cv
2357.63 460.415 2357.92 465.545 2357.7 470.576 cv
2352.67 471.003 2347.85 472.086 2343.84 473.96 cv
2342.22 474.718 2342.87 477.009 2344.31 477.497 cv
2348.34 478.864 2352.73 479.06 2357.08 479.082 cv
2356.87 482.33 2356.81 485.574 2357.43 488.724 cv
2358.13 492.263 2363.32 491.889 2364.23 488.724 cv
2365.11 485.649 2365.27 482.374 2365.21 479.088 cv
2370.81 479.073 2376.47 478.631 2381.89 477.204 cv
2383.91 476.672 2383.71 473.923 2381.89 473.305 cv
cp
.937255 .956863 .964706 rgb
f
2917.9 163.778 mo
2908.5 160.649 2898.99 159.293 2889.38 159.456 cv
2889.21 155.55 2889.17 150.556 2885.97 148.615 cv
2885.66 148.426 2885.32 148.524 2885.06 148.732 cv
2882.28 150.943 2882.54 155.752 2882.87 159.81 cv
2879.93 160.07 2876.98 160.429 2874.02 160.963 cv
2871.36 161.441 2872.2 165.292 2874.63 165.444 cv
2877.45 165.62 2880.27 165.787 2883.09 165.951 cv
2882.96 170.144 2882.69 174.695 2886.18 177.293 cv
2886.85 177.796 2887.89 177.523 2888.45 177 cv
2891.17 174.47 2890.85 170.271 2890.24 166.342 cv
2899.3 166.821 2908.36 167.206 2917.42 167.352 cv
2919.53 167.386 2919.8 164.411 2917.9 163.778 cv
cp
f
3197.84 740.281 mo
3197.84 784.111 3169.97 821.417 3131.01 835.455 cv
3062.45 835.455 li
3023.49 821.417 2995.62 784.111 2995.62 740.281 cv
2995.62 684.424 3040.87 639.167 3096.73 639.167 cv
3152.59 639.167 3197.84 684.424 3197.84 740.281 cv
cp
.721569 .764706 .890196 rgb
f
3128.71 687.491 mo
3066.25 687.491 li
3066.25 541.752 li
3128.71 541.752 li
3128.71 687.491 li
cp
f
3066.25 541.752 mo
3066.25 535.182 3080.23 529.855 3097.48 529.855 cv
3114.72 529.855 3128.71 535.182 3128.71 541.752 cv
3128.71 548.323 3114.72 553.649 3097.48 553.649 cv
3080.23 553.649 3066.25 548.323 3066.25 541.752 cv
cp
.866667 .901961 1 rgb
f
3186.2 740.282 mo
3186.2 789.617 3146.06 829.747 3096.73 829.747 cv
3047.4 829.747 3007.27 789.617 3007.27 740.282 cv
3186.2 740.282 li
cp
1 .678431 .796078 rgb
f
3007.27 740.282 mo
3007.27 733.709 3047.33 728.383 3096.73 728.383 cv
3146.14 728.383 3186.2 733.709 3186.2 740.282 cv
3186.2 746.854 3146.14 752.185 3096.73 752.185 cv
3047.33 752.185 3007.27 746.854 3007.27 740.282 cv
cp
.94902 .494118 .658824 rgb
f
3061.04 782.295 mo
3061.04 778.394 3064.21 775.231 3068.11 775.231 cv
3072.01 775.231 3075.17 778.394 3075.17 782.295 cv
3075.17 786.197 3072.01 789.359 3068.11 789.359 cv
3064.21 789.359 3061.04 786.197 3061.04 782.295 cv
cp
f
3096.73 799.861 mo
3096.73 794.984 3100.68 791.03 3105.56 791.03 cv
3110.44 791.03 3114.39 794.984 3114.39 799.861 cv
3114.39 804.738 3110.44 808.692 3105.56 808.692 cv
3100.68 808.692 3096.73 804.738 3096.73 799.861 cv
cp
f
3099.71 768.167 mo
3099.71 766.525 3101.04 765.193 3102.68 765.193 cv
3104.33 765.193 3105.66 766.525 3105.66 768.167 cv
3105.66 769.81 3104.33 771.142 3102.68 771.142 cv
3101.04 771.142 3099.71 769.81 3099.71 768.167 cv
cp
f
3080.38 692.324 mo
3080.38 689.654 3082.54 687.491 3085.21 687.491 cv
3087.88 687.491 3090.04 689.654 3090.04 692.324 cv
3090.04 694.993 3087.88 697.157 3085.21 697.157 cv
3082.54 697.157 3080.38 694.993 3080.38 692.324 cv
cp
.866667 .901961 1 rgb
f
3098.59 659.979 mo
3098.59 656.078 3101.75 652.915 3105.66 652.915 cv
3109.56 652.915 3112.72 656.078 3112.72 659.979 cv
3112.72 663.88 3109.56 667.043 3105.66 667.043 cv
3101.75 667.043 3098.59 663.88 3098.59 659.979 cv
cp
f
3085.21 616.852 mo
3085.21 614.183 3087.37 612.019 3090.04 612.019 cv
3092.71 612.019 3094.88 614.183 3094.88 616.852 cv
3094.88 619.521 3092.71 621.686 3090.04 621.686 cv
3087.37 621.686 3085.21 619.521 3085.21 616.852 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (Admin) ()
%%Title: (1910.m10.i014.n001.eps)
%%CreationDate: 10/27/2019 10:01 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3XY'fC8Z_Y&""=L]p1UHGN'P'GUdu%1jWp#ZAs4&'o0Df@lo$"Gq2l1OtZt`dq[fZ?k1c4)8UdZeHnmNCqFm1[GE&XN84b
%L/C&a_f-Yo<.=jaD='m/eCkue=c*q"Y`)ohSm2gqr/%NgB!GRl)P(]f/8FQqgbd5U47%h(V)CH6C'F%(Sib1NbWe3E6S6l^9f+H7
%Ui\ssRB='SnV@lR/oiV@nPpN35mR1U>aJdFFh![b3ZXS)oSqdEQ\R<mODpI_BLWT%$"*UsHRq[6%a!TFrXE6O6%EA%58!mY&P-:0
%L(QCuU%pk\q=l$a[>Ni/[+(+R2P/"'BNhd?SC<q,FTWs.p+Z"+_bEon/#usNA)ZDb6G_8K^ghM:hS^p]dL%<f)Df&mqnEtnE2!:<
%1&12Km,L&&c?_G\DiKt*-?'CE!YB&V&);gKo:ajA,<qSAE[J!?RtfYELfj/J5_O`sr]g7chZ3FEJ/OrV38"rX3KB8)O$jA?!!mS/
%,5+9W&u>KQ[6MO",>Bb(Xe)1R>Fh;`2[BQ,8N\nrA<@LN2_Vdtf",V[*MB%TSRQU"e1>;<$pO#'AZ/"?D!7%s4c$c)Wb<DL!7U-U
%6c'n4mb^+lehcSu)N$E$)s"Z22=fleR;RglGadW;?L]]XkQT""&kE]As1iFgaeLOVT7rHp@9>U,qdX#hfNitL$+Z?*Ys30k'tk3F
%(#BU%H8Lgl%U46nW";3qg%n'4!b!/LVtC#TboGrol"H&?.Lc1e5III+9qCEck[^G&2s\PN2ZAYdn2EVi%("Bo48_D45o8?h%i99F
%jiiA^H368.rO4TKT)=a/\o@8FATjR-7bR_<2h/2F(,X@F<pZ2*@!'M3??h)E!KWkO]dM]8MpM_,*l(UPh@.Wl&FaLM*pYGc,sV;,
%GL@OS(X1@4"7'^-nO#+VVQF>9c:O("6Z&bR&%OFY0VeYu4"ATkfHgT6SQeU4K!7(_/>O'`1Y2RR!4H*,L<A_>%pb94C9-r]fr?45
%%&6HhUtMKL5IFWWk%\(t=<6k:GP.U#g?s&E=tZ)R3lHK9C(\BL2[oH^7`!HfW8rgf^#01PXP0Y*a3km&p4/O]cQT'FH.Fi#4m)aD
%(JI27f*D9-Y@IZB]kD)i^Y0^QOZ^T_^o>a[RoR/cM7'q^W[D_R`h<&4pBNL`h]oV7V*hP1ZrZ5"@F=8uW',\$!PnhAD&.B'6*!R%
%_9HO0-!)@VR5DqIXhd!1bDS4bdHI($V9q5J$)j0UW:ad&f9c,t84p1`K-?Xl/3ej1rLngOb34Nsg5`fqlOC'VSm5@cBL@J1lV.ek
%4h7THe;2EE+`kORKbs6]G4-:UrVdc%M)FYVort9YFE#N6O8l6-;![$t/%nRsNe*3;?A@A<@b]?"^HMMog[=OF`E;mh0fkb\-DQE2
%*'Q+Pi'26]Jr^0Z+j.WVNAC!sPna$>Q%TcO@S0V)rfP;-65E#VI>!G!T)A?9LU2D2KnURNli6im`agW_oYN&96H^f<+iiXl$kHd?
%/BGKJb)B"e8LYh%!!QMg,QU*A`(ID(&sHcEOHN!tj?uIji(HVV-Ou?("[V&M:1+3n:[q"?c:</J(ZE:'/=5?/>T>q):>u6Z69Bor
%_']7/"QHX@/&6pOTgtD\P"`/GA,7SQo0;oh_+1473_IHV31Z^@%*\ch)33YnT$3QKPEr^-+83l"%"KML[/U*%&,k/dHL1Uf+u@$@
%0L$U\/HX+,8HItoUc=/r;G,%f#R)`"+<CT?M'U7e0MrCOQlH>39$/T:#'"*<W),lN,0D=^$A`p86p1Pp%tYn"5m^Xi#9MA]!9K;-
%;&#`Y0i4GEI$2lV%&aPK`Psn4n1ar-@LRRA8N:+-`i2oe$(h?Jip_f@#P=,A(J&[@Je,q<8q7FJ4s5J+E@D)UFGe)X8c0q:T6N-j
%qesRnq7m]-0\n"IQ'B>pUcp6CLF4/R4tQN&SC72K8L-hs$1"3CIX_;K&]5-I1%/7lM7&'^c%7A6ZiDY=M*T%R)\aZS@>QrMN!N)[
%Z@gs5@PDdK_5(2%AO&g0@:Ve<%N.)bb!Q,E*#'jDVEd=J9Ue!_KM;Xi&-W]d61pCGMPia0=W[STGR7>J!<nJQ#s]pC8rNPdJHCb&
%m6G/h:CP_kPrgGCT^"3RW'&iN78SI;N'LWA&fG/8e-on8!M@lO]_qaJLdPNU/8;A""WI'p"Jm@uO:deGbt0Yllp:FIGsE6U7goP'
%FQEg7`?&;:7@d-,.%tEs5Z`tB(?l2+!EBGKa(WYKnIe?j4&04E:g!'](hju!W!lY%$)Nd04IAc.CG;:pXlD<CF+hj6T1io=,G2K5
%5`mBm-i+0rb7jL&Vgd.D=O>Zn`pu9P[<+=`do]7U/O!:,5eWG>hSML*@n$uO/O?`p9(Yb#R`,r"@YcW_M&+'dm`7Pn&W!lgT$Tki
%:bQ:NjNr6?"u-]U]_DVr!!4O8":]+9"LX*,A)KonR&C]8JLj&Mn/Q87M:8-Y8Pl@1/-^P=$k!?*"G@@r@!odk&8,g#a68CHY_Y))
%8'DW:bk<$]jb3MK==03`GE%pSZlC@>.KNL92i3Pm-Ebd;Q66Bt_ZZ<o,/tf-*/G3YM&i>fPea#NkX#Tb\5[4]JpiWYdqLk"WmbWr
%;0=WgjWR?.*!pW]!KN_JnfYI$Hbk\1;0u\<6CIpDOetB>YQM3[b4\/`'VQr'1J[-O-1mFWoL*Fd^aJc;4fU8)6OP%U9aMHU@e#1]
%^hU^cBkWQ7i%#<o_L`pWZ&BeL&<&9K]SH.c["k>hlj$0D0A$`d$g\($n,hj0QPHQ%oN;2/X&pF_,P6>A[;f*;As.[="9lkU<R`F'
%TG9":nN=j2&h-!749`WY*^ukALobFaq56C6pc*%qTYN=-L+&'e7&X3s(eaU5A]O<s5<40^HGH>2n[%Ne>t=*>6Iug\NprAs_XHE(
%-E`.YZun0KI@/HB%PE*F&&*D-nE]d)F(U^pni`Z_EH+TfrAEWdNlV04h.XUKOP8s+oKp$^[0*!P!0"?il8VJBWZ.e#efYO*B0-S%
%DK$9hFT0./(#8GNA9Go#9H<P<k?rs4A[KDee`c^qPR0*UR;N?c\lo.CEuKVdRM2"7oLm\I<n/!u2L9\k!EKI_04a:SfgneHUE,+S
%(E8(C*2)fQr(qnDg&Vgd9s7MX%P[,L/iGb?@$0:H2EeQ%B/<jNS(KE9*PGCAL8^(QD$#K^,Fk.<&a4KpR[oF<UK]r9G17UoOKnu7
%$`?b/<LAbH95A_\-b@q8S0p@'6YdCDfgo8JAth-GHp6\aU4q:!'\'RWC2*-B^tae:++ncNCo1XVI"oK(Qq5EH@[_0!TCZKB<Ch%%
%1ERjX&OO`8eo4c<()gd`,Pt7Vi%bG+(IC-ggF?rnf&dGi/98\&\a'W+4`?PWF9h+%Me57qPM$W%:2"4bNgn0C<%>r#WLTI#\Z+@K
%7E8-ab[jT3**>HbQ()\A=)P!&;<,mMgYXBHF&58IF#c1GF)s?#QZI5YJ"5W=Zlba!X/[K;O)M:>'k4pD[c7dQ7F-2Qn!3?$6Kc+G
%ml3iEg7;,.qk93$QQ9WuG49eI\6sEVg%JuN$`l=<e?Q_`'QC!ogML55`2<-@Z/]F$b#<??T1X0H:ektKigrb`oM9)0gt"NYLs[uX
%]JBr(/@p:*=L=;rmU.?Ph//G-U6[=0L6Hr-./:FXbePV8T._dZ"'#8u:=$sMU4L(LiFp'P$TU?&i4M-Gi*:U_^YkT)+Ci4"Y+`:e
%Il>Q+eo8KsO%nbkTQC%jAu"0Z^P(LKac[tjO:];oZYB'@"/>]Va1P_tKZ0Ze-Q$L?E*f0(B8hs1ogU=hX9c*(l_]g1WG8<n?^EP3
%q-q5*Xphf@cG,+]ZK+,T>NJsD$fJfPe>C2GG"*V$&r>&S>;-;%A^(Mo[0=U%F+OKQ59-3W`O)An#S-e1E)9bbVcq\5:=bYrat"BV
%LE*2dNSL8?"lOm.r1a#<Y8"()KqYDJX.ga`QSR97DE,?X5CViJgg*,3',t<5b7lm0,M(;M^E'CH/H/*c@;YfjKoYlN\GMZm<HK(%
%+&edI,op>gnBJ6V#Gp#u94NFe%]2\Vbegt<L2q7?".j#PFV6_,!TtKrR]U0:hb<"E'eNf3nh&,=GBuI=3uBUuchb/kb;EU5j[nYt
%lm45C=JJt:CZXcZ^.#M35P\HZGq/S%mt1Mh&&p]`ik':C`YY.)aJCV%:5lu_>I&2CCqg'$qqn%5?W[J8(<<cB#8B.,`StgpRC9NB
%mQ@%(68IG27g]`&ELk:IEFe%7qF_(ZAFZ\RBP9k11W\liSLg7YBJM7=U(3L9^5h*k-?Jl=$,,.Oe=q]$%mF!_bNX$e'Jl&q_Ds=\
%Mf.M=.Wji]a2;p#c@Zq8HTlgg7_[/;R!a%>QM(@B-AFb\#gR_L39rHnT8DW<gG^L@.5'_u*tE$Gb@A#P.*SF?D'p>!fil.Dg/`*Z
%FXK9C#hZe7.84e=p*Cb-Vn#o+F7[*UcmWQB8#k*lRhmQSnV?t-"*D>CFju^EULum<$`0.YZA7*mWMPd7d=4-4p4f73_TIEg[A2:p
%r/;aQ)o#8FGp-=6\7`:P)ht]daN".>1%^3t3d<udW#EWRe&b(+)sFqrC7#GXRT1n^lePA1,)s[8%<ucNa['6H3lq`R3G0+B6a&Qq
%qpqs>_)F?@/L5guSL?pN-d#mE1/8[l/EI7`-d%,=`<,BoEH41mdVVE%I]':rNi^$jS$HtC($4=uBAgXAd'C0Q-/XX?L_Yi_(WA[n
%]Hhi$MVi,$b.$jm:,q8$7</'rr#=MT47#BbI]'k-Nf:lM>Ia.8(PVYqlpYog;p,eN]6dC=KVT!\(T$ntp7aNEQpnL=:,oO1>5pB[
%BpNa7N?_bY5p5@4bN1oMcd<4UQP7Pd4N6kFig7r"Shp.Bk8-V:0*u[9c-&nc&1s[WqNbdmr5-p?(\Np8DgoifCY-:0f0n5n\TVfr
%m$\#:FmYW5f?u=o(0kjs[GUm#'#M%k$Z4GLB[*r"?a+9_Yi],s-*V-%XQE\D7ommK,4mXGp$G0mM$"CgYNs>([/fEjdFZo>En/53
%$!]?.eS%?_rYodU&nm?a?rNRQf1SX2ibYjj_?rtE<rZ)SZA/5-b8d+!>VoSqS/`@)SpKt2mW3>C4`R\V@0'+dd2OC6X>d#kkB2G\
%9hk"#*%@$[G$_,lZKfV_RS-;SRoAEbfhQU&2t9"sfuU\$\]k(1(WOAZYdB/ti%OJKs*!<^r-nrhG^dn)#kQ5)^2i5VU4l):6>AKP
%*Nb?.c+Pr\pV5>'(S*;D^UT8Q3L3kbrn7(G)R-:n@R[W[1trRpT6D<giI5LbRR9HH,TGV#I3pPB'lZtRX%fW@fbo?+9B%97hMsUp
%h:8#<;-RuZVJZ2J_1A't%Sh+Ug03SD%fH6D:g87D>1Yf1>l<%H`p\$/in&SWJ'LV<j$L[#7<MaXl9=IAjf\Wplb@VU(2*Si%L3Ls
%ROl):^[Cs%]Dh-!s,Nf8Y5^-)qQKcSO6'OE-#j[&!42<X_\gR&o6&Z4h)/P`c.?7m?')(68M?FBD(TW`+L#`Cd?kFrk2q+4=L`7L
%%+0CHkn3/)i:Fh/EI$:f=sMDc_Wif!0[)anULr_TC'O`*76E3Q!I!K4k(R2=0><QeqY:NnMp7W-?QjLJ$gUj7g^9HR+WEkpOiMUf
%A>WQXF3A+o4S%=-Zo"ni"#6(L"3*a4QodNSe'L-;/ZlBi[a`=HF`"U:2NM6;G#6I`s46MlcEqe#NX0)9EaDWl3^?1ki0V>rTFH(i
%AX\9I$5".t@rpIqP->RY9[B=`Vq?LNWX;k]Dd7['2mjj>\X*-R^]G8o*9gF`J]U-G&-Y'D`-uMX2Zt/rQMt^8:hfp]`%AX3Kbq5f
%iYGkU_M_WCE=4F;iFSnN^bUgJGj/4:8H$LZ]I\(-l5!^?:jAD#j8(t:HkrT0Pj9VX93jj[DNAF[]432%B<CAj==q]PQcjg0KTeb(
%(B(HDkF75Bhi]u[i*aqCRW*k2HdK^G:d=i[#>H%]-`cN2ldO&@)Lp_8<a=h_.uh?=43'"o>RU!Ch3442#O+9?LCWl:S\jICl2Tq:
%j"ddHImHJhKqIet93]0CV_9X^ktBFr9<P:\bWjmLeGSHQE))Vo<;ugUJRA+Mr]FK-dQc%Fi'id)Bf:'D&)ElLP:S(@3-a1-!Laf7
%B"?^J3[dHLXlN;MQ:CP^f4j@0KN8&k*8mFpl*>:$CWXAdETWaVUYQ@'c-Vb>6i5!GaNasY&0n:$7`.ff36*`#)%o[G`Atqp$qEBE
%U8g6.G;fMl)`kVFFT0W[NqT=Ci0La1+hDfTAOpFg3lW?J_"'F_@lV<@X^ek`%(D8UehPr@`qO&%>K:^K(lMA6kbsMb>^c?hk(];i
%kag_?7!'\K6b'dH3-r/Y"F=sB\:aa2NGe^-fMR,X_TE?N0;OI8C2Z`YHkq5&cE$cR3MrX):`*iBmc=0cX5-I&#2RU<@kHg#.&)=I
%el"*e]rO#J:/\SVpdJ5Vmr%h>n[I:/lV:\G!Ljla^WD=(mP.)s0gkOrB#oflG>B(p[sm`o6gcBj%XkL4=)E(R-aBB03:Q]#7?=Vl
%)t^0<5P]2tco&U</TXe94oJmu0(XR?bu'q6,c04u4lk]?8nUf;J#6%'1p\jaSd&Mu9j^Y=jt-:n0.//!qM$["HYrOuK[,'W_q2A(
%:iNY,Aa.bZ3agm\d>C8'<a)_TV0MiDWQ!1>5':qW%l'6:bPg`bcHYM,D!o'%brK_mDDns@.(Iscih>CEF69c@Et444E3m+NAoljM
%CR#"4F43-.STE7?2kBiE/8dN3VK7B3m`%(VQ'U]'_&#;%$SgN]Rra>&U??U7pWDY=U%@0_k8]/HmVr[,:O@QL';GrZSn30VgsVfF
%iLZ+pSh%&o3ksmUbP^]lM'Xub5NdQUq%No?89_.Z@##,E>-.+9X@m/(/aAnA_N%6(mET'nP:BuODI.AHn5\@=@h'L<ZRfjU6GZku
%/c',C`4/7]A`2%HZNc=/*ONq.W:B=fgQq_bGn*T6ke4#SDDoT5]U`R>j"9C>E"7'Y[(EHG>1@R]eQJCu!^89M*5<cC.9[tCo>9dR
%Wh\aqNS\I+6_Bc84*'?jk(TGfQQ@f>A,7NTX7NetJ+J:f(s[]O<<(P8>t<HF!T^m1.loZ<8i,Cl_t(JMG$ZR/@lB)uH%&cgPgE!\
%OE%]k[e2-u6B"1,k:DoSRes8Xc?G<X^@]EX2`b'REtS9X9`E^%)k*NIl!on\c6iCOrB_.lZ&'D6\O"Ur%#Wi-kbh3%f@/]T%Z9$N
%apVOfs.7WaQa$=X]<<$q&i^/=C=?SWN'O%]M3[[9e`'dg#D#Fj#njWLa'm\!:a7r=MiGW]]cn[\nFOO`D<[U+?$#Y,Ju/$uL>L%P
%qUCaF)-u8]IDsBM4%CYf@*tP*(LsV%GE>Q$Q:6"Z:2k.mV!B./#Ph.lqTnuWAZR#d0,n0GT]c2$g9SD)E7#rj>G'mG/RS$+oDFha
%Mu\=[/&pCtM1,q,mQ%V3DTNE_Fo.A>:<R;d^1-CDhC@#Tkg%"Y1J;-e(_>I"9_pZW1)jHgeVWb^"3s'91X+G7B<5?S1\"`]q=pi5
%_YpdUBV%8loOh]f^;D*3+U8V8_Om!2rgb-arLP=B,sGl!T1I]LXLinm/Tt6F7kWo<f7CtL8F`"b(bGD.!li?Od[)_Z[VLtWa7#<`
%Kt_.:Q:6^t5+kBRgm5?K8oK-UqUHPpp7cPoof-'4l)4bQ]67?i)M+IrMod5nISk$Teg/d_'JGg$N)5[mp:+S?4CWKDS79LJ`b_'=
%/2l,)+XG%C8"T<([F$TgH'?)Hb5@SbZ+F"sGm)M1S%`#BrO)!"=d$5T/q&g5Dc+FI2.F"Q)9u=6Dcu.CfsY#^U)A@K,tMh!1df#'
%)l:BoON99[0>3mDN@a]gcJf0'Y/do,hQYo5rO9*[\L1VUZ:5Z0Ss.bB_1\O/Z_2SQX_tc93E7#57;I1o>:#ZsXIC9sDHo%-]ja"o
%*baCeNG\IF/QO7Sh@=e/hLklcdHUQ1e>CG#0pjl:!83dWYiK/[-NDa_5C`ZiFYDJ6jR>S,2X'0m_u-8qI\B[9UCC,o4Tc"qe.mqi
%%rH98Rs9L%UGR@,Q9S\UonLKg8bL"3kJ,i*fp^\If27I6Y;^MX>"if!`K?itAki08&PIQikH,fpesIljR[BX=X_<;gQH3>>YX]Vd
%I\PT3IfGE$*5f6E\Fp/HeT:#$GbR?thr3]DhLtoqY^b.c%qr<,f%3/A@;s^icZW?+FXH)_1UKVc"t`$ZJb1XR!p]smgXM!a9V;.D
%BZ/.bWN16?TeP3q-]%usqL>1YJAsjd4oVLjQMdF6c:bk&NFBjpJt=4J(Bf@6Je9N+4Sl6"BW+QFYSe`-&i(!<"?[ir&pR:9Gj$J"
%b7mZ$ZA57nSl<Sa8Cl[#"Zq[^7[Q'#h7&`Vmt2:\8cG\(]/U\oB)fi('5Y.5iFLPh]Ct!ehhu9bGr4G'Z/5W%9!gkM\'.CGrH@Qe
%_^VbeG3ubS^OM^NVBh1gBZWV?X=/[k[D[`-=@Ni:p`_JP,RX$0Tc$9%$a0IRU[MCNV8hbX<gopl/+$MSf1I]8PV)L.`/lBOU-r<"
%1!3NBQ?T*?f7#M<j4\G'I_5=Nk=+(05`680dC^S-%#Y]U6qNOI?YG1k)>l^UYR-+:K-?!%>EX9W%Coc.mDNPAY/ti][VN0u?HA*q
%>G>71D7(X@h8Z-:7:6iObr#m+RDZTBYK/Pu\5q=kdLN?8k?;TO9"S,M5mnq9UQ=1KLhj#9hDNidWHM#/c`;VQ&hcj4L<^2Xe#]I^
%dKoA"9<'#FJ>Up-Ug<:KgH#_FF`smnCRl7uO:K[&%(9K^8,11i5(ViZ/1&`G_R\(%CVL`nFR?PQ^Kp`M\Fs,<,Za%ied`:XOhc?c
%*&"nB&_DD_q3G:Wm@%tFHnV`"VF<paM>?9_QBQP(6]&IkZ`a7Mm5MqpO$UANgU5p'FghY&1Gk.36>2\InI&7+^P@lI,XnLTfr]/(
%k1P<2G+Wesc*M2WJ#[c03E]=;H'UEblttnF'jQNiG_KcI>aZ;.Xk0_<G)c,A7f!.gX'MLlA@KuI^"tT#<k9r.T)ObErke@TH0CP+
%AXRB)k;cj<aV/3=AoOrQ,dOM':C8d=iFI1\"F'Y&2Yn`YAGX/7?5>YT(HM(:fdPNK]UF7j<`V)b:.MXPb8(X."m3dc(e5?QOf[Y#
%MSS0e7H/Tu$A9N$_^4s%m^1(4&=rrV1:M`X77V:or`cfjM0f0E4]W+VLZE@^s7S`-M5LLhWPf,pR1&)j$JB8]dgRbe>faj&>H\;.
%&K'_d&NK-3k'L%+OWh_^og`C,5pQl4AO`I!o#(_W.C*MVXJ_gXI_dIS1enqf`piH<=QB.W_6U<h-O05Bg?E/d+QnQZIUonkndc7(
%@qb1?m]UrQ1pF%\B0Rb^m-:qiHBV*k`GSssF:r<n\@hO@h7nK/KKj;h@cE(^O+5L]g]BWVROrO[EjXZR3pdU*HE@o=[@JX)\YCTd
%1BR((FN/g2S"DO[ZpPPZ?9ULTF7$r]hIs\%:g<=XR3uAD0]&1B3qcr>mEqP!:FZY*B:fhEE/%MsBdH8[l@](0_>WO&(A('&-9V/_
%TE#?TPLDR*"<.T%g;/99;#KcMq=L3)[23JOd*WCbdL7LnT"?+mh'dr+3&_3N],1U1GS[pYN`f]hoCkmH1u)+dGX_?7HK\U3rscZ`
%c$m@a^HJ4XV982r*t'4K945lrL0jdAAj"#9+q*(eBDYS*NR.CfN9:RX[6kA?aA1*Nq(c21M4^:rr+!)N8?JlE86%O\;KZM'#G;HU
%*lgjb"8)T>9:`(-m!=a$JK3.B;bk<4@!3[8aCs\\GtY?bI[:&&bf<0\'2T65BtZ\RL5"X+La^'d/]9d:>":/1W:^fNU\rH%nWeEC
%'1XfjK=6TPpEgGG1Q5sC[=K0og[o%+7]!.d1f)\=G+6/\!m@q@TTS52>FgAF[S!-cBp^I_l`%7u!ICI_E5H^)`mYj%a37Me*l)0k
%!$ReG;ep[4HG+)&hp(Fo]Y]bN1D0Eiljs]^1kDBLEdMO1ZWK#q*?^D'T]Hki]kmgO)GEC@)7ri.m$)."J/s$f<Ds(#/,f];H3jlO
%pBT_Jk)aFoD6<IuoAm;D4.]tSn#-EGcoZY7b(uS3%D(uN93c?3:trNhVf^f0`!f?jTo$Ciam;i#-V7SNE:7HL?n[pAa($VM%/NE"
%::58qF/cT0>"emb8:fr%"4D=/!\r-]]\@-%#A,ggi*Z=1!bC`B,"L+qMl!:GNH8#Uo_(7egJ,#XF.CmT<)YAs&=^8bXpt%]ReB.]
%*HNoID&b[o^,.no/>\2fc^RWjiC@fm@f0WK4n.?aL07?49<Hl)g(S.VJ"r!\d;R([A?Em8jR,H<7EP(1Zlb_k6/lTSH,+1A$q"rH
%Si0`hD,4Z\R/b?D`f\sUq17M4<]\VT[jV'q!Gob,WWpVq#dbTrO(fdJh7'X?6SXi(-%iU=3n6*H^>rU9/Yj'8SY/rV%8F7Xd60`0
%[I'%s*DjWsB\u^o00'TA33)qV=W4M?*cNM8'5D8mgVG&sq[7.Ho$>V.mZ0t,N'nj7U+j86+uU[:0iO0Ip5Oq)6YeQ!iLp,](OLcM
%On-j0(_$llLnNHMIZX?02FTuOJd'*`a.Hao/&6pKlFLh>M&__W%kEqF`#I.u#0C\aVl8A%((.;Y'P7e=+Sk^bnCqh]l8>Sl>VaK6
%Wb%+a`Mqd<[8gue\,gu$%c&k/6]Med7UXtM6-$P1c.HPD_kugb\g]R!<6;'L`Km)&e81DpO"rL$fBsF.j#Z`38)b^#C?r4O#[kia
%N]@KU$.>J*b3$3/9kU)X*tFs!r,BG6]4=U*ELT9H!L7JNN`r\_obH*F<40G3@jcn\;?I@hT.o'O?a9T3hm`FA-@.7>lMU-,asioP
%Il_fA@9AYY6>W$cC&Thp1UnMf1s<K#0qPV%[7W#9R?W1cT:J[l5NtaV1sF;097Y1@7WCE?8![:C4knNd9Ge']"RdHAIFmn:37UWI
%[r)RVSu.V5cR.0ZM4-X#%hN?Ze=?cjT$[d(1uci9@HnQcK1HIa\"QNJW!QoBYZ8*,[Br_p'eBfH!j0`^qF67AlqQY8e)H4$C6C7g
%h,0LqMuq&8>-7=fOqFRA<^)%/!<bO#Mfrn;_'F"A!a:`9$rHGaZQu2WISSdT<`(S0p]Tm,/:d'MeCE\,A7o%2X%_O.&<=P%FCZWP
%GM=#qH4gGT\aN=-AI-"BT#+j+6jmsL9i86/ZXq`EL7L:c!7L2k.W"g+U>87'P,e2*A=fKZWEkOKrtpTeq9K;<ja)e+3Y`p.@O;b9
%d-I(NRFWr$\uj53qnjkQXZ/;GR;8P/0F^AoEL/8>S.+->(f[hE6AJt$q)X(2#[4M<L))Rl[J\A_E`SMD/8M@*3`XV^HDTRK<%56[
%Z6usc--DjdF[V!3$EMRKB#JXJ6\<?p=,ij^8'J7%@Y:3cQ4-58oP0_be##:\=?(/2MhHb;1N=SB0S>DB0g=[S,:%)j-qoR.[7OAh
%!reS'PJ6RBoPf>iD)(.i6p]Z`ca54PVn?!`Q6H9E)DKujZ"XmW25A9BhL\Z8D1L,0^tE75<U;!"%b0r]P+P5]nh0,DEAE%FnX<Ia
%p%JkKZ\;3Kbu.O%h]PiM(i$>LM6X:@;J^`LqB/U)2eL!?"*`CqM'>dO<52oZQ&4?4@!YjietAesm6iYlCa=\k):U*T05S!+l*46(
%Ag[>Gb-tg':]keeC1jt<lW7`8TiYioaVNs]XgVi)G637XbB?TuJo!8Y1FI_+WI=8=GkWT@Sk/-VZ]Ko@f1tO<`P,FN3$0gF#\";i
%UUE83?N98C4XTSuB-DGUVEK_5LLAY%WE7stNu2_:6bcV*.qR'jBgiB\+'M7;XcYJF#@gJAj^>1;W]hS"YF:e"$/TM663N0TD(n#>
%9A-!EWc>+``I$.<bE6NU4jkPjN[Jp.,DYUr1SY.="hi\^nTM"VO+:!;-$,G=[#[S(6B;YaRljDZ\>3SbI9+0o`aD#%4C_`oC7)o]
%VakZe.OFqV5s6p!pT7CO(Jgr?+T[n/6lnj#o6S*lY*(r.]m0#>pUS69q2qtH;V,*!Z!@+SQf3,5]\_3Km9Sn9/gK?H84V'+ViQ>N
%kBG`sCAfj8r;5rt^#$P?_X$%5=Rg_9a",N=/7aq,Ih2R1@D$EPFcg:obA%E7k+g@'`IKUW([u'+5)_q;6Yf0W<<NjWf2(i9pp..j
%IO8E[l!sY%6[m$7H050WSm0#+qdLCl(<On$I).]!Mgkmlhi5e3[k`==m,?8Q%!/pE7CV3q-:4h>*j4&=3;Bq)L<Yp%]q+'#T4Frg
%K";AuiCetMG>iL`oo;8?n7O0F])V3=0.QlsKG[oF[)c#N)[5@N$M>Q-.UISXqcg]LS(2$m:TpR;'AY(UAI^W/fQJY^c+ga>;T[Q<
%$hX-W,n$d4LI?FJBJ"5Pjdle/#X(33So>ehom*TS,0c[aM:IA8rHc^nrr)S;F0u_p`FHS*k!O@eCsj8[D--'#_*1Yf3W>'n)Hh;b
%m]g`;G&LZnh-FjuFaP]1lei/]Ls=oT0qc*tndO,cH67AXN%@#>JNN,>iIiL$1pMtoJ]p9K;9WJ8mf"tf=ZTZG-+A:bR?=,A]KZW7
%qmF,u\p:o5(jcs(A$p8i/+S.ea(uAGm.MF\%=>OGTX8$PO4MQJ2mo,IT8V]#nN*iA*JK-fdgQn85:B.?A0uFGEi\$Uhg]RrN_d=(
%rD$#N;5nOTNomboNOW:DiNj%mrGeH%B^GmNH!a=c,2ol;g@e)ua@l12k%\]rV`X/:d<W#_Dfqg&GJ5j%o.:de.2NMOF=Fm(h8P>/
%_8QgkXWU3im4oJp("5j\VECQHXBZa_fGQK6l[#VJ=HY6X7[[:*(l</FU2l&n8X)T'>U"?;\j+Km*_65W_Ygmp(LTR9hfc9m>q$f-
%H+f%R*e_!;pNd@14#k]S*lA&K:Fk;;g$QCq1TYC*@CN`S+?f,b5N+8&b&>Gphr7AO#Y*O!MN##2.-06-n&kK*f^%9aS9\2h@)9H%
%JJPHXSI;A")e&TilT['E]RaV=oPU8e:u:-L9$FnirI!uA4XT(!<$;tFDHHHn03un1GaZ"9Gr]5Ee]W*=7'Ei/HgDKVI*Z,UH"hQc
%a=6:P;Z)Y9I-#eMmM(T#-L]gfNTApQ5<ef_>jk\*OTlKk`kn2ODu@HGi_?Sb<kYL!Hc19<epR+ec^R,e8Z3U$B%44)n(Bu\i6AE_
%C%"J6WdAgO;r2jihd1T3]5K4V>B;=Z]mn_9i\6G&=-E=R_Kb^ek(PC*iVG=m/_r<d^#d[k``k=NNjlGl+*m22]6CH(:*"Z<M`:+]
%c5(c6i_?K0'jib?]!<CKXfqN#[oY)rp]8&@C9P=Rd&60S$HJ[f@@.eg/UY2TT5F@)G/B6ZQ2M/7G9t\KHXDV2068YCk7`:jrKK3@
%164rg/*Ea-Ic]"fBWPH]Y4F/f1j&@,2-*aaEo*.J661e5n"eVOr<bTaqjL;2c)dGT@6,?/U2M@0>4o#h#?>+r0AQ=h3Ut22E-JT`
%=Qb9"\ZWAh]<=;-?f^eFhNp2`55-)Zk`d`A;qpnT+"qkGrbX=L]CQ1aHr!@U`M[=uQ;=RBlFo4Nj:-k62(moh?[Fq>=^=$P.'IN)
%`@J"*kJQR7]lWbQ.X8/^X30JGqs+/Pe%6Mo0H7&_>Vrg6)S?Y_0=TY^X#F#QE:n5J3kMDHI1NC?e!''3mBtbUD0?Dg2=F:a%u+4k
%^HKcA"hP_7CWr4#=;*dDi7dVPqYjZW0'CdqWu'<oe!%J\>#(e9CNh;"gU1[hp:aRRe&A`(Qe1S-ZWsT8HV5j'^/6CdXAeHXjuP/t
%m&YuKben`pO8<:PogA9GAGu//el^8%Dsa[a?Q9j4<EeS;/"5t3hFQEulePCqAn/N&'A<_+gUA."ob4a<F0Y>H&N_`CNV%M![#odl
%5M3KnrQU>bDY8+H/D^OhlC%:f7]."^5\mm7^ZY8gA`_Jr.Uq&FpEk+^ajeV<rtK:F5MsPaq]?p1U;(g*bkR/7/c%Q6PEipQ9Ig=U
%j2#Osb%12J#L@6:E;6#<#I7=2'Y$;dhZR7[mn#e%cf6^1G=*-(f+RPg9ksXC[jaKehDYt*ptFjB\#O:OXIJM;SZ+bj6;$aW=jrua
%2EU'E6SK(M49\m@HjT3\XV?AD=1TA6gI`=!S($+m:gIe="lE'd.bIn7P[Kk1s,/P=`MV'r>Iu'M@4U#+l!*>i[VtL".EcQC?b,5u
%]hl<IXYfUV:hX]1(m;b0BIJ3#IM4asb%Bj@GiV2pO#Nu1)Kf0lFY!2C'oY;G;W<#=TH_o5%RZdlqerG!bjHsWSm3:5`c8oK?9..k
%[mQLKKl+B]'=QrWUZ_%9E/32^^H-i##&t?chm:W4g@(*jdbL+k7NVnNME^H=IIqY.EC1Np3.Yt_^s$!9T7LDfjt*a]m,\:K-EY^o
%b`sW^9S&%i9]IOJc*"bG;3p%m#dX>>dU5l1cZeaC-?[Cq[%,(KB7(Y'+H^GY+s2'kikk!rQ^)%#glo#^iSH=)R:!KbVdUEk]+Y_G
%Hb7]eIs`&;iGUYV41oaGg?./FC0Ltp2EQM2,HV6,nbAPl[=')-MP1A/]PhXZioXk>5a7\g,;BqfcADA?gl#8gr.b!LgoX5=O1Zki
%JPlh<gu7kHX`V8&etc3egm$M=F>g&[2tHCa;,]Z8a*@E/J*0MV:Ej_7ml\H:XEKb,@dDW?jW[j`<F3(5d!U+_/%hk=?%g+p'ebrX
%K>[2L<c*Tar*BGZfi^HmbT/lrR+b+W2VL7g`)C9GFE>+"do#A!?/"`\FsHN9I5b@^VKZ&90sLO]^44rH*SeX.p,>Wq]ed'"gj?S<
%4kXTl$f(a4iCRg702ZuJ5<IOln%[YMU'U*Ep#c*:-krj*m%:\W%aLQ3m"(VZ8fY4,WY3uK5MV8e-#Orjo<3EaV0]6]ofbUjU7D(Q
%8!Bd]9(]!$;i\S/W7BP?DXB$Q>]f;:P:#+C4i\%\Z"C$RKONlifd7MrZC1Z9Y1#CkQOAT#M:L?u.3Y7S[1gUD'U<pSWC@QGf@*uF
%H[T6s`oPB0o'4UA:$S5@]@=jF><B7!>uad8>4!e>3:F3b^#?c`Tb*BZ&(?(c*9Qa)Xa#0e*XoE9B]ULgPfU:J8%7%0r_\*mW2-on
%-i<.A+Rk]2H76e^DouMS37)6_NqYD<n2Qc<4rm_.[J^d=q*Y$in,E.Z"HlI_N2POSpuU(4B((Gm#>$_^NTauOHN!>V)IU50Vu(ck
%I[\%"g!dF_NqY(Q<N9\/1&5d3,P]R0lFW+6F6YTiF.RWRg%0uamah2\ZF5m,X/[hB5'ZF+?TQN($h%$)HQf<2Q&B_&^BVS\P_3H'
%d_D?L0+YQOl1/$75.I\d>oi+:[IpTUiV$h+pO"#qk.N:+_7Z:&fZe'HrptN6;_D<l(9`-fZ%nP4eU9&jERi5#e?4Mg4m)UJ\po$3
%?;J;k"CaA4L:N.Ab#^Oro%M5\X1Y(;'p"sCDU3t7S_Hd([!3C7?'Xgj:KN7^V[$8:pSrQ85$Z>Pgul/`k']B1a?20<p?'7!=*]6C
%4W!f6"+*K*@sh"cIs`e(pRf)oe2e$0Zu[!84C)7R1/DN=OIg_toKAgnn&s%g[!D=2?!Sa`dXFZ3.Ge*XY5piCI>p1Qg?\>tVl6bq
%$]jR=jSD?ZO(<<H2k@W1ls+//L$R00[a<_Z>ScG-c8?#/bdEjoU3Vo&9B'"6X`RF9>G_2h6U9[mBgKr1h8_>s^2mH>No#]Uo:+KP
%\Q4`0'oqD(Q1Nf-9;U2t]iFKpYuAnbf<;5EXjtkqa2!^aE><rL)eU#s9]*d)1&[Db%+a=)Q1SBW=Z8s\lU4^P[GRFQZ(&CfNOpg<
%eQ6YSqt8$JY$QTi;oak,^Tu6XDD7-2i\nJ_DFmgJ4?hbBb\CR9\&m(]^1K:to%GpQhI@Db?%1TGhJ^j-9$>CT=t;p&?+4,uV8IIa
%XfVHXrie#n%_'JhXi5N\Jo$:OMDPafgJd2EYdV5sZg)]4LU:K3adrp^a8a7jc_S]":+Mf)^#V4hUSP=^CnDZ!AIs$hRITltH%bRg
%.=P1jlVA\];Obp6OCSE'a&d)eMe1$6#je3@i;hFq9HOr`5FY#4D0Km)_R6QFdB>"\X'/a!W%H9CWG8#2n^l7@3r#@mg[dp8CO"Ru
%%qM![n/sXlUg9Uj6mC,=hMdcEK'%W(#.n:mcW-HV%"I#4]9/-R1:s-T!DUgn7k<hKLJ5VN[">3EkRFS`a!O>]*Z0.K5m-WNFA2&"
%W-NJ_X\h69C:3pHp[&$C%)$?A)/XSU<Le$>OW[;9_p5?GHfKYsF^`j5GrQt\mHHNDGT$`C7=tD7!Bh6'H?7Y@q$7?]m7Y<gb)s(D
%.,+O!7c0!8e1.B+\F+S[Z*Dis);t<dQc8ip=gb!#7lFRG"jOOK\p_SjOeTVLfd7V/98__De(X]#J#jBFp#L3*j5^XorMc<U%C9/R
%R<:(^nmO]/q4Y=rR4Yc=2re5s7]0m4d0aJ[&DYTTmFfG["FP=/pF#Hc/bQ=+<)</+@!2?F4EK<[fS5XDkZjiCobVWRMZqRaaoai&
%Hd&Bc!_`f$[`Hcur#/ZpMgp$,:3e2i5`Vlc/RRnr$Op)pqLUI1Q2#;GSrIPb-9,cCnL(V:<m+>Tnfppd9r/eK0QFCQN,or#S;B<n
%#2Y)Ngdm"cJkc'YCt3?>noHnE4#lB+R@?!KL(Vp6rIU*>[2?aDo5Q<u_K3+S<e@6NVN9K')uEAKIcBcK]A=(K.#f0"U'://%*XG,
%_.48pVANWPcV8dqYMkiU_0p*=a2XXqe=e71POr;SVRah"a/PbS\97^BU6.'Z_:?a*@.Er+WoDfLO&E"PHpuqAZ;[:B"Cce@1#A$s
%R_g?UhDJJQR0C!^;?,'Jm=.O"@?Bt=U15,3!E1A)rSTs^fU*_%\l",?@bf<iON#<P^eBmj),H-;mRde>`dI%&GS-FQ_fCX8)\q!S
%gOGbYW:eibP@>u]Q=WaE4q%i;0S!;,/j;fca&k8!fSjqYBGSHN8'A[F_>3ppE;*s_@n45g3p,#>6a92JY[.c?)W'M=GK[`5f2\ia
%.UF,A7:/#pFguqD++uG2)lJg![j\)9m&@W%H+8p4gPNC-AW'lSlo\49Okm-O446<$[pbZF:<)&R6QLA[Q(s72A=(ngEIDc?R%UC;
%b(m5WV)oMj8u1%Tdf!T%nb*[WmmC=,\s[8&e%&42\1d]iW<Bt^'72MnDIAi"R6E5sltoa#b0ot%_dbMFVllqYC530]7<WIGVb"<l
%eUr^\[;O-:==V3BKO1WZ:uat>ksiP?]\@Bc<pdi+dQKBQOk97oOib7+Fq6KKXH$]:mJ(bafn=;0n$jS*NJ6H&eS$SrCKQe1<D-U7
%7X=S1Moh]4iK%(9Q^usr)RgcHSSc(";W(P)Y&u\tYE++^SRPHuiAWoe/8)!6cj[Ui8hGJa269"aQX[tg_+(@<I-a<Y\b1/7+;!3d
%Y2U)"\9%T_M)L51p#+]kcF-]%gs\cZ-,[s"b@9J@I1;F)2DjZQUJ##Y^9%I#RF=<KBM47$;RUK%E0j^c`7)?4S)fkZi+c^Fr?1t1
%V7?=@gq>='K\:tGM=eF;=9Ff]`D%G[j[$Nk0,dB]rE(WoL3`oI?-:O<POC?5XmW?i]YXI\%O9tmB@7.gJRRcZ8t%+lK);P'hRD=1
%jG=$^hb(Ud]s2ct)C5*D%drd5\(JVbAZs_5c/.k`l0[i*E-!^CkjLV\oS3IGf^W>V:W"V8rk1sXdWfe,nAZ(oK\X(`b_u5T>;;RB
%]EJu1m?@:?Wc"oX`5:'DmSVtT5FSbk443D0nMH\I3>@%CoQ98K7]$"CmH[&^5UB'J8#5gg2XF-rW7Fh<Bm40`S4f.R8YKKK&D[$I
%gfRguSme#I$PU15n[HQ<8?5b(ikqZQ#D>aUTXR>Ii9"&oAh)-ee/Up5:AR/R/EUDC=Sr]tFoA:m_8PPI+Uii1C#/&f?S%S,SU>&r
%RQp4^5>lQ]Rl8^h\UWB)i\fNE_7ropFIZ=d91;MLf:.>9<P5t?(?jT!K[smTd9:^3B.t!W+p2jr%\k\t%$A*Vct`tgp4Q&6h^#UB
%"Y?h!\bGqlo_^^mRYmGmAXYV.PZ%$LrJk".$%+^k)<0MtY]I(5ft3:cjaDJcPJFj5r2k.63395r0\42qffDBb_`-_uq2W?-iS.Dr
%YdmY.Pi*%$2F`n$FPA@eosQIcdi!JQZ2n>/BSb9#(1+1s:1"3%aA.A7a7mXQ;(I]8dl=kLQJ"Ce]Th^/h!8rh>Mo%MX:EAl7q+<)
%C/uP1q6ZS_aqqN@b\iM;4q9!h9Q$82Chd5ahZDiM9!VQG?gj%@'ZEm#1VNdlOTA[s[h6;1R[\K1$hXd!i<Cr@<]@#Aa^)'#$St/.
%h?S:^jJDP@Gih08N4=toogCgOnN>eD/lSa9J@A,^!<_-(5dc9^f\O7I+@'e^o@TLMJm1ApP?[kB*Y@o%##tMD27UCKEo_+VPDO`c
%6KGcbP#%U<*/.;&8Kg@e&o9%e%1>@L)Hht9a#&MJH5J-3,Tl6>I,nJ+-/lRX7A'A@8bc5Ad3hU:C4/1XgJd%bm64cR,PGnH"kS6?
%NI%74YN:VU'(<;WK5Uc:9,dJmpI?@XX?Z\r$K)CHiS.SR!^U3L%+@o(-\tUmNlWpI`-<B4kmpr;f1LnVFK@L]m%>/1(but\.HqIp
%#%BUY>-Bl:(E!FHO&N#:l&VTOFpW<40VhAA_h"rcET_]cTWSd_cU62W9ag_VdO4,DKoH?R8aeU`qRo!]LY.Q)lP'8HJJhsfYco!!
%KCp;Zklk#Q_*@;\8MrgH$Z>ag&fMrX3:t9;/8PM!*Q?#)>6k_i[m"-3]CqjVbV\jW,ocU8N#f*q]R5rK1<`^D=YqMEkYoES2$-RL
%.hN=3f$2]0TI4,^2<kW1k[S]qp9k+_L]*?4Ys0)UiluutehEl#[E+,/>-e?@9N%9"l*2,kJR)6%fFTqRJ1m#=REuMFhsO\M%J]T7
%%CeW=AEdSMrf;_pLpj.O[LpUE!V*i&NM(r\=L`s+T:!k20^!@ZcOhYS7eEuk3Iu_PUcIR%UA=,=7Ol8/2;AJAG5)-TMVo:f&PMk-
%D)_.9a_sXlkc?_1]Y6PoqmOkO/]P"`$KGib*=hgq@,>8p2;jaP[cEEF+JCfPM&R!>"s0Y=>LLfF-5GWWX2cJY(e#lEdK^UY2NMQ$
%);6S3M3ER9hEFX"7>kJ1E`^Xn-XBLP1Y_oV]1+9EX>Tl8a(8YGSlm;6+7emJo6;fZ,+Dog<?InDUo>3%NT+]25bst1eR_^+4MFK/
%[l.S@FV#:JT$l#MRgY1KHZQf&Wu\Xp[8nq-b_Rumjc@n6[@f]Z/O%K28BB1S/[.0*\pDe"''5$pDHkFNJ7L"aj&RkZYq$?WB1l0%
%,oFXn/I_juOg>\jgZWo4nTOL:fAFO6ST9.\!ho'0"(^)7Q))TdM6dR!_kpanRkpXj?(jOXHM_$*LU]>m*:,%&Ttl4:_?IFK$3ArX
%7_BYPMf7qYHf6$\7S,J#Wmj<1WRNV+7Uork6hZ>?!(Q't=CoQUZJUjCgJ"L+*:*Kf\.A6THXpOD0h`*IEs(/rQ'uk/#F%iseEb;l
%OuU+<b)j"Y=dhM7:WN@Gn-0rSEgWGo-2ReZ?6mZp_*_BVU_7L:PdFDPUpJ:25H\*Xm!3fg2GLr^eFV.d09p?q?eI<50)%eBGAD?u
%6'dCrj4HdY!nc;Yc[(:qmbM(=i[f;E8d%cb)ag#Pf4h58/S++i8YJ/gUrSB,m!T=g'<aTG_nl;hQ^>F64]0!al6KCl%79!F/J"+*
%N)c;/=H2/.%W;a_#'@@S2eWb&jpVQF5HKcN;E/+WT05#NCVA-m9&-3pJd9omH[g^]'\PLW>CdKpl5f9i4IS>_]`E'F>&<9BWt7H+
%-LCQ?XG2=.-9';K*E:d!_J/*59IpVDX?n$)G4MKO'I#V?)jIJ'`X9`.::ZjBMrq4m3uB,Wd&G%k#Lb[?%;b]^W<;I#7`m8XP8e*6
%Rd[;^]f1^]b`*;[5M'G7'r1)O!jC]tWj-CfW5]PdkYr[?m%b924WE1kHeSDMV1WN5Xl#(3NFSBC.Np83Am[[g-E,*cLck;`n6($V
%-.RhGWehjMU#rtd-amr;,(5VlB\QPSq%ZKTm`k/RZ.Ce02gYUPIPt4khab.6&rrLPZ1BSl&*1H@-\Imtg#g/+dY@lMY57#:8GM=Q
%h^KW^.Zs4;b2/Cp^TA2W.:=/7^%h$HSTmO`\,#V:..)e3^/G.UhX;_sk';^"(nr\$qsYMn36@eq%*+^;ND(BUhna'uKl0"!b4u/U
%Lm)'*Bf@M0U(>@Ted.4';8$^VAZZ0f<EYI<gLo-cHmXIAW.[?0J(GcVKp6I3Hb'(het;%ZE;aA^H"2bY/H<)d%<@ZcKWsS..eU)G
%h&[Z'h1)U1V^l)$#"BQg5^mjNEhQX0R%ruLhDJ[s`bG8!pJB"N.Y4jO9HfU3LOBS9/l)6o'Jo#r)2+l10CFVAmijhfL&$O0&!$,`
%5UH6Cgme^?5f0?qiVb"BI4.B3pD^*A-J"peKZ_4AfdG88f"2t0T3iFgBm+"X6'fUW`a83/!L+sO)SO?bhEM@'Y8u6h:>:nMC/#ER
%`7r3)=oA,(&2oDoIj=@G`J6jmGaXQ]2f.XZpRck?E$k3Gb("f#;2u\rSR-j%@jD6;Fs?@EX@CBiMXQCg_G)Ki6'ArBm)fY?Z+%#N
%U?k&0#$0>^:rmjEL$ed"BNT/s:!TrGk#*kHoc.?VHqZ`=Fc)u2q2qJ.SR`nPM2s`O:P7Fi1nS.LNeknFHI-T-=4HNW7`I4*rL]-L
%Uu]U`MFX9]G)W6%3g`NUjb6!gd@.7:M^J$m8\(oNr+iADBZB88+QsV@bbYB7``@O"[dA'r7NKu&]DG<--AiZMH@8+%>-,0[3KEWR
%.p#5fO8O_W>^Q"u82#GWOUP/]T0[dd2!kVu7SNH8a5i(@ct(E,)8s3Dlm'`qhQp2>0&)5SgbC,0W-]n)V*q;cClPN@^teiqoZq<<
%Tf'8PZM@Z=CaqMKqln:_nB?8QPa,`';:sCMPg!oY2\e1g/#7n\-8[+P\0)VPMf1g,:/5uAXVd)3aG!M`VX.*4UR*KZY28ri&`gF?
%]i9)<-E]4[6s;J!5+!N=)Z].c?(tc(&guq/31A,i:"nFgB(&V0](5u^D\Q++bq0.jgad3:Yb4;;/*Q#ED!RGBoEVH#<6@k[rT16(
%g=R$ENt+6#J%?\$WfLf,<$H[X9<C'sYVS4A-,RXhq4U^[U*KFkN4[.t?rY;Ei_fL>.'aed!gAC*W:`M/1-Yh>P5D1o^06cqa0(U)
%G2WaE$8YF1]"N5^QiJ$E\sklW/e_^sjo!%\R#U,=-IsPAZ[0?":TZfZ=X*fsV!q:d(t@ppa9i">MbU.\_oK[&_^?=TVUi-UG;?-F
%&:qnPM,22j-]+P9aD$5eYO:+tG@0,\;k&=i&Y^M!%5Np!6.RT21o5HQ>K7D<YO&dQCD@(jC1h<nR-/s`1qP8VQHCZVae<2,1_JE!
%7j$SAU:EUsCaG=I\5J16=6);E!#7M/^(8_7k\nNr2r(Pcm9H/oUUfe-qpE4cX[Kb'\&"-El7bXo9YI%#.FY&DoC+@J+lfJsN,LJt
%qgjL'R+oSj_)r(LJBP.R4=/P0oLc2+>dsOqJY^t.P(U)F@(1%.#;F_u9`[K:M@QN]!fT7qI"uZ'I5Z&m`0e9H2JuIZh51tJ].lj1
%+<e4jmKB?RQbf1i8L*s&QAm0<V2J+.f^DVpH>;/;H&<MTSO?/nc?e4!+8Qh@=!tqoR7Y530>_T%8go*ld>Q6cn<q6V@lM]Rh%$!)
%38>NQM`s$1[M8>lZfaY6p%ln`;:;tjgAJWiT_>a[bo<=q>Ei6bCCf>RDZ,F_HIF6b:-*a$(PCE_*CbP8WW5QCRo9#AR)9Z8i&GYb
%5_F\3JQJWE`eLHH2^d?Wq68\kI0^DJV:F<k4)hfp3&uG6:M@Ad.mp1:)8Rg6DS+[,9CfSEL(!21:7G`t"gY>,UXVs".?o^+B_g$j
%4d"r$ce.m]L+IT88>n#UJ6ReapN$6f=ia*O&f"h\+1#J[,M'>2"358HX<(T/KH7T"!LGS%eVDuT<&>P.L/6Q0F0qAaMXQLER4-)*
%>%1Ff/kW`\;G5l5e&amIPCV^ZpN%eU<GMOgm>"&<_(;<ln"osJd<7"eNKWDJ$OB*X6A\YdH3t]N+,JHjG!isIAZX&^(qX$3?Q*ed
%Yq0Cgdu0KY&4kbDRq*t<W7XdV%j:?,;7]93X6?CJGnp)2"#YF7NF\&dlt2Db:GFN0Aa@6s/tj)+j$t,H[f='eS1*0-Q_8O!7u):A
%bu\@.#AQ)Lq?$rp.Z8X]c9j%QfXa%'J:Qh`%/.eiN6H!4;IqNZ*L*R0nL@bs#*lmU9!'gsaK@0K[h?a<12Y(J!cBdQom8\k4@Ep9
%,DF0!*rr(3V:P)cNC;HI$Bda)`56`Eo#G:B.d%>S<:`+rEZ^Bu,(Nl)2Nl&Ib-QJE`8q_OlZafMZ?70/a(E[q5&$%fo$NJ(j-=@o
%"4to]O\$'EBSqRBo=_hs>=QmO:\pW#AEeGS$GsjKp$%P@,K]W_`5\^SNPi0R;14Nb5mDJ<8gTLM5/BFid900Z$X4p_/`DFIkZt?p
%X<[IH0Tb$0WKBD:Oe(Z32k#e#09DTf+;*K@WDPIOV1u=_HK"eLS]K+*<D7/'o1\/Co#,!C+D4*Nqn7RFaHf('oj,@Y,YCdoF"i>Q
%SLEs<ErFt`Mag9D<@TpZR-YEV80)4"](Z5tHV4Q%Msgsu2:Na$?gu&o)+YY1/!(0E'b7M(]#J]a&#LA:"j]2SE2IK%->d]YbP9Aq
%>[q`ER3X6TA%"n=Z>Gs#%j+`UFogTRDl*[sI[Z;1M[=`%EP(8`6.8Q90fVJP_3*+e[P@',RaLP"7C,(#poAn1;n>iti(H6#a#M`^
%e]FdT[*u2*d@5k+*BObRIeJe0H_=17;_rruASk>#/3OBH7g'@?>A*ciTfsK<n8<l>a6H?gA(32Q)XbK_4@Ze9JQT?>k)R-ZF:DT&
%MT#PNp=`KO>M4?&0%5/Q0B3X-q!)&\:K$,&J6+O\hgb7d'(GjM-ds2sK=O^&A(4L>!K?Zcr5lob8.53YHjP$K%acrVltUK+(/FW.
%hkNj$(ju2c:+"]mjP@b7?Re0_H.:bp9D.1l@i8nN>%W"R'`1r99da2O[k(<$_orL@NPVV9%Kd5'._]aB*0-MjL=Wq897"&f%Wd&8
%9K.F!L2MJekJVQ=$qrY)3c9(sVanT5X5,uZN>kL$"-!6Dgt6Vk)]o5j7/D\qrbrq?VmBh2iG>$nZVubWdbO&93&g$fluVL%P*FpN
%\DuKc5&,5l"-f2kJ@GJOn0@DH)?[[X+14*!rie,m,Ak:B,\&OmL5ncH?Z]:1P46@,]494]f6cjdG;J/1F&`t>O]>V#I;iB\8CK;F
%g);!2NKU!C7UHci!]+Ta]&[50BCP8kN<^[q8Wq#;G`guR;+008E"jNhU.=2k:(UrsW),7m0cicZ,[-<m]Kuq+,^C5mV0G:64[lSl
%$H7$:#JLFZ(/9].kZ:TR&L0jI`3CA?i`I6q5-7Y=!56Fhf(#!CnLX;X_*q3%RjV+>J?<2f8`i$/Lug%Vk'7IU6\^4t0Na.M4p9.5
%I,njXG9N!D6q-0"!Xgr#)4Jr,%A*7.'KPY8fLVZ'NYS[C1uR_O?9"AY98fo?ecRgtUO`Ok8Y?og-*7lMP4A5.+^(ZB/_NJsL=h7q
%Kjk`60SR>S6'T`*_t7)ca+d+jQoF$CZ'5NIo.Yba8YQ>D@.5`r4Ns-(E"3:u-<!#[F/1,7IutLS*_9rKk.u!lV6Gme1o0(P_=N4n
%cn&3_Qfc%ti/,/o:SiOd,6udBKGZ5P^]W1U+pTNQ5[u&Wp>0k=pbu4S<_>VN%VIC"1rUUO6\qMU!aA#9:U(P:$4'94$kO!tab%k0
%gk+U+*-BJ_1sem[H(&2U7[_ac`,RmAL]d;q=p>Vt)$_l1,8'_U&ck)qnk,(OZ"#IG6W6+fZG9cN/rC=salll9W";T)%X9)m_Q6lD
%(aGf+!6[VoJ.Xd(1?qgi2U+\f=^X;[<3W?C//Bg(cpV2!A:#*3;H=!`@Ys:V'T-NDK)u7a5R-;jl/Wtm4Ns2O:j+9o6HKahe-In:
%'/YIKih1b:bSaRC4f#cIH3"'L@L*tTSdH!9+X!Z'U@a<C__X]M6OY9i1.j%C8KbU]JIEb;d"#UKC'Dur,t0/D98a-k-DDQ$.,Ql:
%Q'&Z[-(t7R($JOr'TWY`^sG%eR\pjR-<eDC3)Q*B&4e_K"(Y_iVV%%8PU.)%:QR"siK1Br]d1Ci3,/gu9Pc.S$B8GlNeel-W.Zuo
%"b`kl]OVQ_SgR]r2d)XU&,$<'#a1("7N<7*OdA5k>aVX%SA_+)JVJ/,`UT7Kd1R:WE=Lr90SN%X8h_XN\>\_(ee7J7`Hr#P/C@iF
%_.(go9GKEYA9bI.TGBYb^s!Ot\J*Zu8&:Pn"*q+aP^kY-7?p6oE5Vs$J3PChNWpiq`<2S5i.jXU%*HhMFt>HPCXl?(?p@!s3h%kL
%LJ\2=*KWtY7K+UEFTm`up]I,B)r_H@^eb"TE&="g0E<e6RH;ic^dX?18Ha=&!<KFLX9X+fLa$((8`UR>^Dr!n..Jukcnj/[hS[J!
%(4ek/p^BDonaNnNEO#WT(!nZ=R6o#/^>nEb:_<_JSd#]SJcSfsP49ZtS.&#fJ,h)Bg+Z6g&e#3/&::UbBV0fs?qZ&Fci^c`Yc49O
%*0#u5j.IQN'8@b?\rolOLe@i\'PP_'?m#VP(T.aW(]u>M;.[PJnu2"2)&BemAVI(Ab_d)D+<KSgb97_L:IHc8jTV//Al*`b!\htK
%pfjKLP"aXO8/0J[Z60Z#O*l_;&um2o(^VI=6Z^G$5G0SB_<:rX1)bO>;Xf/k\nFnV<^JSC<rN1+BBq!7'$+&k9a:A]N&E(f5mKTV
%VdQ8B^gM_5&96V9,T%"1J^AsB"U>5Y#FGTl!Qr7_%N-Z.2$J47m32pI%t6hL5,+AcDp'RH%8">CR>9u5!#[!S0JHB,%>5.i"A["R
%\>X3e@`8Jnij/^6k-9*8L_O>Qp(1Y9^tP1I$-OOh)j!dKLG(db675ro[S]mifr::[TKs,,ET#b`MAX?A<!p9g3"_sP"W[Sj+YWq\
%!Ch_GcNPeoGSC-*p77I'\,e7:$3g]@&5fq\r*kMSE"Gs""G+r$EcHVh!nL).i"cGu5QkC;iXVOhg;/S%6qkrX3(2g2a9tDW?j"1S
%TKV<\,-r98=]tmeaWc?u5u\*U!)f*enHH`20UT,h&p7XA$:eMKK^D%R7"o<7N#nAhBnp#+]HSO;5^Q@",Xt8[U&KQd`DK9Y'nAM*
%'JNqX!DGuGc4dU]d>LU6e'gPn#d1tF=p'A7")EHk%ppkT-Xmo&o](a+A3:qoiBY.Gj>G=<Ya6V]"pJL*G*7GK(r.ULVArbfN2t@u
%TYgij64i?X0^SjTY^d`2Hca\h&aUmAE%%kS#;C?an`?N?,rBG4!k]>"9c+rEeI-Lb@PFAT:5D#P^b^]k=s@Du!>uE$>nBI3+'Qco
%W#,\KL&i`R-su0qF#$sf-.+X5:^dQ+^I5KL*+5rS7Nm1F+eUcugK9F;1Fn#@p0]^NM]fXi.Nf$#?37>6('\2$&-1naZ!JbBJ-3Uh
%M$24+!(#mNoHEc6A%S27?Nkb+BJOgPfYPLap@`B@lsHrU0lCjpf@Iqe0_f&O*S/8UoMbDFd/>.+MfCk(-3n*;&Yi.kWXe<)gc)3r
%odXKcnA4KYONu>5o["K`*5dpm%&>Wi4@4o,2@IbRUHjut?T9+O+gHch+:+>CnrQUu,IJ/Brl#GedD.GF]nR=X+fAnSkCg,$,[_Yo
%IK@o!Q=^=;^un);5h"0N'(c;5+&#lV>f(00_18rNn_c``Gj)&TD(s:pm2?mT!IR/IB:_N[i%+]"%k`q]ok$4oLtMB?))`L3VVh8@
%>/`)&7mV)%@5h#K#$3<GpdLD^ib'AL=0P`qnI(MP"\6C;mLd;Q=+D/^G<_:^MC;lONEklFOI=b)jad2F'Z*K]k6Z\\VR\)p1*kd;
%F%C]n]EPmk'2L^h"Xe1,<eU5KJhjWt1`WrRFm<Ka:OGLDY30mik;W%'11l:Cj4&2Q[)dg#F0rZWn>K14*9,$H'*QFa,6&Hb-S:/^
%NHkU8R5e!V5_=dB)f7DZiGq/1&O]bi!ss757/*2uLY8Cir.)_+A1=O.NTJ7X:kj3Y$!2pH?5^,n9^""u^\X1gULo%cJC:1(oYEXG
%P9t4qUH?10.#M-oL6.2NYuh&`XP5?ObpCQ>_['AHQum&h1c),Gbfop7^l's<<iX60)lO?A6!0e9+'5HF>lK@,>iI^o[=E`??pGTf
%=s6A/7',I"F/NP>eHLL+BL!U(#HWU/#-:3cZD:;tam<MA:)6-)+@VWBi0_;F"0tP<>BSDV6j%`d-TN(].fmFER:SB`JW_H_7#jrS
%.>)9"E:&2g(sIH2[LVIOb#ef[E<?M4aYYq[8$Ed0+NC%lDqehBHbl_1jSA;>S\^Nd-'oR(n^.PA-#`p<ncR/0U1s^\C",b@Q['3D
%e%A(J;<XJZOU$Mu+BY=:`!Os!#W*tJ=*ck5`#e6uFdmLHYLt0:-;)CiYa;UPSp8Z>g's\0nEIQ=:TU9eX>G<'p8?j_"C#8W7>I-5
%"VM?+SJDmlUF1"m*&fa.qj,Wnb^bIM^nA#9lK9H+r1G-nA6f-!?d..Tg+DW`q8A3bk-!*PNRi;0>+CNZi/BIe"d,=,b:\_uUP515
%+?skOWt6(^C"C\?_Ja(p(_KYUM.];Zf&3:YC9bF%].6A<dtDN1`idR,D:Wp;=ca4n%.9<^!1WYR>2gE%(p[M3Q:=PKs-hbQiFYH3
%mZj%Ak%W74>AMi$\L-XSR4JBJ1Fgg0CZ1_`?X6iJ,Y#/LjKQ!XMIMZD>J##kRc2=&=l:$@dMFHu8K<`ejZOU,^h$\=gXj2pS(ef3
%,\D!c);0&TP)Z7GCSd4:)I$fkd,*K#cIi#)'Wg1@i^f[mme`<O;Yc*fUO=nV6jWoN1/D&I'\qkcmh0h;b'5]uTrll,fY/_<O;/J8
%;Cfi>_EK?R,&=:_a>Be+dd[rETL<h"=).ZnG7O+O-(=Q.nL:''8[cnn+Rg5Qo!/6O&-NNi0GFs63F'Cu4BU"KZTr%=g]h*D"m]k<
%/1o>V9We\(.->dn>n7<EE2t5?_?V(q$+a(Qpd1/l9V=NpiA2_:HmieXLq)q*Gm)p\9;X)pP<'$]=)\2Wg=sqH*:afZE"etaiE[4W
%RY"&fnEBusY/#q)LJdd';]#S(-.%faE:]h)r!+_Pm;[>&i%*_tJ(tek8.qpbbYl<CI"goB'S%+sa9=6$\@Tt3"C/-=JCFQjM>6k-
%+H\8@=E;C*^^Smc.7akbLR,#Id(#_li):OLDS!iiV]8B*`:9q'LObj"8Md05B^L]>A2#HaN'#U0=#:8P_IGY>GmlC::<-PMU&fc%
%2t"6]C+(J;!a%.-QR-Z@AjhPd,)a'm)+<03Ub"2D-)$u?s0T^36b'0F@&#]e^D+ToYAgk)72m*ISKj1/#\<N`-iuS]_W"/g_r2AE
%\:B81s6RG@Nb1kG?F_H!GHadD8HP3f3ialJ_=.Z=$1rfL$^Ias)'fOuAn1pYZ5S,feoO6_%;t<j*aqo+d;+m++njeb#>l@&q4s/B
%g%Qi@:f\3`lf/b1gWOEJeWg>[6qPC/]n&XKHQmJVcerhZ=,ZD<]3cH7I]:P_hTPAsQ?,n:_H/TE?HW7tg?/CVLj:X=$q[;_OY+*Q
%(C+(\=(e#mQD:bD(YP:nI(LduagA0;-K&`!93]mklksZi=R_ic#KU+P?Lhf;L`&Y@V!do@pF#;8pPPHuju\CLigo5%Z+q`[6lriq
%"/(pmKVD#^\R!(IH`@Eb)/R18?Uh]ihC<rWWPoLMgj0K:AW$5.D.'"ejU69KD=><nH^S?2f!fVu^@3_r`:I:>,iD,ooj;17Qa,_M
%7\*cb3d_ORRk1&2cM=MCgVO0qYq>gd_\lc@WXDEFQU@1VeeSF*^I9DuP%l?F8i=I)[Ih@4=JER(.*V_g>3tJPr@1H&<9mU=W6!hG
%s.`?\V&l1lm?(f4H=Ceb1b8@"Wq*6>cOSTK?5;hLO/T>ZgK(al6$?[Dm%q)^O^!<3n\_Gohq$4#+d^>4qJY7BpH?7F<!RcXVeY\H
%XWB%0aS"8&B[9gI_3[;1I;='\,TY(V,b$S;a<lf;JF+Q&X:b3k'nS_:eH]DCLRB?K]Jgb4?p2b`J*IVD]]iaaBW\YMq88)-qu*\W
%NtrHOI,LT>mkaYcWOfRi$HZ:<MoY4E1Dg<S:>o`Wr1fbuQqa,9.?)@)HfdG_/tAUqY<?RUIHBTV?&TUR0Tm[),&69upLpo(pD@NI
%]2FTS?)r<DUIU]d"\-1A>B%TT:p&B`CbNBD+h&bS;hk[=CL59]+'k+X9'Z3:70t`[CgB[0YR\e^[>1oTWqZW3*t.bo6S3ku3m2O@
%G45*5PtNQ'rE@>2P!9*Q^P<Ej>2O*#-o`Lk4[&^!MM"X45O)^Sp[.lUB@V'f_JDB)+8-?s)d(sF.l7u9hkS#]8Od]($gV6%eie$)
%<9\=,h]I<VN>N#X[^il$-9UrM#DUiR3lA%.dQ@KM<+DRW[fO@8ohJL_[Xdci+N]b5)fJb.O'm]+s6`*0-i;BYqW^)o4(9lB]hC2k
%Z[H_"*pjJV,KDO/9OL[KHS*Aq\+3i%K\p]DTi)tZM$%\F*[NjlU#)^tX4LfiW.J.$iYJPA*SA&%\'gp+@Xh=Q!-/Sb./%+UKV88#
%JOm^9U;3-PCVM(Hh2D4lX_D$EXmS^I?ST?C1N0+Pil*m1^g+**3"7q;2b!$["J:29:QDCrQc<);.ApjO'YAm3l&hq%B03=..QFM"
%SXP!@77*Db"o*[lQ75s&;:Nr',l&A/a4U=#E,b9\?5.-jCMcmN]k<flh^m%/BA9t90,J@JpI7[oKsYbpCYHPWB+SVT8eN8heCj5#
%hP]_30ZmGMhN@]W'jm,dI@>rK`<fj(Mi7;F7q!01Z4!/JV+V7-`cXmIi3lqr7ZKu'AT#.3Q,-FP)IB1l1$q,KEVd#E-H-^H<EuF+
%[-fs1C?pH)Y.6J@kGB26K(s1M6[!K7O>ra<a*umR1$6nJg;(gJo-@2l?J*&%[j4Sl"/5@D!b2Sn7t(JB6IZB9%=gsrX4k^;O4uNH
%J%Cg1h'C/tgF?VqY^%c+hmZ4FJ_TbMo@(<=ZmaC9?WFHjQ*C.9#l>dM<5s"e`c`$hce&S@Qp"B3(GC+smE*T')dObIl*e\Db]M_a
%qlas.--X:?-%9(Omos(^E476$g:"\1^[)J6(*l\Vm'*8ZX&<i#(jG*PaYa:;acrR?X&<hHg$E%177BL.3`UZ,`n^O2]sO^tmHGHg
%I.b],S,d;dCc_e1!#@p08U&ZY0orh^@."Q+T_8s7Aj#[bRb==@B*+;7"lP(RS[YCg['KG1beRP%j-VU/IGo?GnqmLsXgk<1`6QFY
%Sf(mX56jololg$"p>Y::XgOCW'2bF9a93Zq@<,_bc-Un9D-?%VS[aZDG#_c_0&/oL[c_g5L6Cs!`trJeo:Tqr-7m/b\FZRhaYr'2
%F1*DIS3hSlpBg:\8%:C-[XuG-J7)kk77i&qAq^;)/;l)n5h0!(e8u-8b!e0:MgJhEZf^cUX]aI)ZBt+\doKn(9?)it=Z"#+m0ouO
%O);O*f3,71!#n*/94tGqpqfVtJ9o@k:W-;PQ_r>pl(&O&@XYV8`K#t7OuqI!IDb@"<Nsp+mfut6A>7#_<)Pdg/EqFj<]Ob.H_/q!
%,^ZdiCP3'DE"j5`_C.?tjFYh=H\@d^mF`\3CSUn-q:1\ug1srMM][q+bn1RQEkmse6e<N@+^_0bN86sCX0-*la5QL(!k.HccQ%7T
%r+qsmXL#>8kYq;kVb([sR,!m_jNNF(oK@sMqEA-<fSda<a1Yr5mjUD#,+>p\^bCUNiD%mH3#O1LG^=Yg>%Nrn;ll]Yc/I7;Aa#cR
%)[n%IGj+GVilO`)E/)tJ@3)?"=f?B'Z%Cc:kS&*G_F\KUICLE.?.J?V@ILIu0G?"qlmd,g44`;hR"H)mCY'_<2=&IniHo3DOJ4q3
%JJ=)BM;P6@jTr&Ka'N+@%)s:ji9-Ntb!$4U&8Z!LPC[kfp#k))s+_Q;qGDJ'c-#o<f#DZ[&gg2?_Q42)#ODKL/Qn\W6<(BM<Utdm
%Gb+fl_3I;^I_Oo-`Qm0"n\,lilsQ[(^N2SgZ_'jiquTsn"'u)iP$LBH$4B,j<[/R`SD?NUL>q-.eiqU%q2JQni)MK^0&Wa<]+dhC
%LoYE?@MLdWj;XWLqbB;]+?3IC\j@-+NYR"?\&,3`[:*iMXd3MM8aFTaM'J!+hobJXpE)'*Dd2rH$=A`2efNeE$U]Yc^2R\BC-Hg\
%G"JiG.1^E2ghs&UlIjA(=+<"]^Tt';i>',0%_.HaAIdp8N83FMEI:IF](.]7eke!a=oc(6jY72rm-2@Doba>aQCi"o2t`*&5=i_?
%p*"jhFSNmW3Sb7qFb6>M;.MIKirfAoP&Wg],)Z3l?D5VhRU_W84l`V!XOukK#(tPPg9e'bp7:?9nXEF:eZjfC:BBE43ncs66B/rD
%n_8?<IAY&eei8H\T&_kUp[>HYXT]q8MAX,e6Z`/-/&ea2Q"+)q]]Z;2cU7G.gXM(RYBikr4erZ[@HmRr9nkn_a.Yule.Kn-LbK_U
%Cg\)4mQ!Dc:Ljq3Xb@u_W'N\S14bc8O]#HZHMW-I"_tsc&dKth7Vr&L"u-&/*<gm+V\Tf.&DgMPFPo!/7o6D`Hs7u_;A$7$ArLs]
%Pfg*hZk8#U3i5qrQ;YZB2e$;@PYFe,b(*P@n3d\5s5q1`o78:-844)IN`C9:XN'P^P,k@6R#,:j3g&'O\(h`e/a$3S\7`gP8kPC=
%!bW[RX']lkU&.MHDSc=>`f-\@g=;67h6,+%YK-69="(g;%E."fBe6Fj\\jIOS/o0Lnhp2"gJ6KAPjMVEW+o5OjA7G5c5?tHE]Ns>
%r%oC6]FmPj85,]pEAe^]);#3"(36-U,0138<R!(6,+:qR8-5Hdh3GW44:(mq4P+BZVtm[eL"eIgK*Q;9[a_f7Va+G[Kgr[1ThmoX
%/e*6lA>N"biL&3SX6Q7V.XQ6r1_V4>IE)#ZOSE8-+hFNu'@eR@g1,Krd:=NE.5d*I%Zq`7C?-">E2tj<B,Tl$\$]Fek^X&mW(MKf
%6IS[>>\5T'<A`ClPp6PqM(ceV1bqZ_F"RmjrT]B;A\/%D"t/TPPjAnm92lXGBM,<l>WrU0FiEA%M%'iX]LC!;S*nC2=m]XKOj/Hl
%L^@Jf7Pob&S]$@ZMY3nG1W#5",OD+C==JLVrDEOPm4/&B$GHRA%cmqVb>fc)YU>430ls8Z3_&4_K?fl1-V<rq!sA6P:)V3Y):53I
%])Rn&IBfkW,hLJ$pTV?P["VkdC&@^!r:;!NTUr=_oa9iVV<!J\Zcn*h2WbYkQQIHnH=:k;1usB:4(`g_m),qSWP`6iEP:E*@]g17
%)*3W'@ut$-@KgWGVs)`.P$U[7MpVo@[P9L:1!8P7hC9n3Lr((K4PIt9:4[goO5$qkl,2T#PT`8TLlm!hj=2pC5417&Y[#r!r6N?K
%XY>c*A3\m9j5KCXr5qNU2B.f$_M!eU,#i%:^'=1bSk]E"\t@V/s3VScrPelkYB:OBV/4)IY[GnMZCR\A67X?S;NGBJXqQ'9WjF)>
%bJEEt<=.F-9(=^R!jW!UFE3fF*"^^^q6:or@:A5@GS3$\#?D!MZf"\IP-,J[KEJAe9eFM\EZ>L9BULd6Mu<'fBR\d2GF(c?)p`uP
%ZH)rFX-27uCcTF1P;b$Pk/m;OTq(_AC8p"9XA%[lIr&CoO5q5/YL@kZnZ>-><'fh_]/1:D;]'N&U!f=eg#YaL7Lo4gEbFbt1p00I
%4dYqlGLSWj6R)hpUpTHT@9@'1GRt#fImt14N*B$INc.GMf3e/SeYZH@3Jd3-&poJ]ql#Q7m#,j1b%B4Q03#'0]cHf*KX!gF3P/l`
%2uOJVMuX;8^oJ_Y=l:XO!s9-)"!Lr$(/J7o,oJ(uq"Ru9T]?Mk%IkC:Md3n?+\$:FD&Tgg1c.f1,[Kf=H8h@AOnEG=:EMt;D7IOI
%`5kId53:bjaS_mF\,_c7\SeM`T`[qf:SQZ%QpTaJk/F>.C^gi<*5&TP#CEkD46Ulg*3m3B1)+#kb:SL>+GUg4W\<#BKeE<^_%K<Q
%eT`g%M&N!0fd9Kn!p.p'Hlo0gq(JMHO>k1(>Krf-%iZhO1m(N+.&m*u2;U)9><&>dp+E'[M1h(<Hn[R.o[Kob+IJ/u[`sh!>SH(&
%4TVE`#&RaXK?'>NGUga`c/gt9hEX*l`"fJ5T7"qo5.*3:^.c<%BjW7@:@&P0@h7iU#Kn<h/7T3fJ4ZiBGS9S_"Fdl.0iuS%-T7`Q
%U04A$Od^YZqnFlr6r`,/Rq+M3"s%is(A21Z=M/uQFR-9NKH9YBWQ;C#LW>uia<<!I2MYD0ef)P0CVe-$n(#g^QS)tjRNU.J@@l9[
%,KaVI:"GBk5R<N]PNSBG7NRHk5+T8r]WqO(K?&/O55cr$0@E=B2B3D8s+tf?/H<fEh'ou/Kp3UG2^5N4$Vh=G`"s]mK8DGFjcfKf
%*M5,aR6[Qf[u6MD0!$VQ+L%'T/6-02aNRIiRO$LsO!&tHb%;@"CCq7i0V($a8-Yj$>BrI;SBWO;U*b`RM.^C/2Ypm0Zg:&b5%h,!
%EcP@GH!]X?S8'@M!6erZE1"ZKTKYfKG\_kE;D;h%iRO@'-[gb;UD;$e1Sb2<r^:6W33O<<Q!sPi<(t;5#9<kWXS-bU/ar@7DO$I9
%0O<$[k4LDoi/gimPB`/Z<YbKu(#K@([MMpWpsQ3ZX8'4Cp-bg;r;GC*cDT:)S]*)W/'I=UPM2GlS^\/,2d7i$/2!"$!IpthQi!Ar
%m.5V<>bM"3o7#"<Kd>@6Ne>WGJ[JMo2WHG1<1#Z9EqTSfKVfZ"f6dng$`G?O'f+bbm,V/k)*.J/N'DgM?AY<m_0**t-jUJ\n<;EE
%&7aKDLe,SRP:Z5SBT#LFWN0knkEBO/#n)@('BBBchG:"ga\!K*Hn5%=BE[Au!k@@L6'6OUWN3;3>n=p[N]7[<CB`\7*mfbsUZoZn
%oC/7Ln9=bHrr(_?-2QHTA__2@+9(6679Umt>6<Zl;D<M:>B9c[SBQ?nO?X0UgndlF3K=JF&V-l+*t0U>3Bkcq7BZq5;W7?q@G&=G
%pVgH#W07KcEJ+=,B-h(aA`-+<aah6\0n`=udt2/fc=Z0hZkZsTDjNWDX%u%A)8uP//s[ZVAg&'qq&rYZqaG:jH%pPnMVQ`R7$`>8
%)4ODdAHrq/K_s-m=u5)n5'5^+R8XCg9=R1.TGZGHV1XJ<!aVr@<(L`a&/%u9o:Qh2JG;@Dj0t2OD`r(=#"tsgiZK[W>6RX!*L6:t
%7%ZAWq&6OocBRt?g8eRe;$Eohq@^3iT<kWa2t:MAX%AL:kjF:E$!Ce'Fmd3@,1b-dH1uZ=Zpt+JT?KI,L[AK2Y)2@A#%Q>CW"B1l
%MR^Oqp(=T<;O+S"g^Mf`Ci:*5R3)4O2'ccmKFrDP<eFdW`\WE!7b9(H%S#K1IF<'jkTIueGODlBUrEM^B.R$Rq*:,OorDWfFK)g;
%^(DL#N[qJr3aZ]2[:H'"$U4+kOr`#\VdM!(4(LS?KDsXD)-SqM,YU5a8T%mV>CA#2!Xf+tpBWM-Ad$L"bmlAt3Qq&9+`fY7d#odn
%Tj@ef_\3l$=oX:;r#Q_Gp_>7B7Ljf>6'7;F`=a8)-:Rt>Ar8SA^g"W0h-V!W!&jukD;MsfGMh/$FB;#K4N)u,VZ:uPp+0.m`6C-8
%J0a1fajf4gEP$)0XF#-XV[e6i>r3%_eOg?jL[8*5OjAm'1JK2!^CtI$)?mY""u;n*0-DJo!4LF7mmmn$,!8IhFo/;RWAK%g2ne"9
%4+8sm^)7*(K15n7I$JC3=)i2QPI<CH&u#'?N.N^r__3qUE2C>Ar'.5Vi/:n&X#%ApY=adN+5)_f[;6rm^f1otZXWS$+?[K!2sYGb
%(4a"7^M2'OJ./Ck7hg;rKO8D**^YU5XZS;[U7e5bg"a3M=cu%nE+_/2UfEjp1$OS^'t+;m\HG`U*'@aMpM!1KKD^J2k/o[BbCYI_
%J@"0m07mN%',K-F\V.b1-9(mMKUcY!pZ+Y=RF^4?O:F,-C<N)r5"n1`lMPY(NF2JBXms-jrkJHs^]4)$IfD2]pV6UOs6i2NrdXp.
%ce$_i=5?+(C#s&19F>`gQMUTk0DKV]pWn)^oLn'jrK9H>5Q:nj?i#B+06tBH9b-N^$C%aCj?W6)q)\7f>D@9KE?i,*;l!o%rmElU
%e)^OdoML<V!#>pBN2$WXGnp2(<O-Y[[hn7OlNl:0PO0#9M@7bPk&o/c:NMGl:hYUK";@8\*p41/o9ej%i\)dF/;`a)UbrH`k@B]@
%HC-P[,/g"%njGZ((%>MJR-u0QN=Il)9G.auKa\.XLk)uK0j>bL<7;;naU&)M%M0KUM$AD@2-#hC`UBR7kqXAV!f];Ubn2Dpa'b7u
%oBfraU_iQBkMi<SEOW"IjUeaaG=@)=KDM2+bRTLlk<V7ngD^,Bk6guS#I4B$oI9o/!457P(LiN0B*\?E5@I=gBTYh(kP^ZM6Bf>/
%)4aYL%6h)#EM1J_E"bimF5T7qXk:(##$dmoCiDPrquJdONQD,p:g?Op(9&P+H:WdN2[=_gK]B;+Adb7d\23SL`E6OIpP03^/-e"s
%H[n\e0/bNi[]2Wp1!K<Igdi$/Ae7ua+mIT>,Lbk>(EeQ','>u;?s(R&nYLXWks+^-Y[3Qm.2X<lWJi3eeM0`&AJDZ6_T1l%4.6HN
%*^HMBWN&8RJi&B'DKafc1E_kW"-E?5WW1(_8kn0r,P:X@U&Dr0Te;7F$pW*?f320hcN*HV&Ar9c<.!"C%fcgM)A=HqeLGM=1kdfp
%:p5tKUDMm^G)Z"Z)A#(nG75&$>XZGua*09fgQlW`E[+LV;ikjZ$0t&41hpuAO&ulpnSAiOKB!fWALq`j!gnuPg9_kg?uqX\?^Z#1
%SXn`F-NQI!5\C0gg9f:UY#3=Z5pN[0oS2K#LpW7UZa&1)+tsiJN_nuc-Y8Oh%k?A?0L!M\$dR*;A]Z5c>Sg["Tb"E%oNd\J?A$`]
%Ff1L=V]^UENJqh-oOY2(Xs\5>H=V:Jks%!M#Rr8*W)EaV9Eo<H#nrbI.`kIV4Y+d,J[\S85M=?s7%fN1asF?Y,grW37'J'<]\jif
%Wb;B*V/?c**Wg[MDh7!^#kA_'B?h6TO7_+!^_]9.]1=.66j(9HnY5]sN3rVl]hPmrTlu)HQJLFD2"cB]V8Q5N?)KP-Q.EZjM3:Md
%hkmrW,AMLKZdSkEe-H'Qf11gL&X3F4U2K5_+ej`3TCM"-(Zb4-1G#]+Q*gD].We:9L'M9h/M#)p=pNEh#B`=1QRpYq&2e-\m8ats
%rTlaB88YOsp_SCK!ZFC>B!G9\(0d"HT,L+IM-8Ab_N=nsnR+En1/T(g6lQsSj;P*%,er3<4sr3O/u$G>-,V9E-(EP&Ui]06<guI\
%eF$<'(%F1%<#S)eiYDCBam_5&]SlW7#,7VX;4E6Q-oP_`;@+mn%J`uc]U=ROmr<4Cg])P>L&\&Mrrg!NK2i8!U(dEPU'm4bl*Tnt
%m35-aG>`?m0B6eONt`aF1=(;G5#,jb[[ogke,\"%D+F5$!.m,Lc?U25r?&4l1N5*upYn\nK5-Gh'l',(Cs8mc9%a2^`Z?hp4kR#L
%"`G9K'gnY`ep5cgEj#A$PG:U=*nB8-a9Tk7D?R(s'G%Q!4\tBs"p>U0pN[D,0E$a.Sn3B(9*&E"cgdL5N*9%ZmS?694PI1G-BihW
%S0&+jZ=^[dS\Wf?_SZI76cW423V*Nk#e>Y%ag<Y(Mt'r;db1#$\2!CMbi-+_JM\^?9e`5c>LD\WT^UX!N)VND!D0QZ9-NB_M>eJj
%%sSl'G`cV^aa1H!R)&e=mBHu/fe`22PoTu0X-rt*R8s,TFTl_clq<3u')(9*<L!71ZeO[GX0&f8%/VRXQG3S3$J9-h0h9dsj\d1t
%gdZY)\"9Pj7faT7*=jn`e)&K!>>R#K^b^hS"Sj3U:i)]n[+IHg_aoGomP3'F3__6.$M@5n4ofQEMe,R3WX]J!BPUIn.9QMP'KV#m
%]rl(!gB+0)l4]5uSkI9hMGGN<YlnL)KiG)%f?Y?N\!?sb6Mo\O+h%9-)>45ndITkf0P0eWJ8>X#+@rSX0UN:AgSoM"X8_L96p](7
%]I,NKN_fBXC*Grp(/=)g.&aGbPL*enB@mt5Y:.$n.Y1^4o>$!-N1nTXG[/T'D*<P$/L-0ZV@s\r6gBNm_NegZ`Zrm:c.;*!"kB@#
%5J+&K_*:l^1aF$ImnXFqlEu</.&h8<BKhH7Kk]F(!9X0OTSq&QcVcn!)YIA#i_iCj.iN"?;?;.+FU":Fju.)0P$%&U1Z'ADJdUP#
%[_(T9WVa`aJ".lSg@9_sZa>6Y.>eGD%"`ik+"^II#?AeqVC;+7o^Zg9$u7iM4(SOoZ4!?V[.2*ET$[`i@1kd?>Z[.%e24:^(0`rc
%d5iBs)tSY`lm1C>Z,X'-pR*pu?s_6QG44aCO))W[Gbk*c]DaU&6R/$W@>X3tOmIF2QA15?*CAoQ2b`Nl8F>mWpK)[=:3"^TW"7L;
%#>SAMNfO?om]j.W+rT<l[O0[j@s"rc(56iYY:GAW3@Lg-S+R%t'J-A5&?+\8>=.eb#nLJpW2'^="rsR1dtgM],Ud[P6jG^=+"<f3
%2g_mZ_`3$bI/`n2c<,8[hhOCD\Zt8kr-[tJ;%E&.O>gq:N?W[=>J3mJDjB1+RdlC6I%t%UX5M<!jn#$-Gu3BFa?)ok)l)=IbMe5c
%f#;tOa;ZqsN@jbJ0nl5;4R\Y*Y9s6SKCDrX3h<&9_m(I>nC(p9!=[F+r`T*r9.?*d_5R'TrHki:=+ACLJ)g/">K\g`AI7<sAg\@3
%0t>`:j7D\@'OOID]LktY5W&H.`97*hU0rD.emA(W::>l#08(YX+RePJ>Q9k"^;9o'[SO'I-V7N>jCc3cQ==P?9`=o_iBATlFp0g3
%4CQtpX`R,4cAUJ0+'u\P/c:#FjiKZW0*R$[?f(_sh!`%lDV<Lnrr/b`rhu`a5C`L`EVij!ReZaU,(0!c2')'crJAtM?`W==`]O-E
%da:;>"oh9\kb"dBB/p"WY6#J:QM8A\=0GdP98`M`SG;!;_G=-+X,,\faYU_o'K&h#r@C+!Rb[2Oh^/`Tn@MSp%^;7#,+RR>[!n=(
%fq_m9pFh4gO^V.5IKVcu=P(m&E_Ck+n^=n*S'_^r*7seY:WL<#m@PZu>J*!hSmM3dYGLu[4[%d"qqm@hYFr5:DPM[0fcSi!?["P[
%e(J*VfjnC;f/;A%ptp.@&[qM,cMl8a]^!$prG;<&_4Z:o.U,YgW9dhnfOP[0T`/">[Zm`q8oGm'eYGs3NR8Q*(Dc_NoS&"t/A,iX
%V[)!Xo(.4@Ycsa,q1XMC/Alm!$`SUBFB<^urNkR=NVtDUBk4u?Se$0s^sgoM1NqY4p7GDrIkBmUS&YF@>M0D\%l/<X-!%HC_I&2d
%r)mI#5IZ"XG)Zggngga\6L5'4kUW^(MCbdJT7quR"Cq'?VX$n&ZVg]QI:8@)$ZE*Akm=h-rVRimD"?b5IUSHC=:o*9I-oAhnoXaV
%aU=mA`L6A8."<\Z^[11kcenbGoY0Sb^EO]u/X#ZPZc_H"4UuGm?WY;J93LA+4"C4M1c_dS+D`l0WXt04[7\/?fO5YZG5qX,ZPW/n
%(!*i:7[bl!1'=s93q0qm1UMaf)p\aEZuB7@,D#d7`\gIVb?5$!F=5#[p=p@M?Ot=>fRn'kiSX@aJd!SlKm4f%6Y=psM1f1HV!.eT
%L#c,5^.pbOG$f@a*i)=?N%,*Rq@=beX@XPhJ,oMd#S-8JlW&$n7-uXVlK^ajR3!aWMfT*`=5X`;6e[.p8J,VD4+<9kL.R*MIT6%C
%Ur#3\n4W5$!6#;\$sBKT_IEZ/E.2@QqBKVk>mP*tO]Jj5I"]H"Enjk1!cCT_ZSuD3g0aC0Z:+:A_%;[#'PMK@)m_:.4&VJJ"f8<j
%5c:smA<^+[+<sJ0_o'U*5n!qA<u4g="p%?#Sf]3aUo+S7^8J?,,(Va_^re!F9_JR_;_VB#aY1/R?<dZ#^rds@%Ak0ID)\d\G(@-]
%%3S^jE)]j="e!@Z'Vb*J]GQ0jpo$[X37,&`)U-\u!XhDLbe5St@77#HYF]?2O9iO&mW#sbW[6)t:IPGZraR&Z,c#2E/HSuAoG%Bs
%g8).mQdG!"aa`%O;]#Wh+9i92ag;;CJNfHc;+Pm2:E%_N[%(CcL(Al0B_8t@!sh@%Z>@0I,f#VT+<,W&^:I&V*ks0])r>Y\[``bH
%9qZe*\+go2V9k)5c;3:0VHK&W+@mBqIN;V"#+%9\W^G9XJZk@->:`_5N.;hTaU/M_<m3MkBlO4t,s&Hf'GZ).)+G[<j?UU4gsa7:
%#_Zg:6/S"M001L1+M8)kihuRg,$Wn4.W,BU/DYicW@)7f>h8Q$b,7n#,MJfKFuPC.>Y.#jCk6A5$'FN=$W2D:N.^>lq&5E,V9+nH
%Lg,G+Ue@YfBJJsSV5l"3-e8[,\]cLn0n@C=111AO,I=-2Ti^/t\N>>BmW%[#4?G;CE*R>4B.Vekie*FGqM',YGtVNa]u8RDq^>_V
%OIrqjBY$@RM[?4e#ngpl56:&Iq-gb,GOkT8QEF5hNlnReY0.`WC=U6bV7:UQ[,DeIWkBnUYM.hABOrH;/!.^Q>9AAq>u!6\E%CUn
%<BT:B8\Ja.pm]X-:A[S$?%F8>8R+/&%UaSof"FoScbtAFHg(thS0f@$^&^gN5m]G`d0l?bdJ-01V.ln3[0,nk0Fi.j:+3/O$iT4A
%.iN6#Cmdh>i#NG8(3lVq.^!K."Js%>lM)7#b3;IF(1mj/CVb&;-\=r[a"I5E6J#lWE_31CU>-HA+:b_F)MKhT3G;I2Y`G6IFEs29
%Fg*L'4XFj@nSsl6be.V`4Ck%_V]M=g3FF1G\l,Y\$lI\bj3bbr@486U42S1b,F)Jlb6$4ZWIiDR>\(tKi9"Kd$HsN/=6L1`JZ!0f
%rK+Iq6Bd"Npg<p:(g%PJh[W\$e.:f?ac<3<n52(q>89mp&+N:2k>G*<VYFkEUD.RQ_sNa*1Ck#q,G<QG8[Jd!Yn/"heKT+l?4[.'
%E)U?8(ZhU*(=PUW(=Wm^`i=M.ZCk$#Zfq;qA`A//kSp_sE2k16O$$00j]\qO;=ZLSgs)j&92]HO7I2apER<n9:YP(Kbet_jn6k$E
%&IX4Jf\Um]>cBQcl!+=SgIA89/fujd%=[#.Rl!aE2NIICA^3*A4::9UXn*G%[(V*/QCmS`>*@@@UcS0On-VAMBpHiNrB%OZ^n04e
%Gf7RKLMldlBP]3h`4WmDni5mf@"J;=;nfI7mQZ?+qosWg_]Q<9rEgWFn\8uiC&8YVP[DkVEuVTVnsW&U8Lp@O0eR#a`VMatqqXJS
%6OC1C^cmhKEK2Y\!\.`Za&*1ANFn'k[d>L$T9/O@j$2n,pXiJBdf9OK'_rAko&^.'ZN>7=.#+CD:X=6PC!_Ga83lpa@"Mo$J)0/"
%q`0^5dnYO\@*bYUYW(B^59,(NGMfZi=91u91DUBm_X+D4c[0*^>7;:Q=G_`#]iC/pDGklEqGql)/h7<!R/^uu73CDMpF&gqaQUPC
%:X<?Ae3pi)$iTQ+Z$"VPkpQ,;NG-NC-7K;TA-b[,n#GK&oW9)!QXrt)'l/.m\hps`,!@E7'*qd$QRu^.U#edU7D"8Hjh%7O21[hB
%6>@:k<"N?O-N_-CMT_JCRgpp:eulaH_YiQ.HbHJ$<jR.F-%Im$FtDPkiF!4Y*q)kGo5,D@Zm;JsjPUNE18,>V2pIZ1UHuHPgI_;&
%])shQ^#IZb>nhBhG=ZNFG'C#W.jH)r%d6"/6_/:s#6Vse;)g`Y6VUEih\5/7=;LAR7HZBE=OYH=F8],Z;,'`E]oBi$a6nK='IF:*
%oiS8%p[mp'cI4l2aL\AHX4e`gZ`WaNL$?8UqAaC=*^Q@9Ro>02"6kPg^@DZrpFiAt-45M(mpFo1$f[NIp]gBhYMXlEIp51qWS]_M
%/g7X\K36aW"tOgM^PEJK)6JSjp<1O1^I\jM*HM'3g34,F0un1\(/0W.?\rEj"3Ip#iMDoP%lJ/0^Lb#4W(%+:WR]Y`Kr8a5+leZ]
%,<+SHB.5di7E/;SE<C"&HHn/coKm`9P;dn&5CLBBYJntRH[E?]:P,SZ)QMt%\g<uUo'b2FV1/?kLH]#B@e?65o$3&?\so_FR[8u_
%D,;tj2>(3'iknpQL:@2%R]QA*U"u$]2K("#rUO+arpd>>T,aEWTC;=KqmVU'l99E5K+<E$G'ue6rK9I/Xs"hSNLJ^14dnV8LG/\e
%_/"`ls5WDMhr6<(c^3MfSU5iJC;1dsItL7.\$+rjlEdof?hgfbCF,]\rG0In'<S1`r87%GrT39,%hqjfS-ZNhd!rOOHH6dooU\PV
%\+32OVd"QKhL30=n4E62Lo9jeMN34:SHcpZ(OZ8^LW*r?'DBYSD@o./n&5V8c54p\;aWd1ioe$/^@1Uj]6F8R-c-,1n,X4SZP,MF
%@ffquD5la4nQGM"4tq=?#:r*gl7.U9qC*b``HE,@1W*=B,S:mC!jDr,\P>'YE>oTCm?-;<I*pE_ZiGZEm>*]LpRZlh.=Q`A."#"2
%='t]8+pTl*@r,G5."1j<TI2CU!Nc7(^"L-sqU[Vd22tA-$YFD"XhP]pfP9j1-1FP+Ejk]ahHpJjrpXC>hgL+I5I_L.h&lX\%hAuP
%,MqT4!^c653h(4X6_s/:`(P`hiDsj**pP\rd8jGX#(J!#P4r5(k3tnPf3X'I/mapRAC'9(?]3#_d!"pUf/NMWpr,tAfk'(-ZG/9/
%bRA1bar&2V?+3V>YHl@0BVQO)=-Pb`[ugT5ZHA=B=""7p>:2O_7Hkaj,$19Y\+oi%@^Re,T'p%Bj9st62u0>a^1jdc2=1PtE;jUU
%;KU=_3opMd@6bS-'l_V0OP6&VcbFVqA[WXamBue:'#.IS%GRIDd%BR%pVee(nkFO\;dY#il3d[DT>7i6.Fm%RhrX4.6[cePenLrV
%>(&Pj?`Pgu2-tLrre6qi?i9IAhpg7:p%>ek^+)hqB)?9dP],.)^K=#kNRS%qPcnZr%.`XM)@_-m%e8$HiU_OeDNerZ)IW-qNWAT4
%9BfJ2B1/C?!DY=fNt!/UI[nZl[g6jFr.bapGkU\(hS&(M\hehZDmI,<I<OqS4+)Km#_RKgT=qZb'dut)IHs2fp>/$GpX:_.s!"E:
%QhT1C*r`p(S`oo%[!B:DFG<!dAD/=3AO&r/gNE\'2^b96D*W;=9*4t.#L=2cXs87GVb10K1)TaSeHV,q=q`7ok7l;2[O#=[a`]nc
%/R;uXQR=h36:]@@PH4aX>EeSQ0[+]4gcP1Qk30:0<@t<.iW3qe;R7K=GIAWi7n-jOlK&^S"Qa?lmH"C<rs7BB'ZEdc2)WF'^Li%(
%4'+[i6ta+P+E!no3]E8t!NlcjWqcB?aQ=QH+DEJ_!8<bm)4f1Xdn.mU3a>[;=plbYEuEATCWd@0AcU=p8ljt,Co4/1i;`g86%8W#
%0h!<]T<`!W#3cdiL&fgSH>+0/"<8I:ZWCLWWKt@%AmZIGd<T=h-X<WRU'WYD9FI7gjO'gq-,;u[ck\L7fS/uBAX$u.df\ik$F+9.
%I<6EiQ?^VU21%?@Z!Ub\[o5q/`C0t>%-dLm%?'@.OiB^M]:Y^g*i>-)NYVqK4*cZ0YTMFtG)ET:Fj7I%dX/DOeQ1K-#%k-"&IU.H
%eYEBI/@$d;R]RQEVS%jm+YHaL8I&#@$WUkeEAsn'OGtc*U@rc(9>_LSE#R,gbC)W?'`,qG<V@4RO`4@C[c"sA[\tm:.AE)"8l/;>
%`.`(@Y3eD!Dl45DZEtdZKfk_3E+k7Fh.Tk=8"<fM2@rPP6-a5Q+sdV2[ZK#W<=at"G4-ZQG"UH1p&6Bt!a>jqH&NQF:L7A%grC_M
%BT96-2G7=!lSQ*,10Eeqq-@Ki`T8?@Y:-Qu^*^3[OujSEKd2EG$pqE$o5cbhQ98K0Pq@mVPndA.[<7-A5hQ0A=8"9^4WuG$:'(St
%Nl4H*aYN"(FDFB`Yp1lf`Kng1jO=d<rJj\iE*atFRdo&FGa-\0ang`kA',-9;2M1@=a`q/>k;1RX`UM1lVA1sP'1,mQ*X]=aAAe\
%=B76-kZ_Wu_ndSbUEC?al9S35P4+oGRDuQnLoonTB^lWbkYu&.);O7%062hij*5+C[g#'s-M'^C1KhR5;L(.B]s`liB1I6pjUr$j
%/a!Osn1@C7UfG>Is'2M@/Sc,`E2`E3mb9MH>i!G9Jq2a:@8Ef-d3HP5lubiuXp9#lU\rBm:J67V6ES^hq,WZV\oau:O9rY_AOdRY
%9u.+AUMQu&ZB1TF,FsTsRYd2:Oqah5j8M1^De/C3ig*l+XB^4ah3ZI,<"l!6l1koK<noB)%pLO1:j2`\a\R(oeN$Xu5u06\]6"DI
%P#8djg8`nmb#6qZWSR:b\o9'&C%n-k/)mH/3l)I#;hc3@]p#P%i\77nhqsjs]r0Z2-ZQ[i05&\624i=WNn!tA%hW$A7hLpMN=,J5
%VKRoY$e[Smj`\U[orK]A&EHU-W?$t(fZnpXKk`3"cmk!F6/q0p6=pUs/Sc1_kA!'N8B/qX>!;j&)'KYj-9BGiK)k0<m=-IQ/mD;T
%m5^s,pGssFS!Z@LoT4&%\NR)OiHa;G`E!_DTBt^W,4h_',&nE7)U8#%ZV=pC^ZsGaB(f7/2i_<^@POkf3(W`53o<_;n/81FgoUTB
%9MkiA`dTYb$.5#c(ZccJe5U4smL8u0dp,P3=aFt`Rc8I:Fp$1pl4auUn1K(%G2%B_^bSOjEOL<pXYRrmBq"X,R]Z-Ya=9ZU$O?*b
%T_t^#P(b587G:OU)*Lu4Lb=Q\(%$-`Q5sF=&Idum@s'G>`n\?[MB@u&I#Ef_*nN_sYNfVuQ[Z*?j8Nbt0bgounkf]p)Rh:gZcD#9
%d9OccBp\Y(ihq(SC7DPn#)'^#cF8q!M<U6AN@('g0=52=WG7<oDXMri*PLP&X\..)Q;VrAf:ir@4c([I3lc!YT25411f@:Cm1&Ae
%>P=1Wi^n&!2p7l"%^kuBdjgWg20ROLf8;`E@3Go#%4I/s+GGpiI:)E=6KOl@QU4,B$AJXObT=Q[?.e#nQ-^I+p&;>K[d'fbH0CV:
%<kd)Z>D>-[jfiYsg7[*2@#*[2pjoiaR6jDF'ut1"8<qH,s/X3/qX$3AkikNMUFUrX\^^S^FIV^W[6h;-1\bqdRCUo<_Q'L6V/+O)
%KUrb'D^*r5,87e>JD.@dCeK.L;V;5T`bLOBQ8^tcdL)8McUS32Xa9d$\V&3,=seH`RkOJpg4QgKT(Tb:,\ODo1>&/D(pps.1.rg>
%h\7BF0eI3Lp&TB^(sYm-N"f%1rZreAWRW$@d\?(O0#r*-/S6k;V<P(Ik!GauG(c&K,J,Yof\u5!-jnu1q-l&/&)j;"p$bMG\ug6_
%H$]nODNp8l5C>LbC>#J;[6*!B37D!mL%:+I@sT)>kV4Y8>1tC=_P+!<V/bSYfj=&PYO;pJ+Q-OA,NbJPV&K<QF5q\g[LfW][;a6h
%&k7WTG];r2"aqs^-/*Vt;".3d)eaM>VR3RtK,=802T.T;I3#4:2Uf,[^-?mr[$\HuJh54'Pcll7Q4Q*#BjBb6Qc=L:OH"sse'&gM
%r+5oq*,?[]d-@OSJEcDN%P8H89(AEHC[=QZ#b&rc?E#tI(RjDcD>PPZfAP;)<A!rg:0&4<:SsGsX$OMOI1d]p)Y9=@Qb*4I:Uc[W
%5*n9BpMB9RHc8!=J+4CRR7rTSlm92(>\(5@]@,@@IGO`"[Nf>]`CG%dfooQO:^;+uF0()/.b'-b8*'i9D3<UgCG-6g(NIc=.<b.H
%=Mm7Jl36g'CLPfK\t;Y]8B7LXQ`%LqjjWW_7]D0DY`@M1/q4XT,@I%6Wh=<*YEhQ*=q#bp!&u\5Ya`V@grENhN`q3qijc.n`rr6f
%FG]7qDH/o]WR9epTEH8%7?cqVTQL^\as&t6ZI9EWe(F`C(-S1Bb;5[fKN[C=qaf-HXqX(?#q=J#H$XXgQK8]ZN&B.U`/8lR,[7+H
%LNh=l>7,sqP4ddsVF8bT?GjaO=BM:9aY6lOMMnso0Z?7q",6=L70R8OM&r1Pob;Yj_m0i??Q((]##0Pp:k?";Oa>_<`$m@/f6TFg
%f=9HkR3F$C12%!^Sq7@@SO^PO]r6+W.iJsJg\uYIEjLW4RKt2DLJntDYE>,lOSS-&@EHNYDm/.K3)0f$$[gP(pNeoq$k]Dee:Sla
%Yd.:lB6l.*[b(>p?>_-Z_5^g*0[m0Cp(PhqA28t2LGRW.edU$9Bu_l0qRa8#-(H'YcgWi#/9nap87bnF`;SD8ced0>"'uI#&DZgt
%eoD9Cm.RLoTrKeLF\gEJ6P7_%E&eStDiHF:W9Y;n&rlc0#o$_h_i-dFE%'@2OE%t?g27kjQNt2;mBg(m-WFL2[NEgW?2+J^KQm.]
%96fTBnICsEqZI(kec"7kq!I>=AcNuDKC'\6$cF/n^PA1NP/73^OWl)jUZ_Dh:D27=KQ<H%nI8DBFQ-e1l)Q2[$$'h3(T;9?<OgB8
%*4+Lc4sg[X@@C]1f6hI=Nbhn+nFUhh4d6Y^.+akH)bW?B@e>O^&q4Ngft74<4&WoMXCDc$>[(6iOm+T;Y?sWA.i^)MjEAQNp;S*8
%l$EY-gqjcmVg5(ZL7CCIL$cfGXqgS?mf&_cEUS*lL/\gX0_N@-n$.sp&'**>Z:F@#(Hh$6^f9kW*6<e\[deFGekkH0[jIkp/$3Y2
%PaM$DcrEosd0Z:P0.ktCpK$$Qj_Q,qn9-[H"Ei6YOsBf-b>Vcf[1f-u/Yu<+4Ye:aqeEm2]f&tZSbuP.LR<aTnC_-9fI%Ja;R^KC
%<Y/E:l0q#>[<Fe`N^j&ae,6&sQZX^bV7O@@ks92:#5<k,I*/T,a=:6FTtVb]&$MB4KWT30/T'",Ad<[4/@fT<#ArX;#0"fXTmj-k
%VTC;)=I_:XkCpo@4V!MP+_q7':n2!UK4'0nCc$O:IK(>nr+XhbDJiCClChuT9#r=f7pED:cd?Z:-8BEW/ZudU?G0I0'-\$)+_:hW
%^ZX#J%fYj%Ca\UE4U^7HXf,XZB_'[OYD/V?#dI*iDM\;[l+GI[6rjN$&X1(.S91Tl/I)f<$-pg4+u1184C((Gr1RF!Z5&N-H]2VI
%[qC>/A?^[B%Ft;Ga16%*TD5eh-J%.;U+(*n/^e'gG$i/g0HY<!1<DFr7he*E3R,#-K#;9?:IblT$8!it%:jOImX\jCp'_Q%F*!&F
%#5QgXRGjS+\ZF'0hct'=Vk'_!<nT6CC?p.klZ2QV'An+^q&lc$h)BeM4Mbk/C7)*^9X6n-rRF+#>YJeFX:Sa@XnZV>R:dmF`UZjV
%kXM[jCXr=*gH#1's4QgFlc8KR>mq/k@f3T(V:&JN\,4k2ETYbsMWTu!-MXt5#[-5aOB!.f@Sbl!W3(BCNZLSZR?paYO0ThF;-,rl
%fkh_l:_JC)Wjirs\9)g_dO;3F,"BTcZ6cB061&k8>;g_GnpNNTWta!aDGk#[['h'M3GHCtN#=A!TQk9$E>L^<19DU;-SV[(df3KR
%RCB9=#_X`L_F\OXMm5>nYqF`2DcmQ[UtYls[Lbm%XDd]KXaA2%do007hB2^oF?#SrX!s[aD$R8GX?OtBk@f@Ec5tXj/VtW_Y'Rb6
%XUCW*Tc`O:m&>-B]/l;"ZeF*9R4E<F11r%Ne\sud03uo]h2R@9hGZW[:*"^>YtF5s>tR<:1^<dJE`rVpY#"<W'feaJVX\m@VG7p\
%7m/5dRtPk74`9c\pu,+Bes#X*Q`C5f7jJ&VJqb5YoK2Y7<Gn3V1:Z_/LVjF/3dt;p2=qjR9lIoZg@Sgff3;cZ&8+1%fr19\*7!$s
%]1^clZH+.;MheM'-ODJ7Y[PLmS$lG%=ABc#m,en$!Jfa)rFqJAWm\fd9_4Ni796X!e.Gd-8%'/Z=m^m2VebnP1-XF5Zi+kc/k"'I
%ega]T_C\)Al6l6_(i@4u+p'RA8Znkt:.K)2>@$:`dXHDq$4:+mFjf5ODF%fS)CnoZ8oj!bRqu/#1\8=c5K!QX,1DlS?M^[A3Ot0U
%6C+O3>eGZ/kF-79;*u7Q(1_R5o?1oSkNWh.h//&9TfW%4"B4C1Tk57+'IUS4@TbJ@86)upNGhO(i+s5'h%c9?,Dp#Q+]RF^q@#l+
%rQCLHUO$:]2al94QeuSH;\q?$TdKbGa:-l4/niQ3)8oub[[<r1!aWkQ8OV17?d55dZW2$]H_+0H592XUV:'8SaGFQ^.j%t1o97M,
%`sF<[4''L.ee7Ki,Ga]XpC]2.3%8cUi*C<=F[_>(A$`XH0Vd\BO'29b"[<NgYTCL_S\Y&G"2tU"R'Ni,;onNs/*?3`l'CG/5qg0*
%NqcfJFDqTKAH#Z^3&,8iK)mB@qK->^Q?#k;K@`pXq@,+qk#EY*I`GAK`qlT[fR#dFKH:iW_Lq"HBktHh=E33hO!?/a.>X@Qb*kck
%'_a2STB3L^%,?uajU8a]?\ktC!F0G6kinr!l5[&"*m\Gmq?r[K"r6-CV7o'U)pk=*5!F2b?Op1MA@UX.I3WDL"sh+9`cM";eFYaM
%lt*G@q&has1cg]@="rJ]Y3k-tlA2j9W$LM@L0TNtACnL'[l!Feicm9Ol]?2b`:bkg(!V()9UqB/2@:94Rl^sjg9MU;2:t[^$!Gjh
%1%ANZG)Z',>:(:s9pO&Sgn>9>12:E+Or/n'0>TNYDI\'G/i*jJcWlG%"QAju7$^L"kQsP0E>bGR$*iX/"tg,'CqB<JYIP0sD)n68
%^bR-hS)4=.[d[@:NP//g7[1?%O2N,+Jo0!"LhfEL$sD/E-bP]SR<46\e-f/7c&%,`@X)b58knK77Hi">Hmd@29_2#C0/J&[o6'&&
%ZY@j6a#fpjK^dsR\j.g1D2e5a9$,#2/`_#s\r]'rrbXfJGpW`3J8A7djO30J\pufG=5NDkPFCYIgFFJ86s"[iB3mu&3(O$0qSCaI
%HF,bbBd*^QZP<(g<of*qPf8GL".>)`%oVu/QrnetiX6l@P!cgVF2t*1"(#s.IX\c0=Qa]qYRRXpO#)P%'OuL',@jH=AYS_.Qh-'g
%-pFhpOVmoiWnhUb=N5DM^b2r,;rl4<X`,o*R.QI]QtRX?<$ZAUl,[YgAP9ZWVrLJ:o*K.W_.(ufk&MOsj:qHI*J$HMSNdjpGq/TU
%,E/Q=Zu-,b'Jd#MaQflh&8s_p9fjHMGc(_f_SB/54Th.(.2NVQ:2h0BR<7`8#91Im;7&:Y6)8>cUke<:0=_hW@SdNZ%fnA*.?77.
%aOgoQNK>HcF4o!rd@3puk7sBp:qkruB>.-hT*S\Lc.$)j_\A-(H\>T:M1]BR@YF9kEi>q[<$o]/X0&-'dqreChC%hjL*RkLLfQOr
%.)KP*KuTL''=:o+npEE-Slm9H9jCtWNG)aj/'qb2pGK6#@?g<6gV#Qn/G)GB:E\-/b0n;dZ:.eqfuU0`o*?_2"am\Q,E64@U3.Sb
%n:ZG._!'PAIu^=J@Te\S+l1Mk13)$Qeb9Fnj(^G3>q[Gu#:u#**(cL>qg(k4p)Yrt)CR+TM_c4X_`/*Po[oaAcM)KJaZ.3%H^q@?
%0#A>?#56nC5G)Ha57(jUFpaZ)$@"NQbsOGD8PcA*4+t9O&Tm6Q\JQbujmmif]OA93WZL#$Aq`24>q;nn2pM\0!!uoD]c0'3o]M1(
%qXA%2RqS@SEkd!/1sE69S.+*2M&J%!Rp4GfU`#Ld3%bLtT6/c$Ju#=oJ^Fcg99AOSA%N@LSU'!h:;.,5@SG'OK;Y)\ec)k<W5^f`
%f5irClMNL*,\.WjJPQKZ*Hks\(@ekRgJ<=@ESE!1YJb:9Fp"^RZRNn2bIQX?VOrG>I-#GB?5CP0A6Y,XOA"N!PIh(2U'`?Xh&D-b
%hgA[`=(8IOn^Bd"OtFS7]5AM=$"_k,D,6K_Maoa-Y@QI#W2uj2Z3n\A^3m-L(=e-tX&-6t(tp_VX835A#UEW_$qO]NqXB%V];5^V
%BDcf6r?9oZmlE46CWNqsZ(<S?3e`C%3IYPZerV`i4cV1G5@kRmjg_sWrNX?&%q9^O74:u9k8E;LH%J]!=X@D#`JZEF&$a-REP3X]
%$s=bFo_0`gB4I2$W>T&Se+F3Fas8_t_5GHPob=2Ri-ThPM#,00\#B;8W;b[f<8VRO%OT/*@K\6)OlD=]osXmIKS,GDH<U`AS=^uq
%q:(lsm4&0n;&Nt]O*/Y&WCo%%BQFU?39(Kj7e!`k(/<n7K=!@KqJZ$p<*ef,SRO+X&$aHO<+=W]ehA>C3UbT[cu[S;'\Zh5Q!``/
%'6.6U.*tig`!`Z_,BiEB8Lp-oBrln61%=8T/NX:t3UmEA2SH(X$>&AAnIUCF@Y@N#d]"N0[IeZpI@pM-K70B[poYATifrbcjh;!#
%`Yti^oc=94m<gs'_5Mt,p(iKlNd4."VWccQOi";_'TR1(?fu"QakEhF=)g[9r(X!Ve)uk1@0_`u,uSCf%<n\_)^kQ*ie07$0*<Tj
%n^EWdJWfGd1d\W[:H?;`NqM@K`]*TiKk*l^hmG+S\G\,.\uk_4D/50[UK1:&D4mK@#s'ro:'25d.n\G_f)cQ/)G`>hEP<NKd-3)j
%lsqcU;[4!S3?f+1Yi/d@hEHhY;T7R&V/TYH=70e0WtdZE"fsSn&c7d0^&kI,c-snsZ(J3V2)O1_fKVNElmJ5?Nosc]_qs"m4,\8Y
%mlBa,NpBe?li;ADQ1,I-eaGh\H5t7BQQ($k/+XW61t8ZVcV#))N+h.(;9j6:cWiq"VaB^I"f3e],/DY1<8tAj''h:QLIHG'd9LlN
%n2bt)':-sfb$#d@HZPd594\DM-B_mETPj)7.)B1S$.$MKaGXloaQe)]KY@j_fmF;>VJMYXe=Srole$T!R84'/7J'C!:qVnc@md]n
%`#:hqbeUT"!I0E5?a9r*c=bebo-MZtSlA#oK#5*Y<W]Du<07,TaRD\EB7r^.7>?/8V^q%LJ.I]-k]A`V7UnA/4MgDfKHf+$bG4E@
%M#GeZ*qq2@U%>"Q-*W/m.Km0'RbisC]BcoMZ_B3S'W<`IFfq7>%Fl+8a3R,WT2'2XO8("KJ$*.9TuMWOD'=7TRt5&*H_on5@\+3Y
%gCNW@='a3pctMapW-j)rM&^X&L\ZHU,<tM*dDM3_?W"7GF&gHrH>S5PIFJaZfclF`+tpj"#pt+!r6u!oe:,G@Oh!FKdW-e,MM\@.
%bF)<26gIMk3GA+U\>#_IZ_H+8Mo\mYkAFq?Z5i'jPZjST^cNAqI[Xg^nDI70fHtFijtR(RE0LF+Ct0sXP"khG/L(PiYt8d7>IRGc
%EYmVhg9lIFe/EY[UY&>4O*",=_mkJa3;Z+BLea1r9'L4UZCl"bQE=h4CRt2bmH(J/g!MH2PlPVUm\J8ZJLu/C_tb$[m',Ol?>mE.
%g#!>HoO&7(@nQ6-6q.QK&#U[+Q'Ui!!-Y(VAK,Jb");b08^_7$,3R?7kPJ4EXjctp46,D90EAQ*,?EJ)+Ki"egmsDp)TO?WfL*?D
%KLp/t@::#r,mc?/qF!5dSjrr:7#Wgj(JP&5h681Cmo,'fVl#l,Po$aYDRT2\B@9Hf6"#dCg_@o97,H*7J\EZd*D/W2\f9^dAQ1o.
%m2lD/R=;Wj\M>W\m7Kl'<kZrn-5VLZpd#rm_BZ(ijFq;BRQtJ,+hiZJ-Qg]m#aQIJ-D=%^6T^do!R;paKJusfX0pQ&+*)HdF>PGZ
%asqbrd6Q4UQGe:Fn@<)Ei8Gf]O)5FN*Ah;p(8:NgkXBmE4`Q_@1$V1(<#]ZO=Um67ZWj(S:mSe6r@(aP<\XVCZ@&ln[5s82iC3";
%gmJFP'WX91MG6YdaFa7lUYP9#rV"-):jr<);/5uKNN_`ur@;j5m%[)iO>8At4.TH]_Q+H&(SX?bTc#&$eV-aC;StPd'>i(2A0Uo7
%(8H^OS<GP*1cWLeodRhNKnOMnNI2ggj.r$pAMqed-Z?XcS4VBRm4;*YW6*_e@b8Kkdt896L"nfg!7_H!#Fr+0`7%:cXEoiF]olO]
%FPON]/"H,e1_pgP2,;g2g;t?=VG;@.mC<,;1]-]7+m4'4LUPK\O;6Kkq6^m-"j:ql(e:.&ZT+EXp'eKA:tNspGFZWRp>i#TT`H6E
%,&g1DcC8L%3EaQ#;CHLdg.*iQ"diBHZXY_MGc;lEdG+Enh6/l23`;<@>XVh$=;mnrXQ1*3#^eJf"piG",UTFknBWJcSM!Vo<iA[<
%k)gM\7#(@m9eGE'F_e(3S3EJLK)#iS&KZh!@O20CHp*Ve2_Y$n%`GP^,K#">/<(K57=@7j?k7kWK3alJ1'2/hE>Y!<03c18RfkI.
%V`HXX&g].8rh3]C8IuVPUq_!gYB7W8/DjFpo`)?.Ws,k`oe,_7nNp;=Q"VTM(kV[@WWO+)NFYF>EYPI[Qtp98=eS1L8%E3-RB!0n
%j%]\Ycl2D6<25:_]TF`o-G)t:j"[E[Y"npj:bB=[#:V^rNYj#ZgaqBqVO7TmK6"$+>3]tAJ;\D76NCO8.'d"1)>>^\-7V)!fuY#`
%F52pj&L4@+1WEA+$*4sbmheL:WY]1lSYKF48[)o:<[Dh^d&`$f2+0<3.c7=q^J(I1jOM-Tl_$R.p#FG<=jRJq8.VdNl4NOY,@-%Y
%-8uY](,^+)8>eudnK.H<a(OgP<D^SV6,eCHb;^u)Ke'ePgp.mfM;M3%=")():6IuoGgD6&F^STkC0#UPhcV97B8O_sgql=Z<_iM\
%89\GaB+6OWWi*B(*fq"-qdN+J6&\g]5^ndUD=7ngY<0QEM3=_>D3)`>FU28GAl(.@InjYp.#'8N@]l%)S$<]0FlE7hQq*hBif&Kj
%M262YQIRH]495FtSd\[:P"*/Ah%iZ/VssJe:XOI_RW1h"cSJ=S<BMl,mrCXkG71.i8Xf(c6gt4]c,s>#dD8XfnQM'!NG!\d6UUqt
%]4`3i%c"'&4V4'4&cQt/IdN^#/"J0.P/NS&(JX4c.Z?]n&X-=;h8r2!7CB6c4g5d6D0+ils&sh7q0,lq.^nNQ\l!4FC2@D*=OD>t
%BZW24)G#7="K#Vu"gUuuWJ#)aH'\H\4m*^EN[#1p.Ap$:57E8"PJc3EH$PG.&AD`R:>$*<6Xr=Ynku^o1L'%&H+6t-kH4IMJb<9-
%<>(f]eB?#=_G?Ak0@HD6".O4!rE!>H*siVV*>[fSnMrUEhW7J=gEdn%l!GTj9;?qIC,b]p(=eKIc(3RJYfm?<W<&VZOdj0@08jXA
%m0E4E?lZV6)YnJ-\&,tSNZMf[_e30mEL=%DNUZfA'g='pg7NPjKG[6-D8gdER,-c\lT36,aFq_O(s(k,I9Lb)-Ns-c4"5_2=X/q2
%b^N<PJn9U=X&!(4<mYfrqJ$/]OSIM212:r32"AsCS/$.+iVSoCmDBEO-BOAOBV%V;FY[>j7U_89::D1b7eRr.K)i9E&b!N+?>`6W
%3L=hl#9b=m5X']P66jB)@FSuT\.\uOCb+9%;?d?F=i6u8Vf[HfI^SW':*2k;?JKCp`A1'7KL0n!)HJ"Bo)eekJ@6<9\Cq8SPR%q&
%gtGCaDkU8@GB%t0c^POH_Q_7?P`Mt"lH15Y+=H'LotR_m!L)>OGYF%aF>#tQ0^f0e'oh)o<kF%L^!MB-4D]\F(!&+roXTc:>j3ZJ
%.'XO5CR,@lm8XY_6Vsia0@IqllCKr<oZr#/aE$_A:Ns=FJ-T2C:3s(8IMaX!C!4#:pSc"9WlXbOp_7uYh$l(S7J,]T(F`#*Fs*Uk
%@rJ10l8lkDb?-1Q1P4Mg(`=i">Id/d5/^4eeo5no,R<;P.mVHX7.bKRmJTeaJMPTaOejD_]]c]3-)&1ZcHB"q&5e.hm@^eNKe9D$
%W?;YbIDhgSqE1g04/PZ>k:u;4M?ZXF3T&=<&u.E:*N-f]Ys^:r!./Zo?;GPbaj3Qf;cj_r8Cgbs1L2KM%^u0a[Z&+FCE_jRT#=0W
%$5a[odak6=fF"GXeQ`mCF`OKY!1=(&cFZN%r3UXPiuj_b7snskr;)jiT-IEZ4W^?M4cl.mL1*A.:%ml8#;VuNM56atR^P?X;j?'1
%6M7JAriZ^"=3Sa5"6Y(_\c5]Ns/kA]0>$:/QNM=aSbhH*qd^;6(&-5^pT<HSiMS3oj5n7Gc4H>FC'OiT>pZdn&g"F>dP!u=l4\[b
%&=a;"`1@$@RRQKdl;:mhZm>^P;b_LU2#n<Q-%qTrR@"!0YusiZ!6N67.[E>L2),hYj@HTRb;oa&-:":/8LlWteA)2dj][H.Zd!q8
%.i/7f#I%Ej3hbjK+)#Q':5b1Zn;i,O&cYsNr8Zmk^/[f*<2K5bF*V%W>CJ9#!`e["],Ku6$cl%3m0_uV!e"NY@I#a(Jb))P[3An*
%V'+5M1pQe6&'I))]fPF]*3H%>o.2CQ$ETF2B=[,QkB'mcp@,6/A6ab;j)unRXPc*DDh*AD]br.<9KT+)JXU.Ujof?2FhBsf@]t_5
%V%&2@].)kNcI<f#dZtRIe>Ur;6^_[j3t=o:4$\XZd_YZn2^b/)+s0dNW61GaT`B,3SlM)/`>rNtg,&*&e:=Ic=";6Dc-`"H+(G3p
%B(_U*V%8CX?TspD#qGS\'%Ke@lI.eHPHGdL#P!,B]103jT)cN5&^C2=c\U0g>OOm!PWsbED.cel2#EmLnJXTn#Iib;1l7$.j4mHO
%!"NcV?N@RqkIdC)c4)FVYr(AeEE`isrlPOCUc=Mm*p9Hmh1oWid_<QNV)C0V,9&[.GhFScC5CqClcC.`&f%O*8d#<?nnRq(2)*Ha
%^_q;$+o%80V$]rZe8`T@39,dX_e%$Bkt5L%^`:9C&(*aS=B%kcMq)d\:W'mfXI#.^VJ?krjMLl.05n\o\Aa\&j:fKDot+f0!KF0Z
%')4F?B@f6X*.WmsW)?I'&(q_N1kTo]CjneNM'[E?N2fm$5@*=3<3?DQfOubf?;'WW\M7ZjH?kjLi<Dl;PI,3;e_fhg?N@!HihK$`
%Ycm<%J]k[F1]2&G9+sm32`#Q.E%F60H8dU8mmS0Z)$lr3et/Fj\BAH64.;[:'%i2g;0$sh!KD']eo1iZH3EOXVFaoHWJH'!?bFlL
%FQP=&ol,.kk"Vc,RM4Z<#.Q8IV8C]Kc,uq4B2BX,mYF"_QNjrOA?>3oC&H\2boT]W0+X9mp0>=XQuoUQ7`8K+3]L?MA#F`];/7pB
%I3+\o6!IW?$5BoS"GEV9pW*=%r@rTP%.4)i^V;IGk7>=PoXOlfj2VTm1kPT/muJWAptASmIseoN*seqGk26-rTDjA=p!d46ioD$p
%!B<\]p?,f&kL(AYm_BT?qQB9cN;jP!pkZ&OpLM,FE;Q@f,=r?IX[pcp0>*n!8G7TI27B>%+.'oLY>,'t-t1G"24\N4+k)STg6tus
%cTb,>50m&2V4mM&I.aFA`u@'J0]:WjNUr`?^?ueI%"Je]p%QJ^bFcb?6kpr:kolFpj(q:jqu#kXZH+u?kH$?9o[=V/q/jf(`r1[b
%]h*\C$uu6$k%NZ16aO^3ps;.6QTd0'%)I_]lLdUtlXg@@]p,'Y6dN3/P$j5_HU%eQoB#d)\XlQ[\!-LFT6!*5EI]R7OsKf0DbhR>
%S1T'&3\e2n90i#q=H;W8kU"XX7_^D")%eSYM-WJ,Rmj\"-V8)>m&8e2;$1_g#!NDO,?4h73\j/tLdVDKN6s_MdC]!h$<>=3$p&c,
%nr3kq<FSdFZt2LrMuB&`H+lAki4>a;FYQ!;;pYb%*\f&Er2#pdD8WB:!TNcq`[JE\2]OV.78HQc--\B`5\c<Xg"00(@7K>b5m>HF
%PREhr*X>d%jVR)3BD5LR&r''EfAu7ZB%[MaG69@:eTIW%ig.]h)^9cF9%6XOA(=N9J>\iJCTf>qT@rNb;N&p2qmd1m0Y$EH:,Ba4
%A<A^L6a!piq.H$!IaSkGJ@f2+Ls)V$\o$4c?FLCULWG$?O>SQjU5&,O[V%\j_a*rfFJ2>-,"6WnHa=co&bj*WQsu2W`(UXbgaVkJ
%OsP]`,T3%Y>1l[&Tmj.)$kA->n"16;EC5h!3W'j[R(SY@]<8f1nbV3LI[,2s2p(]-ZBBOWr]"+R]]a.BP(%(0r]9jI%cbXF3+#6;
%ga'XnYJbbdO"cli%*E4A-3&?:mm@F.`6nkoQYC]3\C3_LJ0#a,geo*c%\9eCP7.&Vd%iCbN?Uj";Cj:89b&L-G!/.Jn';T1isp2O
%/g9NaK<g:;RfEY?f<4]7*DWpr"*gQrpIJRU67;8F()^2P<ipROg%<cpgdp*_.-`UkVMm>RauqRfXg()pN?YSc]Dh8KV+OT0e@FeZ
%CnJ25]6"7g"aX&3QQ00A['"e.m_8,J!U3RD?&GMo.1._DO&kV]\RN*8c/bJKZI[%lMqu#ii:=E@\0<>JNlgkVQ:,'N"H.ZNEJJkF
%,A+:p@&mFD_f0@.fYR/?S-N[m%?KM<YCSs,8%B))gEGUbpQDgClacr"Gmcu&rXs";j8s%S+7CcmL[R>6>*0@P]>7tJ>M_FM55bX)
%#!J,+!K4GuX_Ymj6o8fJ`EVtfUgK_KPHa]h2CLq&!2@?!DU.9cUH-b+cNM:8l/*VEX3EFF(=>4`jebQICttXpKHaXP)$mJd%ns"*
%=!M6DYbKOKKP?Hq\&kIle3.9m4M%;PKDi&iajgX7cITJM?+X[M\+I"f(j"U7nja+ZK(=5-=$NV%/?(TRhb/!`T'seg=E6]OF/9_8
%^$\MR/Xq#%)gYJCC;rDl0"0I1c)5T+hGG8#!]"fJ3Lfd"W"8@Ag(,:o)Y=O"5VNV\7nu;iFg)fW?^uc;?s/1OQmo9Lq'5q\pi2GR
%D>"5:'er.NO]c#!9'`jFS0<Nkk0P-5'($p?2V?pCJuYM,-1>]!.JH2mZW#pN]6PDMEtA@V&B.%lHe*K#%7tNdq:n5$W%<@:-t6n\
%Y'@@"*rV6SEP5#H(b]c;T@EfPg^>Js21;.dEP$5+50=;SOR>$I&aM?'<`@c&'`HR!h#1X-3nkO?LPuKbPK"bJpZXe%W_!E:2PD#E
%C8?Y+O;LMY<dHsEgEs]ZM(&(WdnLrQm&T<uM/J]mp]@Xn=2.DEpmS3[K$<sNi`K]<7>R,$db+]7fCNhe,np;jLs;N"@9HiVHW'Pq
%7bUo<pln:X(\USQ;SFkj0Y=7gW)jrn.rlMnG+`iaLb).^Q%`VG`C:<[1+b""O$DXRTe^>A0DF=cmI<^XgS:R+rQ)!hqmZ3[Yr_%3
%@-li3A,ChtQmXO@lr4?rm4r+/WO15J.u8`aKg]H1*^n-6Z(In]XY+YNPrXAmT'ROa].@];fL4A7\28n;QlAD#I^`0R4Vg`%?QEc;
%\uH9M%;%b[)\kA`_8hu/IYWKmLPp9_VNZ0'=Ii';Cg/;+Qs,%85'b:`Z,2k-2B$tZlD!Eo'ucD-XlS_CTc'(1TSGTeI&B#/h>2:Y
%@lJImG&tFY[Lm1URpWOiB>(K[e0F>X`8P,&b%pNiF$RrXhCg=,kMG)\.K6L]U8<bT#aqY>jGVX+QX7kr2aM\Ob/?<Kbi1E"8arq<
%j:EQg)Td8sA'E5I3qbP"Ms7N;U4nm!SsbSN+KJI%nhX7dF]N&T(i9[m6N(Y?]FMB#2*I.R&M>-uD)Y>-W]O/fM!%]C/%M>dm3U=X
%M@)]7LeLa_M,6s6Zrj"4-81PE5lt8l<OYpL,Mo;C&.VpMSKa`?7t3V<W.lmY[,dNYU!gU6'eeEU<,NNZl1p]s8aF91,&H_0m.rne
%`ib)@RO+M<J9Yln=Stp;eHTri"djPUkTa`(?Z$_K"HDYL(1t2BKpqJMF;0)/1I)>c_hN]lEh5kH/\50(l"f"#0,;hTVoKr(7X2W?
%oX'FNfr06NJW>[=3nrWp3*\'Dbf-@ABebK:2KLqs3Z9b4)=FB0c1X4>F:0CEb=XAbG]EFu[^X9[\'rqgrL>Hq@<5Ch[CP03S2j*4
%H1,B!'@i:m?!UUEl&Ns:e?UT/4^H^,DaZYR:0H6DS54gA5!$I],;dq>QZ+Y^3F>'[XK:;";&HZ?i\:T%CctOaMVqVY;kl>skWW,F
%I%?GLh$q``_1'h,Cf:-e=d$r(>o^3e\L3p%S<%LB*TIb:/.65>>84<i+ip'R.LRR7OdM!RO=Qo#JeuV2g$Nr'SZ<hW,&qqHh7Q7&
%in>V%e1k2q&;A>l%8V3V$WCcfNtZGF3tITk4$JiDG*DB?7m$\=1/>@r!>>qOY<Z8<VZ%F>oe&ElqY?ZjF:o5h0P+&0<gG<]PmK]M
%<Q\:AW'C`mHU3spmL.cLh5;/Qo0UFtUMPkAd.U)5V_HktEor/D&lUTcTZAM[S0Yhac:+Lgqj3TRW-EYO*"13C#%%6X\,L-nddg=>
%rMT)jdL=lSJd@e0;sI'9p],;T[m3VpD5<)#]J$=Hd8j*J`(sSc:VpEf7;b])mTEI;lMc5.@LRZ_99ph[<T/1IDqs5Ei4V?>ro!r8
%jRjU_,B!"5=n2_[1/Hcb,;[:J4u??5A^]1om:8T4-?si?-%5I82&WERBtBr7bYg6:qXnp.c^4kkRpD9d@!^Y@Jq00K*>8\rQ%$A.
%Ag7Y8f#@IugbMOOKTU6pFC6l7kIDh_qQaZg0bI2DZ>62#;HVL1NiZP^W;n=3-+>>l'L"._;eLr22gAZt`iEOWN*o]o789R(/oPb)
%g<+QMdNq-gQUT<jN84<BinY4/%j)^"DX`ccpA0i/ZX<3aO`kP)1=ff=e_!$%`BeT708\nfbitsD:2Cu8_\U';XeVDPCp`h=Y57,+
%if4,Te//iW5/CseQ])us9*V50IRb!'D1f%R]Mq#aqeDe=_ZsV(fT1BK]U-o,Fust4*ti<;J7ke%]OWTtaiuTN&WMaUF\"<5rJpD&
%Zm[8?g:OI)NM4U!:VhPJm\8M"\U"TU6oLqq6Ta)N@JRD[o$M2(/0D`Bj*jdShX?I#]0#$Ng$oRpR3-A:JJn%T?TptdrfL@S"s93[
%Y5cjBrPU-.35HCUQs<Gb+!5`X+])<0c$?$mcX`NNir5ji:#`+LbLNu*3/)iJf-#lkP$2YPcsP$o>7*h$6r_8Lgd)"HD;4q:&M;mo
%,ATHd,UR0#84p1K.PjD6gb/qj^r(&J+OR[4`mrHIHQ#ICRjFfmY!/V@pPXYi-E<q+!jeIO^-\=,!A8Eo*uLs3=fa&7-]F=ARP"^T
%U;_MO#G<k)Th<?/5GLsgANsJBP9J?C^gr8LQtPM@'/4Pf!W^:oK2%;/]oElgnfdk#;&:dcXOtU@hF''dc2%8"gUh6R5C@-eG_6O.
%&$GrR$M!t"^.*MKO/rt4n<%kQe9kf'S/_Cs[IP!oF+[Q9#?LDl-UXE')6tM$<F&#)'009+A.2VW;6a[8/&P4,aBn;M`!'Y)F$fsK
%AX_:]NQV?hR0\dCO1MTBaP%*]6<m^<"8&]b0dNrikGR<d&9V)uIEGl?-a3XD9_sc`dVbVJ%O9UI8&\R:O<O3kI/6dZe4^a2!OM_?
%h,YtP%Ug&^F=T1+62Bg0`t?G(hd6kULqBCl.h'Q?6D-;3,=_<Kgtt>ihjkkhn<"UZ"s96XDX`cko(nEkP;i9P9K<.rRB)r>UGFSU
%ISR1(T/L1.#haJ4.O*To2]Wqc7:!]8U&g'M]nGLUa`,N4)#('!5]N-%&?*"0NL0k7D6K8(9=lCJ7htC'j$k_74"g_O)'P9Fga$*)
%UEij93i%`ZBRYRT\7m".b^APme:4fK`"^%!Gh5?9^GD"=Skn#QbG*9WC3R^sHdiUd?A<YqX3%oopZ-E8#Sa4pIq4cjRB9<"B(KZ%
%hf(cl1[OS&P4-YUndis*f7.=c4QJ[[7pc4X=ZWJ90;#.PJGeDpH@J-[nYF1r1'ZH$3Yb60krpT+,\Oa:=`I?%SUXB_I>2o?;Q8cE
%3@$QHG!76iI6Pgt<POq5YdK9$=!G6ZENDJ*[<q=/e%e:Q&3l,#e&okYoIk=5jliI--$<@0$Y5TW]si!)<gM,g5@%SEA63Te`[:on
%(UAtC:->)S59`JPG<FCG]_rs0]iWsTPHt(68mm%R#ZMTrY1m@=dru]m&='<':YD@NI#mCEY2GQ"_Z?Zf(<bG5r=m$aUFHgWI5]Rh
%_=k?@4Fg2Gqb2Seb>_CB`0t/6$ahbhDH,ZbK(bf,:UV-#6_2[ciL3F-W`?,;5@L**]3ErdJ9*S1:.Zl7htSL[R*f9_5WtMLI<G4i
%7>W6@1E"XM@l(oirB=b.gc&/fNj$alhms\3@CmC.6"/msi5/0X=c;oPCqI1:Gt+5b8[[gB)Ld&nKip_S9S>j7dl\74Tk3SK6<Y!6
%>6_a9IWf']i$9`=eN>!5Vnt:`8592-cU:"l#=nMY*FgV3>s:/pNW;P*1At<kTE(6O=im!R@1[]EfbMAT`dKI`r*r3)TlUj++#8S`
%@4p]<29c\hOJc;L>/lbIWeZ+B;7je@C`.BU4p[[ZAIe/;k>Us4f?'ZG)'rmA&D>_/"N@8!D)$tr7qqJsi$$(nBU*C4#%2.pkr#QL
%MN8tgC;a^]+P,g4Ar81D=3[YX@&C`T2TZ?Bb>$WULK%8a[CEiR&]0$X(-r]D)%&/o8<Q):)[Er]P/I>`&nOGAKn=KR*Q:W/-*G>C
%Z(i)QqFA`N_@N"&Spl3(OBfRc-SP>q(s;Dg%Z?R<jlkNB>PiN9W6(#'9G%o?7&PT>A)RNCZ@%=iL0VQ1g+rM0?=Clao;.@q-@"MJ
%jb,m/IK41^@/Y8khRD+oRp"jfHu?Lm6aOrFIein>p%4@ak5#V50fSmS/GfVnRHH6V->eSI!Ul+;)ZUug\=ahf@^`O<*e*]&rb`85
%^]-A6gjJj?q5XIL57dT(s0jpf$BEo+rJ5/Ee>e+Ndnra8"n@kldG:VA!ssojVS.dk_juE:f5YSWY-0(a6jRFR/<Bl_6)<%DaHg].
%OBq,;;XTuXX8jqgF2jF?N7k(HPe*&4n;((qm.=QRc"!l>3GH'>G#GtAQMn/6PKCA#:(?Qf';Sa=XC:p)]//FG%U3?m_;@_7Tt-=C
%S`KW>pSi_9\&uh'6^SWR[<%T%KcGkX',p&qe70I*6GtZV"D%M:/2G=5:Np=YU/PDSBTBU_olTBtTp87[&42CBE5r*m`&0)""=6k_
%Hh[D#!#H/q&`RMO%dlBc/Pm)1<f7XFJJG11pmib6/++i.p'\qbc#TCg$n6ItV`\cJH&un680dFrd$>hf@6%fW;jda%g^hQiC9p'!
%bSAbhj.:;'(n">,V,7[uBIO+*@g/"RQJ(ek<<Sn5h3NYp*q3(7C0-AKU)t5XP0nmKiOuAa_i<h?]ti+7]4LWI?u[$M$fpZZ.FCfq
%[FD<=6[:&FpT[n2+=BGg2)76HXf"I#'(@$XL.[jg(X^Igbe'U*8G\R>cX][]=$k)'#R(YWXn":e)$`]TEY&H"OP(%%L5Zo7oDJ7G
%oo/;Ij-'+6ZD/j1RMR+F.A0^hp%.f*iX/hjR`kCC)<^7fa6eXlL/-LHBSk,r]H&emmPcGF@&7?N9T,!O9p0pIPR3d^'S>1XF,5T_
%(eY@_pa0)jf*o8tbBp:1C(uI8,J3"5);%d;g]\/k<<oU_L\oZ'-0<G%S!r!K.@X,,5eqcl':/;\e2p%_+e.m4n2i`fhL,&8&\:d2
%W?l6pNC0[;UT,IDhD.dKNKM?'loMR^KX)d`U2,+GXhe;,*C1OB#qO>fNG)uD?SGS/oZ3Jp+pl9FPSbCq4a^OLlo7KBKMA2)*G2i7
%OX2.b*87s[=4:QgSH0RJ)Y!5;h?rFD^6H>,oQuukgOJH?:`)[aiQ!0DGI.,u$1@E5gi'[PA&\s\lj#:`q;A7a#J\D:3L;RAek,9]
%PB_8b^$H9peq$ut^a'9ck`Q=H_p@^'b:.sJefd9q<j'FfeWBHLp_XC;!UD-F%h#+('^!]NA%cDYJE^"V^CSYgYF(Y0Vqr2.*!bTJ
%Vgf/.PTg'QDrC&+[cb<V0m6!"bTT%_2&Q<KZ!W`D+kn11M^F`5>2#B%,I,=mFkane`9Y"R&Bel-KgoLDNdrST43p!JgJ2SG^3i@K
%@m5;VCiS-4dd'M9AMGPG^S>oFTVQG'-Ma3A6W_\(CXlpc_-?Th\)3r)ASJk')uX`](JDoip!LV$84+O&A$I6:K4\5>hJZPq*jY`*
%cPn"MontfRDKf8YkEbfZELR^=b*PYlCHc$QPuuK<*%ccgQEfV?fHP]r2]=]IrQt",D39E_k-OtoEV4s#s/A[U69]gic7MHGPg2:7
%)N/GQ*c]4K_GSC5=uu-2]@6JTSXtgs]4rR`;(EClN+6j6SX3KWX#Aijem\DAHs'a,\Fs#t(kiQI_XaE@b0+?V>;pNk^-(.!K2J-3
%(+h9Pj`?/_j^+ON:&/!PmH)*fffOn"Qi4_"s!TcTd&2XX8c"V$@Dr9Q=paZ2(L"IR(m\Z:E^dBg#[c#/;Q2lNi5)CeS*S-.oi9qi
%f<Fu,JeE:IQm82kAqRN6f"m%kkU%GMAIB\T;lWo4ptHt[gue9J-$<LZ_/V3j<@`MHFJ=OAh8I+Tf?SC,5!DHiVotr[<e1FQ22*SQ
%4!U4[3i.iQAJKciVNaeeheRIISe5]TqrWKCG?UgKj<C31i'dc0=JMOu_VtpMF]]?X<3%[T#4Z"1\sN_6ET64XA+;b7'jLfj"MH#b
%pUUj010a@_H3YM^&/50=0"<;l8QLg_-Ekbjn>3*SO\`P+cM#bA@^FFZfFW[\R.3M>KOaD6Fk[#4^)UO.bGUfnR^"gp*BBVndA[jX
%Yn7\R?M`oDc-e's1BqVco4fDg/"`G'I.;Kade2i5>Is8#[j,]]?;YZ1i89dknD6Jr)HSD(GmccIdKsa;a_!Ui1W7\`OJW7]_Gt-P
%r6YkZH8HB45A*,i+E31?*l#qI8Lo^ZMpdqYlXa"AHQ(Qtr]#CNWouhedAVcQDe1!A[/=/p!X&C7F;'>%A)>-d[)Qsk3hXV9O?8F@
%P<<D"daB=ECRXClX*ZP,^O/ddKZ^@ITiNT\B>/\5`)[il3S`r2]L5CXL.Fu[Z<V4nJ=X^5iil:E:>r/2ALhs$K/B'U@N%KMM@+k>
%F%,99Vt`JM3N%Q\6#C"[M=)Y.qHX1a7E]\?!A[CmCAAP[n=Ug3VC8uZnXf6:gY'I+i2f:L2_HPZj*,,@.R%]#E-62]cZGN+a.e_U
%9@6l5['@^63:+W0R5J030$5N2nZ%/DCu3>e%@]f#\pE1TK06&r@&^ElZ,c`D2]=I3/A-:sVcdb3Xet\YV8^TQ6Ld*b?Ag[BaD;e8
%Z?uq\MbWB71Bb_BDI%?tCVGoWObZO-hIt[=\sk9:cVS'cdt]'5Q>%]^?"/A\XnhJC2E`"(&N?-KGsWg9ao%pn*2u\k<L9Q&,UR,B
%VQL^5(_Tm&YQ5H)9@^hF/@jR_%u"NMnD?PSb:*ljDkk+dhfUFcl%rSO"c:DqPb>n52^uU=R!Qm>l:)E35'Rp?h9OeP3Vn/_$,KX+
%B%eMXe,<j7Q?pAWCc%GSrt;k-NG^s[Rk#[?2&M]BL%s#^m>mKfF]$,<2UcPZdQ9ce<"E-oZH_T0Cko1iTPXL=:ip%lWgYW6EgI8B
%.Y;/FlA,73LhCpfiRLo,.%BnN<f2q"SYT7I02JE&q'O8\RMeAr0j-8>X%/jAO&*6i'6V2gU]?A%'i0VWa<%>%L:(]VCo^JOp0^&j
%cL>?B1IKjp?kg=->q5!GBI\*C8@#afN>[]:-+LpD3-2fK4:"Gl`@nbR,!sVi3kUBe/^?Yi:@DH>VF8sj#F4PYL+TMpf#[s,=RNPJ
%+76"W[:5U/l1_Vp+7_kr>E6ZW#kl!A<Sj15GK/i(Ij=BW'J,0JfQFJaM7%bh4mbU";*S(i2fNb@LJmRi&J/fLapIrIE1N"pj6!7)
%<3TLQ#Td9'\C)*Y28bB4q'\kV`NX7:G]LpSM[t'$X<49o9c5n)`T[p+Qt7*L5A4!;7;*_0Eo8c>eEh@%iau.:XVl+M8kA:hZQtat
%9U1m[4F*3HSaodn-US5KAc%<i&A*dh"3q&hPOr4>32,`k[g<N%B6uSI,t(?qPZ8Af9=DQTa\cebXM<!>c6jHLF!R1`KZrX@bI'N.
%jKACt]g(T9=LdmZ3?$@o5-b"=n,BYmKE(_%5Q%E$s6G/[prEF6TDm%6o3_Oe59<Gn2\1smI\sg'p$cWB-G8-kJjnqE\VU:amN;K%
%^[`ec4M8:saI$[\N]n*F7^43qgBi4]C,?h#%mMi7d)EI+7(FG63B,j-^/:ADd3YP_\u!3Co%j9VN0>GbfcJ$dMgX@P^XMTLD)Sn[
%SSf7-GHNea,AfR-N5WMZpN,13lYEUn-')/4hqc]<n%S[.>8j"*ZrOiK.ug[[:*ug1(\^"CVi^>b2n,@u8,ZVrcC=L+"V&K'>rDKN
%YmJP#>=uW0e-OE4cm\i^PO-c(@BWut66&2O#N&uZH"+]U!GIFEs4_jM]RlZ%:QQ$G`tOtuUf\^meCg[=T'>lk0j4Z@&>PioS_*<n
%W(Er)Q;5;LFamEZ(:gjZas=bhH.brpSp(:<[(k+D,LopXk7t9e1*KM%$m;BF6^]*48LHDYqJf6.ER]SBFI%jg,iL$O,SK<X`V3tN
%rqQ0h\!peXI?a)ZW$<2o)rn9lBA[';(PrEur$^ofs.@!6l`h_Gc?"Jdr^5KYO:@G=&K)Z."FMB$%9l*V^nuO)`%,=O,V6g]6\-FO
%n@q3X4=bI(hGq17C8RKs(cDe`R]CUD7RfkK=J,%d<I>edDFj#<H5&elHK!M(dpSu/_,ZCbEEK%7qWd;O>!ut*%^dt]?S#T8j/\F%
%;.;s6jXnf%j'aAC?VY8QGN./<HdeH69A)WfoCKGP)Krr+i>d#3V.AX_Z0>R:X6JS]rkU.%RCbW(TA,;"=1\?cRFuFmem]=spkdm-
%<:pt]mH[#t37c!d]A$E3p>4Im640:#Veb7"RVipNi;*6Hd]4=7O=BM!^K7X&r:M^lo@5c1J,.W5J+g3Ur9!<0I.cn,roQ.(qq8U=
%rVkR/r;ILRQ2g@rJ+g3sc/E%/mC1u$p!%E)I5T]%YPXslpE/P4o:)r[`UEg$mB>[pijp6+[.C<,^!Vl]gNd(Nq!4RPmWWlHo$-X;
%r]gGTgOK.G%iS1=Oe[4!Fk8F7IaH`U+$$d=?["ZAo;\PmPWfiS#KA`gmr*[TX7Oq"qN>CbfT6&MrHKf=%(uRj+9-i*rUh93If5M,
%4*@%eJ,*H$o@s<DpO?:0S^7;iGojWrc/4!IgHYW0X)J"7+2@[Fn%\_m&)T27J&D:Hoi:q_l*oRKk(!=-=3Sp=qs*o_^&Q,o>&Q$A
%0tC@%rR\6erUi+aq>L=LO0&rJpa&pHBZ!WB(T3Ct7]_4Ja#nOlJ'V#>XDtD8DPW9QDT-<%,[sasGLC([h=R05Q"X>'GiRAM>_M^'
%NHtg+W)"S.Z*D<l':pN58ES_\_TSUEY(`/sbSRqIIhsnW3\?\,>U59q1?+4V\%TH.o@;0NF["g1r4P2^*2g807/NS]HaR6P*^qjo
%f`^^.J+-/fcuA\n%+=2gnp>T,Uq>du1iXc2QKRp:GOHG_dWr&lO&9Tb2!7%>(oLTP"`8hgcK%l-na(]"%u,N*fMNk\qYoW^Vt>Uo
%\NfRFp\f-"IQ:)OJqn'XUB6hSD22g?Y44m"hX,"a>souHpALn'1<";33M**45!-t+P!KcQ*2k0ar19`m6Y58\Sh)_KV@Nqcf0A*)
%ldMc'/m"r1q'YA`s"0f:QU*jlI?g^CgnX0`/GP]4Z-=`[3:fPO#d:uF4]kud_>D[(%A*"Dp$$fj&;@,ZLA#:N`Foe%\Z&JT)$-Pc
%cce.9!5#OI9em)d?eX;2&B0f"V=lLo"biq;NUI4T38-tT^:on4+&IV$SP4PFm'uW570fq/KgO^7^#cd/+9!`o[jti5=l_Zr!D-bF
%GM8kW9>sQ]3+PW#MAXlX.s1.%"a1Q.\1Q(Bqq80kf:Q0TU-#"H>(6F@n(mq"H-R0m\HFRoI2V-'Y=YNG(IX>`[dI1uVj_<Ig%>U'
%4N+#!5RJQiSe`15o5ILim0_-c,VYj.mVlNZFb_Ucf,'A2Ve0op_1Gm?PJotn!fE@()-he4\,7C"lIt)=SUh^W1U=Ii/@G,J2A-df
%'5\H,"Jb*.ICb_NCY?l?mL$/$s.Zp8BW[nqecK`(:ES":0AJs_V]-J,Dp_bP6PJ>6YI;LkP!f7j<*RV'Euqf*lQX#>>AtU$j&SCX
%(0t;E7:gmE=[+d/7>&r^T?\7Doe3,I+EOd&i^RQdUc1>mJ#*nt&C2ikT()UQ07)rBhYO59/I87H.j#;-J'hJm?Z4c-D6<#)lD[4G
%:YnPpX7*SM$jOoEkqlMX/2.#hpl+(!D!-22[@pamIO3fS<'X2q#*DumKrBl\fi3?CmLYiUq%$3nX'0F[h*epa>*A&Q2ZoOhP<3u5
%H0[((7t!,W:.mlgrV"ghR$LWWN;@RMVgHt;;R[*4[`Taa!;1_+HNq]J]_7\n69P\`b$KWl1CHlVs*i$`6V8TMM<'\3cWk/T.Z3bc
%*@jN^'?C?lV"UpP9=U9O+Ve@.0r#P8d>Fl:q\!arqYY+-&4j\]YbII3o`qq$NK2;!#3P86l8L5l$e39U\Z53&U.k7S>Qo9[:Jmgd
%OJ:#mVt11EMTU?Jm4@`77sh2QE9%J&*i;c)3?M/*5hp]cg38Y)WZ;qJVPup-quB%NDCmb7>h^$B%+$bPg@ag\Rr:K_6!NUi>b6%n
%m(@6]#=u&Fo5$YIr<?og.)Ynt`i1gaP/!8i5MNX#rR1pWmH$S-]Q],-5,P,IklT=3-!CbcES$ML`KkOf4qGPrH"bO?8pBIir:44j
%kBV8C0gRGGg_+\#ePJeUWCG.N<(RV;?)M(s48Fq@OEeLZW45OSAa*--9ET.Vqhkn<LXl+(T]I+uS5KaKJIDk&!J^s*CO6js*\*o"
%VkpLgj=<MPTkShGp$&^0lWHX9@hXtDjBgOa/II9..T#DOoG$'T]LI;P>7(7H7i,8!*&;@LZH[2=?3D1@TONJ"B9t)emd+eK%Kr^m
%BfdJV-m0'H=@ZN$j%XW%2'>^LEe98n?]Z89FG[^S0(K=UZ#'mK6HDJb'9ei^@M=>#r=QcI\\_mlL'a@R9-Z4e5B]d/]4?g4JO\k0
%!$K24#<7M,g+3_YEG_G5[S'\RV)2+S\T<6#MkJd7bAtko<MgIQqWPNH"*\W!,K-D3:AUp=pq.rkW]Qn:"Lk9*AnoOA#HUAqSAAZQ
%R\F1C/(kun(4:`2Nh2L.g?'7+(P,lPdN'XY[YBKPcYi&ZG:Kss?jF>N[I<NKA_gYH;g`e3:\g&YhpV`)KG?\Sre*-mNOla&I*+Z^
%STEC)^XB[ha00XM.XpGns*+M/'A!'Y&3kW_cNWt$f0$,&a0#1S\_hK0*V`U/l8J%a^b->WN.W0JF=\t(]u'=@(^"iEP;ep_)pkjs
%"`QS:R<k;)LVX\TfGu2rORBIY_P]EGIL=K8dhH6,MQDb:;-Q;(1`1`/R;SQBT)&'5cEu:H3ELX$7eMC%Tq8"*j,Uq!Bs`IN>&re'
%O4cFH9KQ*R/osV;grcf140\N#/_BYt)bRZLFO+![0n:aCU'_UY]\P1o(m6)dhta_*[V4Nr!c?=M-d-Zjd]lS6AWt3iaTM"#&neAD
%QW0>&?IF:NVn6BX66k2Tfg?uU_a05ljB]aS6ooJY!A0#R$rOAQ2E'HD"O9,D:`DR2Z%lO_#9cN9bR&Zi<_TH!=B#Y6&e$%.q^oF-
%VB\RcBs)BZ=;piMI$ISe)M]HRo<Eli@j*_7e3`]47R`(R#rNTNm5CH]l6RE,^Z=_B\-auT\N%.RLqPl[F,(b,Yo&u&o@p5)rab:;
%5s7+r"cbNY_%i!#@k/_FdDe/tkrK\icQ/r:qN2<]&\m'Ca$jJXh5qsCDY,[3J0cP!h\>`S(gg%m.G>rG/rFtV9"g].QPSKf?&$pt
%[<S]>JuldSUFKd.e^A;aB&;QZ0qMZh^!9d#K_>7^XUY=4kuLPHDZSjJ"gLb9nlQU@3A@>oHVHN'KhZtJA3-)nC[9\?G:d0nI`E-j
%^i]'?Kl5(NO+BPLC1")jV2SKqa)tf^n[l\F*M:\IQ=>J;+cRo=@[-q+^Bh^o?&_&)3M/CXV2,1iN`h^Be6d(iqQTpC^:$VKf5-r$
%ENQ&'/08TOr6aK;N2G"qXr.+D$MMcXp;%eofk+)KRI^TBk+:d?oie(EcLH"q`9_5\_1L/cRBrPVM"^9(?EN8?,*gHdTMc"0OWD^K
%#95Eh0$D@mfg:aH07q7F.%X\=7D.X*q7I_`[E-&GcY1ep^@GBf11FE_&Kq,taZFT,2:a^.dEP6jX4MV]cGY.[W>h"MbULg-S[RWd
%KBL=PU5""q5Z>bUf>$(Rh'&Qh]TuRRC]%if!IGCs3+UTKYXCBr3k\Vbm%=b=ldGsU&O`3bj@VWKFMbE@,>(]!%H)g)nC#*HBej"k
%o>K@@:E:9lW%bal2IU=^2M7[YFWZDt#uHLEa_I,&[afkU\>[2&[76?5Z(o7i,4aXrDtR9a9RtC[HrWa:=o;c2PU%Z,n8.AF2fl;g
%?t-'b[l_<BW+d;FYpAG&^3t]r&$90-p7#Hqd5K]818XGW'&.PYR(%%Z!?:(R:l[1O('+Tm*gcSegrrdQB`Ig'/ui5KUj3/ogJ_I+
%WpYEj_/@M;o%#t\Ofu+[EB?qMSAJ)n20RY$l`jnhaY&TR$-O\nZ6lD#cR@^GiL_4fZF^nl[XkbPAQCY;Hg&JeP77U1YSM=qXXZdO
%)c@ed$5aq=)e[q+C8$7!#eH[@9BP9^jh(a:;s0s"aC,pP=R:_d[L1]R(VnK(VW+/[rq..#f]VrDZ0nmDE4N1eOWHic("O4o@]/!M
%'W_?K#jaQ5aIYKR/hEp.aMCK2bcPOdbq6.%!IiB68l8qAOsDL`NQI71^'W55/d8;RGV+oePbo3ei/O]MoHCUIU5FJRWT`!O@K;R%
%c;R.=[bNuHMoC?\M5F'-c05@%LMm27js$iYP2+Gfb&_F`.N-ake74#])(6W-$)^4ncO&]:O;2Uj2P?;sjC6o^.m'[$5Vqlc/U7!s
%_!#!mYf/3:7kTX'<b6Y1(=*]2F%35;,s\Qp;:LjL@*)udL6ju>U&iJPfto\=&cbJb<)@m*f4S;P.cI*%HDBND4U,c(5k@Ag3()u<
%*8am8B<eN:5t(,J&;MVEEKYG@A4C6F&A3V6fp=Mb:Oc5pW7os$1tDfdDs=C[^'NN6)PV9&GDP$"H\m.Xi<:n@pp/ok&F@OE="7l-
%;M[l+*0ROM(*_o7ZQ"j:*\mK'F;ML!ZPO8qo>'"9h:gi(,:"a;\[B`7c9&\^R8M3r"-\QGHn8?gj#O.Eq@a_.-H.nKhqg[;dTSlj
%.Ca=%[CmH3)b+hb^p=&kg?\eCKW.o08-^P-4LcZ?4NJJ7m"j3p3ss#5(=<XSKd\NR.T7u62$Mi:-Iqnm_-l((hm\1UPnnI/!n1`W
%p,I*_[K)A4G`3[M`&@V/e'MFS!<`E1n5"iE>QTsSE2R^.@_'9<DiC$F:'IlF-f'gh%sJR$mmkrZE"Hcao!67QQu&kLb)QYV@2H(9
%%1#6[:<0qf'/O\N*#*5\#bY`g^'_Yr?jusj*s+2V/0Wp2W-o!nd%p+[?q/\ZV"F>Y)W2Z49blRIJZ]]a"-iair(c!5klJH&+ri\a
%>l`8O1<t9tQ3(Vl.@=9^7Fg8o0[XHU.h_i,>ruR)7bSdLN(A-"b%]JT>b%Zp?AQaD>a4(\?P=p/m^o/>D)-Wb[!JG]E5>2'G0[O=
%D)toWgCZ]ZLuooR>5%LAQ&$VWJuF9no.I2:s.>RFciG_i]Dd"!N#(;;jJYJXn+iY_VL,,`AL3kO86AeDAT04(0E^uA;.$D/]>0"B
%7tkARis[8&@SUqBDLN]VdIUeX!jKIBOoo5A@2seIjT+!>)q"1e4B@I\U(#&^@.GPUpPpI)\E>H!Zt$Rc&uBn,qZG<Nkbe$a7!5&R
%_UR]_`FFlD8Mn`+QKA5<5]Eep<sY27><nSkN*?g#U^bYUaAX5Lf""RN!C7:VY,jK'iQ:NLmU1R<JE2V&*H@&[ktmDbq6L1a=@&Z"
%X:!Fb3/"K-''cufJ>4WBaY;*Lp"GqYKO.\u%"eZRi/jodbknNG[l=B$l)0M)LVuL3jSJ7OT`HoukNk<8Ic6di\7J*!,8p-$7s&=)
%#YK=?nX%#cO*TV(repgT3WK'P2?H/Z:rMG*M'md5W4s>%s,mW[]/\*)7(=!+NYX`RATI/G7]j%:3/0D"`'6#N/QE`>4cB0g"#U^V
%<CF@u#dAb'OYp.M.&ZZ"[Kn!a4WcCB^0*tpGkSEB:#<`EWa<?(Am4"&mD,eR8c\D:MEDa-[5iaIGO%-G>(_N-ACN*0;hpb&=>.]1
%+D,@la]-Z>A$f(HRt4u>CrU/aTt:/(U+u*#nos&\lrC\Z30=L4i<KYu=bWR4b+eX\<W`4jIb`@H4Y*gI/Je)SC3S>JN6,KDTN)4j
%W8ZeNA\a>"4*CYGec:WI31;JO*c[3S$V\kV`5l\PX'mG6,rOV+M-6@/*ITcUmp/3+WH&OfNtHV2S*uB'I.ta3;D#h&Ho.)S;<UiL
%]X;]6';(]Y]o%SOpFCZ"EIln),LUWF)hp+ekpqV.*icS-@L?IV0PlP>!f;q\Zn>ck_7<=/3"XL[ROsqK).(?jonPesZer?iBtNPp
%B$6DU,R@IP@Lbmu=F9<U8oY=j:EjB7etV3p(hPKGYDB-'C&:LDF><)Ad[LA1@jT>i+5Jr`^AbTcAoTElR[_.1K@n>Rae0E4*16#g
%"8]??DP4[&Rp[0IA@k3a1sHap:)X8Y2VS_oH#aR=>"E<@b0on.,a>aQRWkK)Yb,g&!0LIq8H'-i0,];`3+(`#S*-7,OV(YZLiH/N
%:B3@`hFpZPBMM`*ZBqF?=?L7,h=nS/0b+(mOet#%0oku?a!i/mYs(Hoh<#=Q]s3J2?V,@c$%%(UGof<<Um4Uu=68d)_Mh)2'KXJt
%R>6ao<a\kDP62/4R$+D$)!@#0>hub?>9"MB!<3p9e*rhF<E=Z28#j."?]1^+AG!*gPTsRKCI#4<c8>?[33)f^[R!Cq8Ul?l)Oe:g
%JL1S?Vr/-oY\5opB=16p.oF=CPt$l[$bVnFTbmnZ_Z@XF$KGJ2*CL!j0T)e0E4HY11Mo^K=Mj/FSehQ-'F3?,peI'mWIrFjHKn;n
%XAbY8i]6#M^I44#G0q,=BO\`i;N/AJAB([n;4(1oG_?\%lm0qa?-ZANhF[<Q_g=>jl5+?C]Ea.rkZ'pWcTEN;nh#ua1T,@Le+5[W
%9ehUr6NDsMrJn[6#s<3uJ.047^pG$S:$f=!'#*CM=HImrQCSF^_g<I0RiAMCh\?lg$qQqL'XXmbA(i1ObLuZ8QKIDI*-Yl/O_g/5
%@P%fc"qPQ\je)`A7C&hi`uoq9GpnfnIKls9]H/Q\[o/`'e*,.qXB\aKS_T$K<:^)i9[cOdbC(3fZ`1S"fWZQh\T)Fs2D&X9;q-Z?
%>%L5%]uj"eC"!t@"MiASIL*Mu(+a.9o0lT69LYUH<Y7Y1=XftW\5qWn\BI#@<mI8k@ogO?-.KXFGm\L9CTQWMUi3%3dE&+O!W1cL
%n9.?Ma!r=>da'29`'-sBiIGE]X&<>UM*\9*n5Nlb44s2,4_b)!e-XA5im*S[eOS=9rXrJtUQjf@+GdOgqq.WNA0]NSV37Tm,j!9M
%q@VhBJ:]*V5.$h\NAf!(JE1H?X'"EN6b:li8uGPO<0q(a5i[ML+dsKsrCW]>\VBP=E4\uS0heq]c[@EPcq*RU[s+IOg]5K_*i95N
%11-)IB,:K2I*E.&_4A&`pGotnlfS9?hHH7>>k%\q<NF>u!6T\;b5aG#4Wqnr*E+e3MGjZ/^9`Yj^0<(>GtZ:A8]tPE%&A*f*JO%O
%a"%SmDPGd_`\_fFTYrpQq@?][-kWu\Z<r+<aX#O)WtQ+Oh3?GXYc8Ho115lI.n=mpX"B+j&>Q$=":`:PlFNu!FVLQLP&<s*2oF/G
%[Dh3OXn1Fu8E\1#V97]YcFBY?haQCL>@13e4=VSk7.EMT5U\kPH.UA'Q_.U9]pD,r[E#Y=Beu--S.=bE"c1\*N^51Di0>Gm!r$Jg
%Q2![#YZmHFJQ#:I@RR%(e;kH9+0dkL__jNtNbNY`rFjI$qI-^oY`CYsCoQQ<#EZbN%*CTYoJ-6j5Qpd*`esJ"1Sc'E:&11TBYAri
%,JO)]+*6(q'i4X8p7lU:lpjCHbC3-_rAYVla6^j\b(f[XEeOenX?A7Eim,S-,F4sJ^t]6E^CTi)l@'q+9d"9`qR@4OpHa,c:.jVR
%][)\BV;T3e*VVQl.X<b\=3@(),/#&l0:`_Rh(m2:(<G+,No>[7`SR(^!O7i>H[/^![7j@u[iaap+:!Qm7aCY:nqeZE#>PHB[(.9%
%^Ipgb@]oo.2e7OVBg-RZ61Ge>TEX$c;obFq,NoAb'5"XI/>#nM,^q`)@I43Y.,hIZK3HfrTG=d;4V6tl('\S(7<8FI)h7T:jWr*u
%gkfrM:7i)M_=?u7G6!0%Pot5(Fgkp=Tid.6?4fh:R#j^mlPB$#S2o^;1,roRY@;bD$^T%,6l3k.YhJ7]-.pionNJ/+`pKKi$=;`f
%F\Vg6HTiKYB^=DTRA:1:RRBH+=-^RVMThCm>8CT46*/#%Q_R%2-28YZ9e+J##>l\Q>A-t^CG7/!T?p4"IQS5F.@@#W-L.?RbRaZ.
%]<'=ZR8aLR0B^5b5oiU29I&skE_YRg"`:gk\ntU,&*l%6MEdcCfsbqq+,NJsOPK<kEtqr3kFEP)$9*2'H8+6c@]*T.cY7SjD30Zu
%0Ut*_N#S[1F71;A%ADR:WY.]mXQ4d^\7.<-mor;8No]KV!+o6Q8B#l$jGtTrMc2`6`Aqu0@>,?O7;Rjg2JbI$k-RsP^u1\M1l,X_
%2Zg<XC'e?-QL_J>>2fDa0enQ@<NqJHE/G58&uMP*lZh)o^iP)(6Yl^uC"VHh8L7q/DM5q0+#aQn_0@Ne!Yi\J[qiVZcHA=V&b-HX
%!$sYAYIOm[>?\A]iYfAu:565T.a>?`1&BV!3DoubRb#c\+?i<%_HOCRYg1^I.aY*rC':lco)UHm!n,"NjEE*0[/uBYE+`$qeiilo
%"kW"tTDenBs)&h+W\YWVpJF^ujb*Y=OpiW7,Fh*jebn#K9&MD>Ehh?geJ^kMXgkLpR%;ef#8)(.RnGHuTV2Qh3D5Q0We,KXG>SLp
%ZScL0e5#&_c3QZ"G5krU8&8n^BZ?7RBdU:$)2p7dJo.q$rV7&UGSq8_7SJJ1Z]A)]1em.hGDL:WHlsCn@L?d"kf495fi92,$["_a
%JrUL^aONXNB0J?''QIcAT61K)>m!u9(4f.d]*Tr+V`-2*7)Z"sVJMmi)VS/=)u:[Rr(%_/EKB/iV?a@mrg\MWALnhVcppLNj`PVk
%k3;WU!tL],+"9JmI9k%4,G/kIAVJr$c#kGkj$OjJ2L"bM/]Xj'$54#K'Pj02O1kD%SoTb>CHM[G.",Bi=6t@-.VE]hHt*4*]:Qa[
%f.;FrLr[S!F.h%tKOT:Mm?F!:7(O&ZDLj;^1_eb+TsmU^Y6mS[r:4i&4J(_2H12)\0EEOnb*J!FQ&dLe5faP\&@dMF72Aq(:Sn#B
%MU4GWp0XRI,DL$JB7fES7ocZl`"A9)#AdfsPW]@1%oSlsjX)W&=/K/%ob%DE*_R1LO_7Mtp@oe7N0EPJX+LXS?Sc3NDEF/$2`?RU
%8!G&D.VVs_DBK9:W@b65fiBu@2oKIn*B`J(_<JVjK9n9_dd$W$9):`Q,YN0^]*eB_l^8!._lr4do@f3!I;s.gS8Nnf!6(ekN8#_t
%qusE8'`&Q>KSNn"&UGWW)e$M)MfkQECpVK](bbCsKd::$g=G:cd_CM7Nffd;rGrZkUK[QA\=A`+a5)@]4s[g3R5V'+Dc'6a,%Zh)
%4V#^ic9JV;n1.Q<C_!\OY7^B3jZM*DV&<0M2iT4X'=DO]:XnR`:of.$q>W&cRdPa06H+'$<oNkZM0#Y)Pr_![+A$gKF#@R<*sY`f
%b9&3E6E0'36.J\P%-;\j=t[IO*4kY_T#97WqT5B*"NqhX(,SS-8Zi,R$];61YP;<)Mp&7:RXs2SE6Fa8K8TefU+`%?6Pd$Ir[0i\
%En&g*_U^"a/h=NDC6C9^CY#-G&h+(71=C'3SI!'eZc*('*_a):I%-'95V^B'8ms1%B!3M1iF0#hKL]^2nk#V7AH">q)<M8XG1.2]
%QRP^P1>r]6h!&Qrp&EG#&%-nIK8>/QXc\RNe;-,HdUOtP[EdBXr,+4p2CVq/K0OR^%&_TfUi#L"i#AZrk4D\3/XO_FH!_L\?V5Ra
%]AmLOSRGJ6$5R&;!_p-`gU.2U3nhH\')f>rJWN,=EU'Eb3KPA6AX9Q=N_kGp3W',6N#lD.$FeKI0*_$Ci][gBJ8*Gu0ZlG?@_TVC
%NKkR@?=*rt)<fp#Q"jV<1c_du%4T15X!X#SP.dBP1>k<LF=O\l,@/`"Q_KjgnC#mLCg3_81.bc(LX]]A^.#Ihg_ea7\u_"':)#An
%Kd*\67H99o_5-SV+Z2*"k`4MF0t%-jJ(pc:L@)_KkN,+(e0BIP*H$pq9"kcfg?-P,[=(6=e:@=^`lns4e3DJUaMG:8QHofXo_X`Y
%^=@0HD1]o2T=TRB8Tt6PLPR(ag[gLUZ#5uo35^Rr&Z)-9UtPVU>-3d+7.EmVU)Zqhq)+nbb+]oF$$"ImVD1\0cS,PV'n;C](La#k
%g+<N1Gq(te_n?\"LdW!cBhJfmj5d$,G4c/=iaRXu%\$-#ICDtKXCYXZF>,h?o7<$pqkXiNaCj^!_O&0X*V:2[<N;<=6m3!l(6NoQ
%c!"qJPtm<jAXd7s5.#.roD3^Ao5.t0jC/%.+e3Hq*&KWdNc+1uUK\DT@i,`7[9IA?r%=ST#>Zfq:@L>LjqpsT8ni\'pUp*ff<@iM
%+I#'XTPj*cGReC"JQdk7bh2%EXWlq,XZ-":_2EV[$k<r0`1u%=/SQ\hBXf4@[6dI1<=?:96k42JNPa*nYTp^4C(P.JbiLoW-jF4R
%r")5N??.3cp(^K?OljCAZnHW"C*d#sH;r4R5M)q:6$H*srat)Z:_9=fk;TcmhI?KIM4gcQ\A^(!p@UbC13NXr`5&!^&h7*X8()s/
%)jC)`oF^,^!<PRG82WM&fj*@12qdG*QHsfI2aiGaOJ.f$\$eZS\V7<@.J`0_2c0!4=\d#K/^bT^A'2a8[!"L8r(U3to^msm3bV!B
%rnR+S90,f*Fbbrqb5h`3<&"mk#rTj8@h$uh@[#l`bkT[//tI<6g5$7VXK@Sp*r(<H9Wd^R)]mePoCXjLd[?9m]:#l()6<,8Q\c_@
%md_Qgl+aR3^V1kbRbrO75>6JqZ+ZMBF(b**A0]#]I:*"!3"psij"/5+GT=h=URUF=]$Ydf[B]s[7TCS$3+sQ$J6l=lGY7b"ibhWT
%qYWG>MUTi+SjhgP\b9/e2%f>#&'q^pLIgiRH0duZ,!(MRr4D-Y\D6KEgOAL>rI,kaamF$)nGi)=hu*0irp_;Yi(&6?%:$F!rPa9`
%m;N!E+27UM+0K#V%siGJJU:JRi[irZ?9\DOA!iV7ci28JrqcK5pO@B**&h@Y!%C1#qVa1.h=DI:3/j2rgdbe#$c:o7`TP0n-00cD
%GJ-eTV!#laYSsV(4dZ2"O_C9YHCn$%S#A]bqB9L6qX+)rc_@HDHR1gVp@IZ(li6dkf,Ng,^?=B:^Vo5OYM]&s55E[p'3a)e;ZHIb
%8RRU&X(@,$Ym@64@%;mR<H/-o_J]udba<c(V1;Pr'UgNNF<tT$FJu0[$E$mDE;4j&,L!t`$"uiW,!+q!gnm;L/aOVrjse0#_-f$7
%I?Au2Zr*OPY:mp\fil(8aL,[j`]IM&kIA:;Q,`-@9sbf6\4cqsPW=kajQkaM)J/!a$&kUclWFsZU4c&=o5PuVQE!,9<eRhZr0eZc
%I$P79'4?dEB>CNMF*kD8b:-V,?juoHqSJTN]3P:s#Lt<.E[-an5/!=Mr-$48DPn'/P/aQ'mmM1A9kWt\K:X:Tq#'YXWU&]P8l"XB
%;ECH?/31akZOG/gh^l\:oraVV3=4$diG&S#G0\VPCAq:Aj`5JH@/JJU\e_EoWF^16StH"O>No<9<tDk.`7On]lP"q]R@k`.>J*Na
%U(MpaHP8(k]XiL=E_T&q.]_/\ShSjj+:>%/*OGbDX`QaY;h7_C9g^#r]?Ot0G/33T&SE(`Og,`U59+CRWBB)+9!k25[Em9;V:5&K
%T5R6W/<TV+kFNm#I3.>.LX3/D\_ZTGrV@!,jS`f'Q2f3fR9+mTeBFsX@<1M\T.iD]YQFDBJ8k2Q8np-nqlch=oZVej4hVgI+MA]W
%.CreJQQJE+pZ6R"U@m<reH=>U,lh#U'1f:_I%4,W]6Z(oI"%'um9[Qrf,nX&Hqn5-&ggd1eD78<O+`Dd+'5p).uaCMnm-8;+M[aF
%A#I?.q5<d,MB;Ki[tVh@1SNH.h":Yd8=54&++IZ,=&XQ2N"8`)hHqnEnfPGNDKaP@?8=IOl3Au2RpG]>Qd(Fo[9jJ)_6W)hXF\4#
%:SlEY.!Du-3:Wh`ri3Y2lmM;bTU4&D2>2A'M"^q!:XHX)i?2<=8HOYUfFHLGapA.mi_!Cm[NN#!\J^/F\]Ut.Sg*nTI8IIZ8X]6f
%lJcir/()mgYGEtfX1OqknEO"<)Rt9e>H_sn['rNmNKgkXRK<5S/=:FSJJAP<eG8;(S?0@`@B#$dAG,4TYV\98m8"m@j8aMeq*hJ4
%<tk-U^!,:'bqAVbr6Xa?;2H:%RidsHAp8C0B@6BnYG>r]cZ_J.iROu8cIU>7/ZuM']no1Gr7ItX7J((;QN@'[kp9a/,:?SVo"!oW
%=W`o55)W2HG2B6s47V8'f2=scJ58Ab8ipUS;p"J$Cn5GQSR8mPQ$TcLdCX+-"/reXm3s@&?S'VR=&PdLLZ.Xl)-;tY(@HARNH\;f
%rUd"DNW8R7:&6;lhpspDAMV?<N^uGj"a3!=g-=?^5]`rue!5(Wda!KbQbJ6N*!*&b\mSlYeJjU/`j3NhZ4_$n%j9Y)$N!pc"++Rr
%ke4@Z!F*FRZL(3'.Hr,DBhfEcip&j.mM<cfs.(b[J4/\fVC=?:;?C7_JCd@<kN5S_JKh2dU/9c5c1g8r'H)^4-R8G11ogai"pM=6
%Qh<o"I#4^9;iu-c'IFi0G*;*Po7?$G.g-CaSaEhU=u?*dc,9$-.a;%U209JcS8NYPmFn"l166FC#H0*g\!l#^RW1,L3RLF;31V]u
%RQap90uHmS;-$Sp2LGNuN?JA.F[0>ukb>hY)D3brmBmlFHD)']Mlq@'K)+R4HA5666s[k:%3W,s-=s,lG)#9,fD#T])j=_T;[`OM
%mL;^?3@7'X&MpH:NV3o)?>-H>Nt63&3+">l3(eeUK'kHf`=F`8n"X07ZXP+4?u/PBgauHhU?S,uBk#[BgA>WBErm`o!P<(&-;\?/
%T8[Zc>tK)(;X2V,2#l#u3[gVG,l:cu'TE<dTE--.*lt=f7oA13[4/;&Ahm<WA,2'm'Sbk.G67ibd*W%?LZr0ggOU79=qhU[:]!(!
%M[<8)J8*1O7(oa1m9<^VZ1MV]i^3]_^,K9VYfMpJgF;>#.Tf\9;En"obRu.t@t_s'5L:"XP@hrs*X0;?'^YomVJ)#7]h2Wr#UBam
%T$tPAFoa*)=caq7ZKSips0kjGZq<*"ecNeU].YZ;47A8,6s4JDZ;X)oUb"e$Xf`?ZQ#\nPd/^fc3e4.1)^!89]XTepF8!E1h!G7]
%iAekC%ai`=9fRKV&K__L\>8bN&CSeRUWL2.CQ#'gZe=$0!qn-*Tf0`uc@X2cXmQ"t]d\D#9%/m7g'"ZB`_Mk/?!XiP5@O2Z&<=QQ
%D:Gi`LB2iq.$`Kg.VeHEF0sh^C>bR(Xa=D_]=b)Q;p1HiH#@$)+=\/^2l[g2L0.#J.V,9SrA`pe+(-9M>@FL+!](22%O'9f[6V'U
%?VMgZNP,GFSnQ@bUmJu5ZX@88)L'[c,Gn?g&==EVb4Li,Mmih\!r*)pMO3'!Bt&Z+*A'eeNCeDsT$PFS*<8!%'1.J\ASugQ5p/SI
%7Z'?S6oe?ZkroWa#DTO$EB=0WF8/G@E.QfI;7l([knjp>L]Z#Dr'Jn`-/mhngH`eHr5p@!`^u`Jf5^2^qk%<A*J:7JQRl4DM^a>?
%;s`8Qn>G%#()V/Of^-X'KNK38H=G0h6#TB$[I%H$;a\]XWIu"'KMZaoFDLrR=3cidHC.V9\2*P"8rqu:!@Uf.HhS0WEhqRd@p=kr
%@K*oGa01,;IgjBa`n,O,B,]DB2/pbXbO7T,q<"ih+-i!E1Y?DoEIj)',FHo-%j?U+!CC(,!'k9.CsX8[kJ^l9g\",?:5#1UEo:V&
%M64K^(G7ZJdBnlQQt9>$"pNgH;^g8M[W(]S>sh/.[br6eR^[fk%(SlY>R6V3Bl4<;Ka9nnN`o,='%(R>!5&+i_V;^+Q(Pq_TTB=N
%:E*k>DCs;#c%tt]YV!(!V`-peHh9?`%O%Zkq:u1Lr)!mGQ"Tu996,h^@#Z0`+094`a'h1J>&`1o$diMgTN[3)aCYO`CKaCp:mDf0
%l6Em==L-QiWaN@8-s-u1G?C'r*FH"$mgIR+,2%W5I&-J9j?o+l;iCT(EjtRV1i:Y1g;H$Jl)\ZrHF@Q*DJZ_bJH=@)OnA+D=!jY-
%6SrIhUdJ%kH\4(!lf`jjEZ4@8ee0Qm(/\Tt7K'`Gn\(h6`e,[5\CP0om!e\<l=^5i<-5+MrOqpL,=d`R&S\j%BKU0aJfb+.(fW_d
%\%8T#:rlHUF[Z%%9A@#3<J=up+O',5m7,b[%0Ie*gCulc(9HRB)V0_M^"BDC:dJ#>Vng/<B8Y#sjniQ:nW3LE/.h)Or,biU3J&#t
%fIblR%`d47p05S/n>&c_'(E!BiZCZsXp;QlOJ%[W>%3+e'tIkdU6N(GbOiBM@Ze'H.B>bVX\e(`?DsKF*9%haCZ&nIIV@5eTeqY/
%3$EPD@osncI-+2sj^XY_=a^iFdc5:bqXE]FW#$22!rrg@53!IUU:Wl<?u0!-G45$NcUN=>Zp6H[mSs)pW%\j<^=.CU[8CX0$7sF*
%k4;,gHjD>>P<I_\RjH"o464.tPI:V)VY3=8#YK`eo@;B^io,:WmceB#^-R!=arD63J5%#%HSBe?\dNZk4sFF$f2iIXSU--hRA\'s
%au9fU#\'5*0nn8./qZC-hL'<>>J/[$D'Er,pZO>\goG^uPn4mXi(gC9#9W&_oM4]Li#*P)8:VWbO8"d*k(#%R[lLP1bp)lX6[6+?
%Fa<D0Q;2D%NQrbLGqT!2AW^u^QEa-"^Y6(SM+:%VC(XL3'&+/gS!Tn6eT!FT0t2\3DYU`&QEU^]LR+N<LdrM/psJ7%.-+^NkMT%h
%U[4NI\CfBEbuiQ.;\P0W2W"kSn^udlD%.N$_%,"D#Cpm:?T(o&!".CU<.PUKX+k/*<'OO,*3<i6!.Di3?hfIIMY/iiD-$l[1e$*`
%St\0]C?Z?7Z=9BXXLrhuW3>D>BFjjOpr>::M9ScPAoVn@T#<]%^]]kgjmISn?)-LpCr'=84SlnF8e2n1h0P!uNI\u1Xj6(sVIVjM
%"G30W*STo2[3^u-:b`r3#L-!=F/L''Y_@H*Acl*2pHSB7Dge_CDcQFiH&*aA:#<0A6.6_#;1%on8HntCNM%?TUuLabG'iaWH9Q/_
%"@5a<%#sX*TPL8@<W(Le<mL1M+(Z.NEX!JW:e3c'-SETF(kB@5149<"2]7RLd!fg<:nQOIkbu$:p`2hJe;T$mWd25^Gd&rTL/DXS
%8CuV)>Ats]Q>Iec?`@97'1jjd]d$$k:"0$3,DZ%bmmh8]VXe3.4^j`RXE't)4gtHKfKJSVNoH`c'^`Sh@_dghLo0rfa*N-OiRtQ(
%""rJ:0*'7]Z1`4Uq:_q'KkBA(Lh'3_Cp%KnEtH"`@,HH;::i0IAY,frPWJE'P^D]gE@L!@deh:&U1Vkd@oB4cL.Q6,(.Gc+;PmS8
%a!Fj7E3cu(1<oAu_7mFH0iR'k*\nX)[&K[Q8qDGL'aC%'YmfdlTBr-nAuRFY[png0YBuLmQgSN<YSngR5C`R'rT_cZ2%:7gA&eKq
%fo[qJbY+)oVflb/k$<R5_Dh^J[tq^kL:l=<Q5B)?NL8b,"$Z6sF-@,jYA`t<Q)c"dI"1n&hgbNmhu@/gofrH9c[N<p7?rB"m<;oc
%o@mWe.&_N9h>dDf'NaEU?hK?7rUJWLcTf?j5ON7_]u&80^<qu^>J=04Hi91iQ.(2$2!IMjk3^c+cW'a,A(uInf\V)5p"6]Gd4gEg
%Sj,'MS'#=OHGFIa7t5s<(]uP&V.i!Is7(4T2THmj)u"i-;qeol<A%YWk'l^gLM$OsD#,aVc'M'fGD5Xd[o,DAgMF7<*bQCahHroq
%ViQPBH6qsg9SS"T%p8Q.Lg-BTEW?IXI`gN$1J\TF@Bkag8NB)dE:P[VQp.<:QM^?mY(c&Kim&A9jXm'1aFUj`BD1V1^lVA=FZm*1
%VIt!rO]1Nr>[I5HrUV:@*qO\ahjrtZLJ=SK3-HFMTZr!%d-UF.7e?0mIOd2N?)W>u03m0pG%BDnKXAh_!M6K4noXog:H)!S=aX-[
%TLRGaNaprLX%^r1j.j'B&cM8BNrJ=[A%4!/rRHNrnV>0VU!_c.pQl!VbCTO(4E+_J[eB6.-Z5-X]tN[K`VKDPO0;>a9*M3mqe(05
%rqPb'c]b-TFXRrk52P1Q8Man;juC&Q.lDG<+o14X:\X>WoZ9VKo9$dtA>T-@gH<!Y`REXeHTKnR?=Zu#'cNf;KD[D'\:/oP^A1"r
%]WVrQ@s>nYRloNApXAkk1QL$XR;]`P+<]&67a0k'1o&53P#b8rd\76<*H>>i,N>ED+!fN`JjGAIjkn1L,HZ#d&-0Wh6lRe_Sf_h\
%Orm4l!.RPZ"\=,J\i6IIIG:MkZ-AO`1=cs8`,U"NTGEM!=dAs\WreX'cegp&iOJTc#`VC<oWaSX&$1>O5?r^+q1nk5i8tR%TD\[E
%SmKsff,2p^0!alfcDQQ)g['"rmJO).2fq3j;ENX+ROiXV_BL8@![@nGN<UftqqK):MI3H!K%npn:U`:YJGACV?`^Uf<n^?o8gA+M
%g)K&r%FuU58)@^O;67B*&-)Nd2!K&0T9G9.#iLnK`g0?N&c`68j`6KOn.\+CLi6&LkF6iaI!q23g?X[jqPe24/=>'oI8$r)NEWj$
%BJ58CqXu6X;kUK[r_3!OA[*(f\,,D7^=?SPBl,<QD6=W(IIZu)^?DaRqWk&V^VE@H53ZF*rqataId6cf1/]9fDtV^NI&k"mi]Deg
%=,Q:Wq"c=Eo[aoXoi'=H-2Ij2PktAgJ,Q?Vr7"2)APq<=+Z*Hl*Y_^j=)shT="jS^gmi[jgMC8bg?GhhIj5-HT)O$M)k:XfB^I4m
%Dp.$cI>^pGc[UJB[Eum8F)Uoq')4JrpSRaDV\chVgu7@s4,dBjHSOknJElSVLCNV3hV*m7?Z,CUY@Zrg5rLkmgaFm1)usiekDla&
%(hgT*c.p-$84-(qek&d:D5WX]OXW\-SWFnc9rgcC-OlAbjjC"QGWH]!74;/?UZ`#4KHdX]eRB($A6,`)()15^JnB;a."Jdr>?8j>
%CZcr'K_r2]H.kPiZ:ulki4IkQUj"iaOC_Yf#+^4oAHUdR<d-q6S__<-C^XCOZ?rKo\Ar[5lMc@mWV^LplDs[t*8FCB?\"b-#GF.X
%jZ\M%>9MYej0Fjb`-Fi5j`%?SZS$#+LsH'D<QH3C9Ff]SW%"W!QS*)Y2!pNRkLFa@VJ,GB;3ejCK)K=dl%g'E\Vc(Y4'/5VOmOjK
%3_jsD.W<^M4f^GtkiYgUme#qse1S-'k]"X!q*Cca8M8Z+7EQE,!6&pEU3@OtJmrU#TnqM/]<,h2#Ta&^coE%5/ZcCtCtS@.R^=*@
%M9!8+[b2E(%B3T*iX6`KnmBd-,CDDTD>:^MA**OY!iVSGmF8sU>n)7;.6B9/kPn_1*i02k006q3f@/j4L*Eh:KMeHu7ll=&I\>,r
%k..qN"C(%CC6(j+kb><`\q3A`7DhlR)'<:4*maln5?%\:JO8T5%@VGE'tP<;-5_N:Eu@#kZNiYpF$(hQ9Ecd+YY8PR>4X?j]AgAo
%]B1AE@&O)D2s2(p&Xr"G(0Afg)=c)t5HoR$*F_Ab%4AMRKe*Ju`'tuH4o]Vl/kS<S9'=XpE_u[dY81*N.RX<=[gq&.;>WYCFFRjN
%$0`]iF?pS(7"gTWC'u0fgc`/f6!C\tK7<)q?WTT@//"6D/GjY%";H,9#NglJ0'S/=JAI6dCZs.*8:W9c`@cI&;Q]?f,dH`Wm6^d6
%oFg$9b'LKmhVPV+V+'.h@Zqk\;HKfjILNqt[UG^7Y:o!.eh(=O9IU+"LMX*q!Xhdc)g[-aF\WOdfk=c"9>/Im-T)!bOl?LE;nt\!
%d\^(:+t;SsQTr\Xd>+fJ%V0S48c1PZ..JEZP)+&4EpR<+32ul9o#+C8%6GMSPZZ4scHRpmHT?-IK>O@/,fdDEl0DS/D*PWfVS58i
%J<<Y`1i('2!+&Dp#3Y2Z%Li7?q-[WN)%0-4#2"G5/sql1SVJ:UHt%k.N;_)=!iiN02`3r,P9JjcVtQr1;^dgYK9^=lA&-2k>BCnS
%5tgqX!:X6n3G*/1QQDSM6AeU#/rr(W\6GL"b[q>eNe"1Pqe?,'#I7P+D#=`_jNtWJWO]R537rPg-p*hWKF93:NJ#)nm,A1ZZHQ?u
%_db6UVZ70aZ?1sSjGW;s6rO90`0:]Z'Q&9,jW'5ekc<m1VnBU:&Ka_Z@OQ5kK9G9HK:$4tFNZ/,C+-=sJOM*TOHD8@R.uE6VC^A@
%3DUf_N'<JZ3Tn+aLQ&Q$),Q"FZQWM*Uf*`FTQ[AZQ;%PX.t1)dR.LiL1`pDKV^:aVUV4R,Y&28(,^D%[Lc+DgVKdQp<-kL;._#gk
%dm8hIC^:Y1lqQ5-aH!SoFR66efCdT^'$[kQ)H>%Ed2-L3fUDI=oomPPj+FKi@9HDm[Fg<<>(V+6b0S$ELMXG>P-L'q[[49dHGj/6
%<j4efcj29H*$n*3L>+<=B(pP1k#?[(4UOS;8L<6!?8d.sZ?qC=.%gY,IfZRpNs@\'&-Z!H[VE]!I%Y1&pa0(o!14u>b9W-?fO&`d
%+&3(MeGG>GJ^VZkC-WDRq']?P.JV?m4ZRjnJW0pZ8;t`nmUdP?8RsObLHQl'On'8)TnQ2Pkhe9k9_T]!>CM;Td"]+0d#dS/ICWP_
%bQsXBH?EA?D@RN$JfA-I@7dja)?QYJ=8Xu2HKT[82O55K7PLLZqqH4(fST$CC!iXLp8c$.,08.Pr=pWkg.n,,)Ml)]&_K2:N.Z;D
%:Y)=*Brc'h"&7:>Z!Y#f-)G]*QZaGAR3lHn!4P3H-!!=s>#Oo):>="L'c4<Z507Wli]K=)=@j@3,=S#S#cARpV(>"^qAHV/2=<dB
%5ffh$EJ?DR_nrK4#ZTqkYcsF*j-1R12&K>)P68M(Ss6LcOsN2nVs3$X:+,B9HMu]L3rRN7\,r\1?%VaSl;\B3B,gALLEWs/J#Ui2
%N^<0X<Ba]PE$>j-8b!7G!eHV=)+g&GejJiu`&\ig;\_+S+iY4P[g[6"-;b<fPe/"`"6H3#$IW*^ILr!SWp7/hR(:0j12VX^_l,-J
%?YL/6TT,Q;:I4TJmBW$5JXnr[S#86PCj[f%QO=a9POM!S,d8^c8Y?KODqKTXo&3"*TbN9Aj!9e(lS_..@,$\bd<MTqL>s\kQq1TS
%rC''DNKOud--lF/HD"BFG#fe]:-<2ig&W<$BcF9pRZ-jZ>$e?;1bhML>\3)2[huUo'Rj%aQ9gI;OOsktkSOSp<F;oYVL?CN^?&;K
%U_T5I.0ll5D=b%g;?+2@Y]OtBSU,`FW!^mM5!kbL:O7gf(P<Ak?!d"^>LeG/0_6kD!KuhidM[lD6f38/X6OH+R]]AEZJ/r)6f,*b
%S%Ydo=P$$d_&HmHh5J.9IjM6aKV]:jDHGgA4rnF2#Z%B:\cCR/FJYnDAB3[^eX*:D+=Wm0j:RsGqEfS>@&1f]?\U[,0c\d'c?EI/
%CTN1meEhO$<nYMI?Ytik?k_OrmTYniL-?]12)rQ?!f2F`B.4fL0i?QjJ"\8SWf;J3Xo)>C:Sk5OpH[.-f--NO,6lf-^LZWY)r^DP
%Ig4Qb*d^,DD42@D'g9EbP!.Yu';]Li/FDD9,N;I(Ha8O9ZY:8,!0^U=;&,irfbg;N\8aAKX?:c.B.0>e3X-R`&Xs-l/o[.@WnJ*A
%@m<1$a<<76*`il-HE,\/Wu#p.O0Ln(I/5UAk;<).Bs&>0d'jCQ^I%C44"ghp:>daV%OF6G'L&_%])'6bPGA1m,0$m6r,qF<*HNan
%m,c%SW!0D#_^bm5daJE%NHY/KRS7.'e>ZKoT.V"peiCtMJPWVtj)eNI5-V^WZ:a'BLWj(BcIjI?P696f_AI'f[*+A32U-6l6lY/R
%']GTD``eCC@('.MY#7,B#@:;'05I%;]V`3X#0djVXcmO-Y??'V"AL;5!siN^,.q-ohd2:aF=a%I,0Bd/N)q!=9Xq0%kWlZ:7iZ?9
%!b75?L*pSKp(=t,$RMgmX$Cg$&&;@^.A6%g]%E#SpZ4>bTNX4(^q&a76<b!bL't`*$'sDXiuY4RVp3S(FCDMMA%rS9Rtm$,C\ECa
%kft#RNoHhShFeudTd'kAL]fRu8G^9U7,bOjHG5f9fheT.G,BCAB&acIAe0O5W82kBi5B&b/ERPs0SU"?A%$daEgpr4S-E&(@OrE^
%T^1uS:.c2eQ=@H6nPgHP/S>>mnrRf*W<Do6!WaOu$O/knm65u38DFfb<V(\jG#2p%fe78SAV"Z'A77\6DiS>fnl+%pCZ+><n_9)l
%:>a\>)G_>=Yc)8**>"F85X@\A!AiYdiqrnA,^d1li\n"4oVKCm'3WuVS_W[P`H/[RY-KCtcj%EZ(ncAYl_$LW/'N>W$\+0qedWaP
%:tYeA`fZ=.A[jj.%$qmL,1bFq_rY5q<(ihc\Cn<[Pj$<VI(ttW$,DP\bT(<BROitt[uaTh,IBhpas8sf=K<<.AAl3Q[*f)1LDG2E
%Sq\u&9$#'8$"Ahr5/"VPXF16;kVO2<%tJkh;)b4Cg2Gn(Yir":Lf&,'Erc3dknDi.S+sh`1Nd2&7'(!:-_nU6S/\m0ndREhNiLpZ
%N+$QWNOfP?oUh"OFD'aM047@Jl-7imT?.@S5fFVLO:2pJ83\d5Bk<Ic<8JhI,%[XEW<DM1IUNi]G,tnM?<.C7Z,t80U27niLOOJD
%Ys*=u_AjhUEtjn9Bd$*4H<[B:@Db`$i]08cNB!;YcV\]eW^mG/^!,;'\kf"W90>.DUR8dR"Ph;Me.j:iXNUmsAT/Dg$#Qu/@"b[b
%4J%hAB'lpR>k=Vf#)#Y[38jP/#;0,V;^:=J1K%T*M:dd0FP<C_-[S7]nEZp;.^\Z\7U:-t4+u5&Y8Fq.Q>Cjb,@n28.h0_LZ-n1@
%R&Deu[%0FPVjF[M`lIEh)ehah!$]\)+8\ghcYsFZD%"O%lU%]DP2bFEl\jlZaS)3Jr&4D`r3BdrS#%g:An^5te:$25pF2L3NqX6E
%.Di=-9D!L#kVdMN#@T<g%m\%Wh==#UpQ?@gOf^XFC=8uqN*Ita]jluO-%&"<r;!2d^=Kd'73tiX2,%Vd]oEjO(p^&Zo`q7#>o58I
%4h^,h!8D7a#^s2TjkLP5J55Zp15'lG?i=J'D1;kLqD:;1S+k-tkIt<K_(J>35/UtZ?@6W&@<"YL%r,:/YX$?@->SHZ$'&7^B3FjN
%StUINKJs+3#A7-P(,0),c_mm!9auLQ>XDWZA=d'Ybl-p,i@r7"-9f<%DgPhU2/`qiE"AUR'[OLqo&rIgk^;qRZ*g9jY)Q45WD0#/
%G8KY8F*kX^Z"3NTpb[tg).gcM63hYD>0+,l(+3@(FoAJ%#]g4JI)NBGQ?nq<\<D7H)[X;O-^^-!f9p3hpDOV]_:P0e!4hTh=oH7J
%-%17ng/jYt,@5jp`ZD[KY5T*t(I)7_339b4OKdbYpK-K1^P=]Ognek7lPf[3Ip>66s%,@n+bE=!9b4$bF_SWg<m?!0B_S>VWtE-Z
%@@ZjFnn5QbKCh^X/-">XEqL@4.E/V*%4_N0dslW/mS&[u/HN?`V4Hf_@%lb?3B+_p]];SYg4@2j(df)&>e$,'*JJ=UF[[ZLOu:&a
%8UrBHm,iimAp&-P:u8R]([=O=Z?=1XWl0LbK]fVH,3WMI=eiP)LsM@1iU$=m@i\+i>ofDi]n$4->EVZT/WSsW2"*&7*g8V<3%m3D
%>0jOu^`0R[7sq%%)'YQ>]O-)qYEqUZ`1NsmATuuKOa:U<+njN8+7_EX:/>c9Sou@i&oF_3(QW\W]^J;;_/8G,&VW5u:Z5/5l_1-"
%[P[-.o>&3Pb2+\/C!"UeO=Js\6%.Nh#SYI(M@2W/#fRskq3bQG4kenU)V(`#!?/R=)N"u_iC3Qf&ab^6X-TE\X648jWp3hmF30#Y
%lZ/c_Umr/^=t!L#HhD.$(Y=8$4OH1S6M0FHlHO1^Um#\%JNi?M2CB_8oNj1gFL++O+"RK$QEM,9UIsdL`^4!Me?`NY5AA6$%4rC;
%Rh8a'b]\-TZLh0!K/IK4L0d`$W^4LFTA?Rr'RpHW%'#GY:=ZDk\A;hs=S%1aU/pS&rco:9W"?)I_EBBLqrMe;(P3a'QE.Qsc;RK3
%9M_:\RJ`K8mlWQ$hFMACe_3,PLX:^X"tc.mY,F6oY?BD+\;\MHJJ)h)8Z&e**-&(&J`qVR>IB$`nnE00E"e9a[.^hbK5C/nbgja=
%^Ue#Q#qHS!Hln[WgjOPN5bFO\mj3q3Sa&B@:tlbgA_<+7*-038S5s@6l?&B5k?/noh:d]C$LcpHakJQXG-edV+M'.KQ;"A.cfn`I
%#W7crgOHu^V;[aghc*7Z=k%Q>a6ML&ZQ!Y0%-]`HX\>_Y35=9X*0E4Y&M*oPZNub2nMF-h\J-PHCK1/gkm(*N&_4NVX)plt:rl.[
%91XNuXS&r&8nO6s0[^5:Ao<WTlKZIdR!NSL'(IqZ^?fiRVSX2e^m\qa0%+*gNurXAa,siCjTodQ]kiX9ou1K93odNF3r;F3Z99;!
%Yd'^0K@4r0lckJ-k7hd%8":7O!]LEJ@a/1S*&36/XI'E[/JGQofhrs(8nq[\o<2Md%f_=apN)#?,)el7djQ*rrWY*0CTQKdW?3Pd
%MFGraYb_'USERP#2(<n\=f6F*09W`^G4H*rMHBu3#8V@X_G?7CN(RZ^rTiH$BMjn4/EJ-b#I5NE)N%q$#T.)&n[k@"I]Q^bD7LSE
%BjMnOdgY06Z>(0,"Cr"0>mc>4cV2"'*44udWgCZ3XY%9:d4^,2B7m;SX"L/M2-SW*gat]JlOj@.jQrV$KcHpL)eQU1bP_#?0BNNO
%mUV>(GT_fQNWn*@_:m1625mU#j&4([X+]2S&s1UQc.peU,t'!GfJog(ZVkC40.!&c+i\4hZHTNhZDk9&4D9!QYL^p1NcC/0P"LSK
%=Q&ULPb_,U8J$/:areABI!UZSc%,CoR]?tH@Z^u2RjdknS>&P_Vf)6b4-$8,XkPn'M7ao,EOp*_]eaF6D7ek//l,)fjkYYni5c+f
%dID<&,_e,!O6\=u"kd[INcEQiSbD`_?MAX=0ELQq\4.7?$(10@3DYuoGj(8N`pL-M3q7g7C12.@qL$EhUVI&Z,!;c)e,J%\,<r]o
%+_$Rh;i^9Wc9U.pZ\fG308B8CqDZmQl2dAa]pkYI)NRg?:a6PC!hE'\1'uuPKSqV1N"iSI!^[,!QB[a&=LDqaTWMhro":L^DRgIU
%q-##5X51Y$II<R-\9"0OL<NP?7m.F#1RT`"'Lhh3CWfkaRh),\=5D/X)eZoj<lZ*Qdg:sC&E[PXfh(F#n9#9s>Ej5/@#lLWeJ-UI
%*-:`<*dIcGQC?.4SS\fu]H-#hQ;IWd%6lJc[\9YS3'$Ct53!',"`c]_nSRBn3Q2ARE0!)CTd-k/QA6YWZGNdFiZ<JQ*4,O=b+j##
%XU^1"V+TKF:JHU4iRG6H@MA-bd!Is5@jocmL'*d/+:rnd%*2\s?<MrDBS6b(PobjA'K$fEE#JIiA>:^u.llV%HE+g1d.NnL:Hu_-
%4"m45]7opAUH/_cCb<>^i+at*D(PgX<*n+O_<)V&U9VbdZL,[^</YF4anmi>3hRkd!4!%YhAcGA'bF&T1:ikBON1G7cP.h5\/pDL
%=@nG9a(e(.-%9m>`3al`ZDtMA#]Fmt6m\nuT>`9nC8>'p!FSp6]u%(eR!!0.MY;_YR'G*snFG\)Dl'Q9_]dSDVKB//@?792_k@t0
%a=ZS[Y[8BnK2(f$Jhj_QIll`QWhDJ^..2JZA5:bE'.^kpOjijXE@9WsEL"_NfXQ(*lF.N49GGX/Z`YE[PZme8=mf4e0%I(YeUdV%
%\0AQ.8uOVMVOZKV;pMpr0h.R.E\$q^[dmZ8^ghXXbg(gelLAI5Im6tUKDmCg/+W\J5=NbObGNBIZ%=4+9uR-UIS@nVP-n0,SE5ru
%K%2UfYi+]EBb0qbDLIO@#Q,l*]\CiR.So(u?BR$$)9uQqb`SZ18k(e+/Wq6p*O[1FmUn2?ESPL8Yn;V1%G>oBY[.60%]ub_C$)b(
%*QIA+%MqNJMnt!eagl%mC,$2*o?Z9[//+_f`67MM$2`A,7XDOYfZ[Afp"20:S3BHr/n#ujSm`kB-&qF'Jkg0r:[Xg7a>A<ma4"?:
%#(&h@]X10_@BQMV*3o('jT9X<rUb2U/GUD!WR)cko,[7/8I4go6b-?6,sNocC0\XZU0JV'bKkh'Lc*Gd4"S7!VoVJ4hI&)4d5hm5
%2/h2LIiZYITO654CDpI^Mc)3_3.hBY`pG(30=DDQB7hr'M'Hp8Z&D%cOuEo:I7XQh6oNARG.BT6!uB/t't$KaKD">]jchaI@unsh
%+Ha2[=jNp(kMnO&77n)S+/72>"i$Z&B8njX4hQ1N8Wij8p<eb!;^O`iFK:Ru*Xa-P`j"JSX)2@s<?a&9pJ@Kj=X44%N=^M8MK[Vn
%_'r>8%O,YWf$:!+A+!ZM#B]M#Da5ZeMrLYZN76_;N2f/,9$Wmr3BqU`N2Y[BL_:bhITS1Yd^M[Pp6"k&Wu7<W]La4jRpD>m.<-fo
%8C_9#,(0j=,[fN_UHiZXGn'"Vkg?YTb206,)(*BVig;)-GImd]1L5s=7^lhk*q%;P]?d;l-'mn/[=`90f_e^`Ck;N3fes:_XL9/'
%$a#sT5&<FkXG:EMWW?;6QC`lbF7c],Dq*$4+O98pX-`"8ScX,5q;#WJ9rg/IWV5R,d:htYS4\=G\JsI!>?gGLTjmg_8,9Ph&:1iD
%@bAsV9p0'&2g6PtXsI20_7])KMkmPZqXo"@JQ3I+%!(i*NkIr>=l%)=5EB(dQ9,>L&\64/[:XeJc6KJ5Ftcf8\"-O%ZqMbT%P%JE
%%raYUCa66a%?SNZ.#4(=q`/b%G9bM*?03_X=-M_qeIY[+f24$Qf'gb=<"J:aO*+C%?^:":cg^)7C51=rr_Y'=&I?hL`Or`:b6LT3
%D4c@_LR2otQ$S7_q;RD.-s3CR9W)V:I_U^0\Lt_omH`bF@\]JGQlQ9L_&MC-,YQbr)P?Zb_`AZ^&h&/eQ9E/PLlX5j<B6D4k3r!q
%BUe#?g+;$%f/h\'X][2Fo&qutnQe*&9$6GpA[:!QO9VbL]b5VhE45t>C$Y%U>ek1oX!fBi,"!pIo^J7)c^Al*]Un`@qc,jN7AQVl
%"*'"Y;Ci3%&Sf7Rcr.h6KeNO2W&l<hRaX?dNP9j3q8BSYBebDRht\qKQMGk^fLZO=kmC\A[[D6W[Q(n)l#%?,V*tU+J5;h%.LJ]l
%J'?l6B(\*&i_DG`]/=cL\$Yo==X#:i[T\u)jm&:mp3;%aqn4u`&/Y-N&U-mG]582>8&1d5U/Z&5o?>aq2?^@3LlcHD[Du''eTIDj
%L3m43Co@Ki)1KCr2Nl3:lggP>UA\qu>nB14Sk:MT$9#u;dh+O9'!YNu"o.[D]o5$`F:La`YH0XD95`FLVW'HE-TWUAL`a&>-&Ohm
%WP.8qmJH#)-L$u;IATYk[]oUrn"kI.HDS=#62^6X+&t/s7bRbMpVkW?[`.]:no$iiq\i]5+qGggVXHR#dBmm#O.cC3^&(C6ME>:n
%1+#8qgf1!&Y0f"1f(Gk1gq$(i]V!g%2i%r<-Li?LN7:$gUU`(Q^C$.SA0/,H4cVmh$/"74?1.VJ@Tl!sLu-H:#/\&X=*tm<2=q_%
%7Np+*MY4,Ds85d9`&GG[I>'98opi%7gpgD.o:4\5/uPJXeU`&%/93`FTQAd`7u2MRCGYm.lDhC`%b95(DWuHRqkS$)S-`XE\+^]D
%a=<\h<;/Ph&/3HTl4uH2D^1to;hP@Qm)cVtdC0cu!kuCRWm`r1280@n-S)Yu>7GaW?gErIk!p@&M7NNu(GnRNmrD&X:JeXZ4ItkW
%W8ME`&FENo6D%WK9"*UTh6J$`@/$^iHFc=l:Y2*n5L<[5f]NOFK[qG/&Sm4YY>3rNT+dRc/(nVm8h>;]bH&+_h!t%VIf89FWCW79
%nT%.b32It:HM/eGDgiSdo1uPrkAnVpDgqPoMpp[Lf=L;XfiTF01EBuMfd53_ci?i6AGT)&k0^>"h^of>J4f1nQP)D=C"CV"r^q$R
%MD;]r[bsuc`pb/IjYe4!V"t*"$Eh;Z+[EUp3KI2*6c9/Zp^oUmU!j/JnXr,5QU2kM%&V]%V(P,/6HrV.3q-KW)]L'J;1/HIW+B,+
%D%Y7%k>hC8/Sm'76Be!G-gNR4mPd`E$LKS)dF%Bt4>epjFE[%t96]7YUBVlq$1h8DF%pEGCo\&]Y$h@WS4#?r(DL&Xjd*G<QF$7D
%@aQ`/J^YG'6?_"a:kIPgY*cjW2LXOJ5SdU#@b(?S9bEut4FENe')hS,@*Z[sKMA&i-Q$A0AAoC6fnC;7G6@a5SL<7m40S?\5JhS@
%TrDqS8P`0,S1FSpKt_!\@3`gMB3>DYIF1=jQeQYZZ#F(o)iVil1YY`HE&O(,aX/$^I7eZ=XHf?]\;n@D35g.E3:3pUk+G<!,!'sU
%F&S>LrKK:P^ci^gVg23<(NSG8Zll3jJl3bmm^3/PTs<l?KMGGJ++scO,j"r'BT7WuW_"r'e@MVBJ[t(*QH9nI?t#g62Sjes=V[,U
%1^CH7&fgPnFlCrJA(?TP.\ZOcRA:&^c]k\>S;qu_nmq1%`?=PAN2pqlLnVj`X\["t0P1E$<]oRLS['1$_1I:3'?ghJmjr&WG[3V[
%Rmi&C;lo9"E(cFGKhY)/PRh8/\fpB-O!pS=0hJdp64;2P]b%_m;&:`unm5Dd*r7E*o7u"Cg:LUM2.isRp`dg6KhLiQ1.fBTW)c12
%ALmA4#"F49IXi-j8uQn*(#E)uT62)YT-0cE%@&if(5s>PKuEZK,1'tf!j[eHN?GlBGP)69Oq#UW`kit\"rZo`GM[kFAOO9M:&;I\
%i&%`nP]!bD!8eLY/*[A%:ED%\WdKc(Jn51rpbCkg2.TGZKi;%3#5oC*)^(IXg>8'o1G[:u(1:;g+167C[]5>R>Qg&6QUh75m3f>h
%dCe9L3`.J^7ncY2lkqL=9F>Joq^LK=M<ou0$_oUkHk&5"TeqtHrq[+=Mj#j_Ya'>2<8oJ0j>5`!C6:#<'lU>(&NV*=8bhF-c7^>>
%H\ucM&eZUG.3`tWa+gKN(m_*@V!PRU)=\Aa44gO(Ze697rtSc@QRf=f'h7FH;6,)Odk)!B-sdbJ=6G#>gBp[_^L6Ea401>BP+E@9
%`(P&m7Mg(TbbuX\ZBumaVE"t/lPXZ[[RqCb7NoF@%FlBdk/(i*lK.\a"(LZSN`\<Jh>lWB&sEUA)>XLr-rS)b=):>'ab)?N6.9k2
%_VK\)lRYo.GKo%Kjd'qqn+aUC9JC^V:c$U5=@bJa[(uQ#MWC(G!"r_r6:rPeN\?'3/;%_8?0S`NMlBc@90fMH[1CIPlT#qP)t^W8
%<?4(G\;^@<4D)SG]0?gL`-2-e].ac$?W#82jX1r['nd9)K\0SM;*8+LibfYn!T`gUM0(\@\U#:[^Q5\%*Ja.rWlueG98P(P#e7i6
%ph5oGWEZ3rheB!dcib[4G#^K+>C0P\cgX4h!bIu0q*=JmOj8VD4jT^%HNC[o64S=W/-<>Ij]*jUHTASHc#7.ff5Gc`]WoM56K<78
%Rs)a.4*i1'%#JmeS<*aU7u1d0WJdj8:j9<T0aZ/!Gq]q%$2hMS4gW=DCfN)"4`-*=l[A/R`%Gn(74ua#^3l$Td*h:,C+9RJLP14I
%-Ha8:`l^F?6AlH38?6@/K.sL/'L$dHbfQRg;r/_)+?PNDj+$K0#>*bXnQ9O%B&6/K$q=BV3cKW)ZjZq]ZuMWNr'k%->RmW]2.=B*
%7Z*gA!+NomPT_Ihb>chmWlQ/AAN7q1^?kr&4(XX)g>]K)kaRsFj0++o5VuJ\m"J+CbPhng:R\PcS2hKg_bIV212CW.4MnAO:FD--
%A#Cm;h/7SZ;h]6W<`+7)>]`.tNC'aklc$o##C3tc3>s,mFNXaMc0/*2+hO<+g\Gdio-0h/qIK4Ke',L_V9!/'m(6,.,Wm]1\\&E=
%%%onf,cnrC%$US;AYni`+AZ$s9(Ks?(dG/Jc6,JCH*^#fYkYYI[`DX5mNWVl\+=X/0"`^raMM4*Rp%5\C_W)Jat/Wqin=H,`8b1^
%@k"Os);JogJo>6_qt3u-Erss69,O5E\i92mioMFIl?plH,n:mlc;(tj)?/YZ!m*`d#;pWNNYZOhq:Z&2A$p-ZLL4f5)un]I5J85G
%1K0W?$h)DOg_.g$5bF6"MpjYZH[&kK>og;,$2"Bc2h1/WTeN;kD'Es#>)Ge(Q;&]k:&^k="+m&"[adL/d`Q1H#No+[:/"Hi5&HVP
%"\oLEcnh,*VZh<&F`!1*s+Q<Y`("`B@Hg9J(:*10X=2>*R;cVD>X0m[5;g$ib2_Lp'PYFg:tie\Z:G.A#:OCQ9?'4,1JK"MSgkKE
%d9qg,]D\gbN33n5;O6"fBh63\E&AT;/liT,&!X?18mZr&YJ6F?Z]:$bZ],U5kR"Y&B0T]WGZ"h^=_US&aDn$3U,7h<:2c\h,i5?i
%1fViq17&S(Sjh!FF(=h*VkQhee2oU&\/GSqoTDn-c-HS=-Er]_,f?X[+3OTZ2\#gO:9e$I<<-Pk54ECb.T.+T=rGk+J&(!Y^WDr*
%T\khk]OCF0?letuH0;bdH\U5Y)1pjiEe.WZ<i1erJ5RRS)i5Mo8Ne(F"r/U!H7Lh6%&BfMW4&#2N<b>K@>YB`]0I%LYlR:D;0V!.
%VRqLqEM@I$Bo/sY.$j<Wh-.>U\PM+o;bKY(_!D_J''$A!W#-(p.a?Ylf)LA&1cX0VbuW:K^imUGM41Yj();IE\VbpA1YJ)d+Bd]S
%^CgN3<\>>R!QA_$DU1<TpHcHuL9a<=nd(A5X_,98:Z'5rD$#aoDY5B2bA):-5.c(+*=`/"'ed>Qp[?<,@R=K2U/U2l^i6)_o+eYc
%-NZH)Gpa[o/P;[oFKTQp1l9[6:>rqRY=q<Egq!_?M0)$-mq\3]l`94E:.'P/iS9$J5\aS$;e^ErPcj.oMSAK";X7Kn1*5Z&,KBTV
%8eAfWOB+8!cKY?(Rg0?EGU=@9DTuE;J!)s>IGeF6E/R.#"OVQ-F^TV$LW?h\CVC-1I,Zcd$hh<^%ufarLBb4kAY./.@d9e?V!(.G
%DZ*3*F<^uBCi>HMHG7FJl1HXBckq2)1&?aS(j3Jl2!LK3N%cf\Hhh[,[ZeZ95Dp012m=.`:"MU&(8F[.LWuV0k$9%,N[\\Q/JmZH
%+H'I&^h5*eQBo'mr(&CAR\VZaElG3s;D]Y-r'4[6gWksOd[$=dD9_\;l,F8MMGEp=N%<RAR^hN0^'su)<a83FHEpiu<8cLcrU`4J
%MbFBS*<&ClS"Hn[I/WZT>orT`0$gibm3oIZj?l#fqosH*'KLdsYKQ6]6ragF`4@g.NKm?*7h2Nq#ESgAh("o;9qLe1qkj(=<5Z^`
%'.BAo2,56)CY&,8@QAPk:"q2Sq1k`[H8)9\Upo4<555hAGW[&drLJ:b3FolEZ9Q/mp(0kQ^%mo3/g#"ARKp$mP(`f5;jQJ^3U8oI
%;t^lF^1>eFIMlcba2NFU/WI>uI+Bt`T:`U&0>60"l0`tl55D:*52QZUcStb\BFA("rcImg@Zk%&DZT&U"9Rsg?D*JuTe)"0eLRN\
%;S"5;07LKVa/ABe(J^lN^>qbJ6QSas$<qfkQ(X4[?UZ`^WBd-1]1m43QtM8Y;KAMI_*NlC6t/Y%SXZ9J*sSNJ?YV_AQ232_&]K]b
%`-tU`Fo1W[;s=*"93`V?(s"M]U*-!%X6\sdhm[o"+t"$XqYAl99S[eX%"mi2"rYTY<8os/nF-A.h625YIf?cSHKU2n9<UPJ]fRbD
%f$F=Shu<&uLK)ucW!4)gg?H!Wk,1T(p+eBdenRM;(`K9B!"r?ZMD'Q"#L#cAN!DE8.mU$$cP6d*d7*nR/Hp@aJ4eebq@<7rf6@"!
%Cje%HIVQl'51<\R0t*O0,N(o%`RlBb9p*HigKIaobmt\>5=o'pl>f/Rg=3Hgf^u3<&\!qGg5GUf=rM.!obV!'E*mp>LG,+^Mrsl8
%BeBs+2`^us7O`9S_=mD+^S$hk&HDZD9)0":G^n_Q.o@;B=6JI08R8,NW[em2s'FofHc#+7^F66<MX.1;\:@.G\\'Z2oqtepIo]^J
%B,/lH@-k@KlP/3SX]/?MnZ@\[/%rO1(VTK1DuJ2XQM<]&nU8ehs"\Tie5M;%T=bV#ARM5(J1jU)p4=D.W.co)&`';!?VsM0$T>^f
%i:eG?i+pfdLg&O6SKJu^Dh>o\4nnd_U$]"#!iA/[82n"QK)jeB\$r6iIe4@bIsm*=[ncYfU_fd16B;K6Rl`!#F],reoAp0P+)7,@
%,Si6[3ZDmm!o-Z5mK"Pik/\(KQOgon?mMdL^&XhZm1]^C[*de:!+nAcBRu@0ki'D!Y5qR(BFWVC"+:t1:`<bTSjV7\]nNBd'85R4
%H,)[ZJ!8AEH[h^/1WY)][;cBI*8KhdBKi3PqLL9D3?pk20dS^S]3X@eAj=SRK&fVN-aa_l2aA0j!-NWPERbqHQ93fts#^:.SKe1#
%[p:0!c?[QT^_'HG,d68h(V'QC-p/TmMfTB7NQf_%4?K'q[UANO@EoB5`UgIFL*b30Q-j-X19^RH2^O%"SG*HDMNAjQ[_qgJdk.g$
%$M<L&`*0qtge[Qj3Yd3i@H,8TPtl<$`fY^%TaK^N+5id[e5VGDQbik_=2DdLO*WnHO:lCQTV==`iG@f^pDI4C&D4[:J-_Pa5[mDi
%p'=idBj:eB-Bf7-K*V0'dLTa*lpkG&6FiW@")p%V#BQ%&P$D3Y"imN3JC*qD!]<AL8LkAH2l6]A^7Re\RBI&oa$*ScU@6bZG<p@o
%*E"W-XU:"#0VPJ;M!DI]jeI7*oF[n3f=0e#6W=>79.@_Gf0p@l*[nY./QH2(pkRu2KM^c\eaJjMJSdF=LGG%UR&e/;/Y[ES5^<Vl
%q7.^1/f[/O`Z[5>?DTBZI6jmYIJQ4LC8"&EC>hG&S_n*_]C-8%%*hYeY,0ZIP$%#"R@thVNQlS"M!iP4CKN`hH0-HIW.'Nolg%Q4
%]H:+g&!8qCFJKmqN"k!(!<f]PAWUsDkN"1I-K,/h!=c<gDEgO@&WCf<=g9P,);A=pYgDG=ktVUiB(Sn9[`=sC.c4A[eP>sKnX4ls
%;ZaJeGeS?=GsB@UHjAS,M.T@T[e1s#8C84sqc:n&"%;YqH7cs7ITk/&>Suh"]-)jP_DXGD;Dt30R)#/lHOA=\#K&KZ_C7BOE05`f
%<@ETrHVn&ISiALflO*I&WklMfm50@qbMKA]#'@9%ABooKi+':L#.Tk<Tn">p?^O5C9fm_;nZP]PH1@b`&YSQ-YLD@E<.O0T0?*8-
%s&$e`!lA@%o05#_-)BZD:5@Ee7>Yb4g:QV0V'A6E=P?'%3`TW>EujZV7%qCaK4K*84rutFe'SLZHdpBj'ek,JlS'bu1;'9V83+(3
%N">%bFB!(@>qcL/F5E)dZCF>SYblVe)A]'uX[R]3^%6VtP1E>Q#<5T%1=E[Oprs:.*RHHrcJ<!HlnGdRCk?M+6L#Wc;J]H.d%I0<
%5LD_W8@0tW`I3>[kH(=2Z&&HhK@0VP2!<QhFjOd4bsb<?.>G>KOt)!A.RRd4AW*_"Zc889`^*p\:gUr6Be3ADBe[n+Q+XQXG'O?1
%cbZ*IYS0lb6N28':`iP17,l,0XHp4#Wi_Ql9GVbIY+JdnoE!2F#?a6(elf*35Wm8]TH1?jBF3V_$`EN6[7+ptV.t^-j0P_DSm>`J
%GG-F>pbc@.$eg2Vce)s+JF8X9WS-)!FOX3#,,fpIjsm>&kZ0:\0470cQF<?]JICT,Zp<sl72eR,Ed0sj]E_q@%gnF7\)2hDmkdJq
%HD-<ZJ9*hl`uG_Z&"CgVO:$(JrNqCG$2=r$4)`H@Dda?9$sEAR^l8W.%.kT8i9=@.9lV`iadek(>MLS"^eUZa1pRama0P/B9aD([
%`;s'VL0"bS(j]r*/VmtQT\b8\OMdYVRf\!>F&M8KP].SA]q594'(ODddj-uN0S=\&\_nt$r?iO'81&;1=+EbVOR&sL*)faC-<cm_
%RXQ15E!n5cV5AOLXo7%//<gm3cY']r!6]o6FMIo93/.L]0qUul$,H[b<'tV7R#@gkN7(LP;ns^^27csZ+pJ[@!,qgtq46!6i#H0l
%*Gmlt0Gr=7Tl_.2QHi8/HiSgBQ."/2Tgk86+&dS=qlTGKF>t&P:JWm+!Q'es::l33&CCO4M0V+rr`]/?MR)F>:)D>*Ef,r4F(ogU
%A8T>9q6hBQh)5tf;1ASTa9gu"Brom-:VelMY\K2`@g1*STT>&'fUVi5/K>K(,k.pPNsF<cUZuG4Mc4>^N'&dI@YQ"B!b0e1NdVJJ
%CF:DHIEQ`lNjC;R=@cS4dI'L6%(m4m8tK)@/hJL%80&2X9YkXMIUI(J8)UqC/I[>0>W>AH7$HePW0<s$X-5eO4k*^s:RClEOk\Z)
%S4mm5A@UO9#='(I7K@7H?Tk8$B'&h>>b`dNf%_8:;qC_P&sQWH4Z*!FTLi>j42Cs%:LRIc#a0hY7RtjlEP?n=`ndQH\epIOakUsK
%]M04g>$q`2_`74s'E?\AJabb!ChJpmm/`_pK:*G_XJt9LfP85G_a?[DW$dicGi.FU'^E+`U?E+/#7;;YQEk`Mom_7r+\W&4,lt!k
%UpSNEWq$o_=s./m!m=uaAIq<C[CC>8KMrm_Vq=Q[;<*?$Xc&k3M4rm,oT%*<9**qOiqHn?N&=\b3C2SnRF;l"XC)R`=\CHAadN-S
%)gm&L:OXdNmHYX>s2GrVj^/-FB;T[aF$+g`$s6>WGL1tpL#h>FH2#<YnuEk:8j3X<qI2C8VdZ_Ll-<I8j9M6>FKVE.aAFR^-'\$;
%IKde#p_=W#HT?qB7*e&]k#0eA_(0tb&RZCW!R\]W;)HR0#ug9iZfDhG-Hku<?jgG$TE,;SDlO*=:!4F0R*/>n?J-ereDMVkJ.9p?
%"Dc`m[9/@-[dBkX69Eckg_<3XI+EU'19\8A?d7(j%hXW4l&:(4!2)uAR!<-J3oYZl#/-D6#SFO5'p^OR>C;sJKr>2NWH6MAkn'3>
%4m'Ghpd0;P\mCcWThY>m.j<WU':6ZT&WQ"TRT"QGNNVUKXIOm[[fj_Kan5`bg7FOH_^tms0enV4_5.e2d`RNTp\#79RAOXi*W_eX
%%ZiCo7n5\7)$0rUS>X^1*Fqg<?!Cp7]Y^E1A1E5UZe+-qB]+5Lh:SBB_iUjDbB2U3'IC6oJ63EYo_imf,rM%<>h"%<ZTHGmcM+c>
%HoJk-_U)SmD+@bhOTYWELC>&(3"QaSBj(.)FR9S<27=8Kh*N12a:67Q%/*$:Fo)c2Wks=)0Fm%G655_$#+fX*9n8<Ha9(A:1f5Hl
%k-Q*EhW;<MM?e#=g\'*=I[&XaLOQDP7R[Wh%*/<+_K.n*H>#8\ETGAYU&u%f5(E@`MEl?DR@Wbl6VfDB,k,qblRLm44[6m;b_>YN
%1r_YuoqM'&n#i8P)5lg7$roeZW%aNe#nF&(.*rM2]h.<bQ=i'g#Es'rS4uDkpj(E$[r][4T/dEd;?[+q8VDj%Y;H.X>%'D5jB^Lm
%\d!Y>Jo7=+mNV@X%P<^5X9$+A(J\b(UW[*]kQLV\qCKM=#Q`-BUcJi0TfnL-JU?Dk!7gTB)$2fY,rZs&4VH+]Jok9=3=L!S?V]*`
%4tZh1`Mm>0k-ibR7W8S;#W9!n,"i"=B"fB5ZPt:%0j9+6$56$?R[b#HKfXG)?4A[FYu+8#q%uu2T#C5I4d>D>YB)+1LE$".oEA's
%9g?T/f"SRO.]h%AJ2D,7C#P>PXYPomqA*9N8-N7]o4Wg\PgalDn69u`.<mPf0i2ln"QXXD%rJ4m`0qTS/5</3c'=.@';@$L0Hs;/
%7)t",%E_K_GNYc^`Ed_BiBt(!/o:XUA@?A[Fuq@CE4G^P%>m$o]3#XccW]NhLd+0^jU!tR?a"a<<YVM`,gHJtR!7@b%i9LB7m'(k
%EF+QGb$]sO[QFZ)3+hT?50AEfKTYJ\Yg'e&AVLC+9#tO)D'oWV\q.&kbM("224MWI:?h?!K$W/9p*&"Q59u#,eC=luH<#@D/c*"/
%oM2?\P*!Z]*fH)F17h\0fLSS3?qtno+=RQ\@**o-U@O!tRC%!#lZq?l";0"p*)AEi<^Jjil$HCi6!IabICG`!$BU>OP'>sZ(dAqQ
%rt2]Eq25,o%^8eD=j,tgOF%$GhjZXA@c#cXcZ='9j38QcSUHNKb8_YY5i&u="0>c&I%I7ooaj@R'RVMpa5l1k.KntApFDeE+<TRt
%?OOJpZm0$n=\o!X6bBkggM*r<h7@n>E5UV]1f8R4n7<KCRS;qr'Te>7h6%n5FOn[8iTq0\8D:!=#T>uQ31/Mu".j&!^.$TTJll!d
%f)[jU%Zd@+/1"'NQJtuV?6ZqqXQTAKXfcm0>A1['C4uM(O-^$QE95Z4VYTMNd(?gffR)!1U8LNN#kTecPk:.DPdoa];IIkm-bDVk
%m)oq6,2`'D)Act>.%^Sg8A:'0%/s,Pf/;(M2Pftoq-j;'Wj:jqjZ60P"22A*qk\PU'eb_)R&KJhUZ+%+g^qDj?0:j\f:+ED6*=[F
%I,*aYK/moMESV/i;N+n#?7K\;BdWXJ*#GEg(c/E#5rQD^*D<fj_rhYq5<fJUP$pn6JdfCAR:FelU0>d4h?t2hC]UT.kI+V3rG0r7
%_omc;o$1KgB)</[Wj^b7OiW>t"70V[47PUeK45MF)GsnZUJD%PAo)`S:$Uf^cOi!;8T2g%rI!mQ,2<1=h2%KB\YY31YA<'d<7([`
%!Aq.\E*p,D5]DbYg?Fdkc=HRVGfV3d/MVjjW$(p<3u*5Y]MV!@rSh2-9R2APWaM7liXC[jO%GF7F7krF(K;!X>2,0C1p[^.2s^q0
%1u)F;j"GoP+7m30r"oD1F8l(*m6prcs77%X$JbOD@UIsN!'$Flf7RM+O9d$[:.d2?aYGmu,Z@fRGqXiC]/q>$\C^+FCueWr1a:S<
%!9`,R[/eX;k,FHPCPa-"K03L!8NFI;&V!Hl<DTX^K;,\1G>Su>DC*[@6=FT[aYT!8eSF159\i;E5)5[oc#;`YfspCJ"=o&]fWZ!)
%dCiEW9!l,BdB6mAB@GMqP)9Zuqa75iU3\E$h)jh9kl+GNT6js56SL6*PiB(hCrFd>QrC;mb(*?KWPa]695qrV9o-Nc[&HmFS=E`<
%G-bOVC/*HTB`*%1dN(Bi&Yg-\OF5^1a9l[CoV0iD2'VqrU``#tVCeU[kGlp7Hn'G6Q`pg2^MZ83QZ+7$Y1r!15tkZ)La39/ShIX0
%W"LIG<)0H$S<H<65;>RFg9!K',X4(4/L<#rc,-1FKF<&]bCho@5Si*WU-hrfbuB=!]D\!$LA`!uPl*qimjIKVm?Ahn('D-o=^<5(
%p47>+LfZE3P%Eu+"(I=Q1UihS!TDd?U!jd"+Q8>]);^JN]1#:qLCJ@7eB5,Q77Z16J[KL>XWLA,:t(bP>,h/2Bo8i]QV?Mu4CEA%
%7lnb^M(K>qgc#KT]N/&H]JVUFf2>&G_beL;?!'t+7ia)HoJ!*W;'7`Mpp:L3@gNcZQDPFl<,*H%V$b\GX:1?%%.[E4&b9jRjt-j3
%#nW7<9`&n:;(4W'8<%k^'^!?0V@ra0?`c_9-^5m'UgO:t<<r^8^An=Mq:JB7p"nNPKMS46XKEu]4D;_:@qD0hLkECW8-"JP7TtZc
%3=MV<(@rIV;;j??W&^tB8Kaq^(j2C5#>0WF,$:)G#rt/ggo<pZBH;Su]B]G<Eu3i"CZ-(??;Q5Ve8OhEH^W#)iFA31QG`GL4/L19
%G.MUkRjX+TQXD_RLnn1-6]q:+:O@ob;>?B!j97\t*AnQdPTqI])\N_pEeUonAU9S=ONGU7$,2-H<:hY_mE(G&T_+aE=`X"[^DoU@
%:#SJ[E<(NGR4TU6-.I!ogE0j07BMj.k2o$(4fN#Ta/tBif]saCX&o`dalJY!Kp&3g^4DS^X4$A(c4/<1@Bl-3&&Y!'C*CQ\eqp,Z
%_jb3TIDA-[h2f*_.$69?0#K=sVprs.Xp'BR9V+A:2_589>XHX%&dFS>7HI(7jC@qSPKT11*2opMXL(t71+3KUPQYjXE=uGOkY^JD
%ZmHWUPG_>A!+;*<6))OFnM5)ZjKole$fG9K()sb6@EouqS9EgqCQsCJ'2/(3Z[?(hQFE%ZJHDdt<d\;ZS:goo8p=-L]R&ODrl&=p
%Z`Hi4Ki1=K8MVSic-EUV?[,=[2NTi+qYpN(GA]R0,hI0f(Vp&I074p>K=G80r*Yk)_a"5<?s>=WKL'rM'2VWEO;u1<hXR_],>Xml
%Vn6`UHUOi5,X<&fT?N7QN7bD=CR&9-g]MCbW!Z]SZ#=/f/U<AT'\\;Y_=B)NU``]6)cEQkL`1!3cLZK[(6UAd">X1@3C/@@<(Rue
%YXI0%ai+QNng=/Tr#M'cK07EB4Kr;$/8l9ZF[td)Up.q:;'9:K;opo.V$)Qub*HkG)a%D!c6eO@`*QBFDb^*g(e,.8=1&`](X\"G
%e?/'QAka!qY6c6Sc<&L#OZ)eW^M)"'n1!K-!>%[7XE'I`o1N&#fL-s$+QmPHc!1%W=(s=*_!fI!gktNsJ'5Pe,(XVX0AF=X'4>3_
%q@lq`r@BOS2'MfkU)tF#S^*O5J45"YbV>):3E$KgU6J5?Z7Gc@Nd5?.^Xj!i^.S\)Z;g)n04M=%n\o,T_fD)&<`F:XQ="hVi2IBg
%domOQkfoFgBKYQWBA`R3^L1"^K^K,T#SGo-4<-'>(`3Ur#O5g26$]B%Z3Z`.%7g04@aM;Rn5[_:Ar&:/DA\=CXC54@_PcT3mOZ&L
%YH[YNZ*Ns-kB%\:*B.-W1lW1/c<EM]eITPbZ)46#kGK,ZBe0AG;T'=Of2(ELU(/b+SsmcA<Ofd^%^j%mgg!@0dhEG2;>N"LhW"FH
%UJd\t9VqOGKU"C'A6R%QY(=63VEe+FWcqeJUBf',9J5LP<-j8L[WE&eBB@+!<i2"`mI:XnaDfS:/PGRc+B)@Ze(0o0PHYJ:aL4Jc
%h,Z"r]!l@S@5!\!ViMi5+sPW90jOGCXRM"_>*YQiKMc_.@l:,XKM2c9^O%X5Q)>B,3d\7?o)XjtO+b^YqM^c*BRSR-'6lMe'#@^9
%-BAR<p;2`eTIZRFng?lR4K4N!M/$-e6n8h8Q>NEib"8)eR1PcDU7.@oLPZ(:)049$:UGMEYW9FZ-@EGe0n39CbJC4o-2FNe'$gQP
%C72\[Pd-U_"P]!;4Hi<JS[P<G[;KUA'BQ==rEA[\0-'>D+V)4nbl#Vuk>8W+%0lsD(En>XIki3lR)Olc-D/X\NF!W[9\K,1K:_44
%,[&K?;8&O$Lp'dp"e198:(sIs'+,[maeEU)H&5KJ]QDVYbAi4d9I#\"*4L[6NZjC:nlUSOeX!OR-IV,kFu`5:_@n)1jlJ0!1-.gR
%OlK_`&EJ>A\Qnoo.`s5o8n^Ob_6QXu.#+j1Xt3#@$H3clCu^/Q=c-md;N6G:"O?F4cWY<IWYO-cgt._5MOr2G@:KKBP)(uudMQD"
%MqUKiPt&!&%/sd1$<mWFa='.)Z:>VWY27,t;#r0>[RuHT9i!S\;6V325f_l<<,T<0`1p40s),)2M^>AmbJQ-5f]^pAN;Bp%`gf2:
%4LW\9QD:E_NKc>lQm?+!^5:V\/T&TJ(<c7#9JAHj9?E+ZGV@N\=1e#Tr2N,,6(k4OZ"rug7SnhuB4N9#Gj(Aq;)I*oe*05**Q=>[
%fJ2^>XdGS9L=A,rR`MpHjTDJj-"mGIG*Uim\O8p+i?WFNF$A.([am[;,b?EYT!M6PDDe9`fL1o9h+.XE#ZKB)F8:j)Qk^SZihRsM
%WYS=TQOK;T(4E#:6%VW:M270ap#,',VVfA)^I3m)]btX[HIt8lX`ehhn<?HKk)4=D.ubjA6u\Wsj])1?;*djL;uL$a<OlF)#,t2W
%d"kR"PRJ3Jk(\S7O+,06M.f<R[1r&?*THP%?8;'*cksQXP"s'#KjVJinsQK1R&[aW']enM_`F5BaAk;Se[oWj;O_=QZ0J-3K`)!:
%KZ/2KCNDL1;i_C"@7n5'C,i)W/R!WtUd(cVfW>sj;WXH?NDfe"e1"k65^Gh\&[8d22sXa5[eEBDiO3P=]66nR448)Tgh729'h9#l
%6ZU81gsk?TEh;u^XC8n!*5k^@FI!ZhI4IL83QfA[j:KrI!@GqS@^oiPkh-@t8o:Yf7N%GfhA*PNSpt>M2M*<r;DuN]i^tB;j[2Im
%G5(-R:ODsQjh$+(Z`9\RCF)/:';3tX=^MhX)N#_'PNhil`iijBh-GH\Qo*Vs6;=gu<.3-XgnRm6WOf2IkA\/mn:QTuj*/VF/),&6
%FXn,_9%Ld[C,B:Ak1rP/[a/O==3`ml_=QLQI12N5p>u/1Z2@V.Cq#OV9e*#%Bcd+B<(0^ThoU1UCiubRe9Tn!r2RXQ2H48t=).ms
%K4?CXnn:7`L(VBm_l`2u#e-upA#L*:="ct\m?M,n$o#<]G)/A2J2ZjTIkb71-&G0)V]r7LoNKY$XHcl*<8Ia90!ZQW"%cmBeV+]$
%'mAA#.9J,2_fnp8]nJea+=7T"oG0VgaV3$f7J:pc8X`=>f$>L;9P)lmcY"Ep*-GYU]1;D#MHPChiXe8D#CK&GP_@n0ZMX@WQqi2;
%*mZekHRR\<&DE5<c_BI5Nn[ptrT1[TH-bC*T'&o1aL_M2;S,O"muT`5>)moE@nXff5=F[#*l?)C%h[r1&O5`u5@Nt?cSN'W<ti)t
%2LjP!^uJUMoTPT7j8Ohpno52fq;WO5b=`kb5J?p`*Ok7sm`_)*q9ApbOn6%h8%E["%m^1\jDNTZ>P9HQD!Y9b+g"DhM\ZsJ:Aj"=
%.RSlX@^=i'?=[2b?E&<@bQ07]<VQ1JqBG?:9Z[0sP@T_DpY=aknE7+hTGD\>*7%G2'n4\C0O(8JJdm'boXaqeN[si,*&i@-GPfHc
%L+e'"J`)2ipFdK"<R]]:l<*K:FE6M*^40<E_fQOui0o2^]H@.P/:913U9dbum&p-];E+>mkTAM!48"d"k8hG*)j</f(<F';5!SMu
%^<bPi>V;BXEe/NK?!Wan,F^Eh_kH92gJ`49A=b1\$=T2t%@Nmaq/lrN5q;C1csMZ=!Y6k?!gc?]-!u-^0oUiIIPpk*?pm`=X!3Qf
%^VWslqoqd%a`ikS1Z&&()f(;*&RX9UI3('$o;HWL<D7jSUea`Fr=Mc15D;!:^'m;]j,8aSR%3I3<=d2cT!!`)SW_@ZInVkcJq*_l
%mJaH_oQg9Z<9j"V0/hcXI!h&d5#5PRG*)UBG5?aN,Ke&bbB6e:/9%h()4YaC3*<C=f2Va9rt*dm0*=!]PEl4'[P94C0kcTHEXGI'
%*#?M'=$N2sPi,\4EP0a4e!qQh&o6C4CRi5Kb0>@lTHN-b+MU2ja=^9^j.&aI&gT_4A[L'O##oS]Ig@"f$j6km1S3OV#(ipg(]Weg
%K>^&_`cd:=B>S?[&oP9IbsR0j'I$IO,TTLhJY;="X(D$0n5k,lH)s>jF!6gT@SR/nYSiVb^&-[*C5`BaaLZF+2d]Yt,h=4Kc0VaA
%F"4;pUTL%'A.C(7-1eaK9=lo6]t]_RQ(=WJ.:1<bp7Vnpb<9Ut[;PaD-IQm0eS2B7FT5cI$U[,8mNUB2e[:0s%LtL1qdp)PiT[V&
%N,('K4T4ns&&7#hlb:!!hI$<#rE6[os6P#6=+A'1E:rD?%3to>fm,ks1i8E$'DCP+BeO.Zee#)e$!P/h7N[9E`4P%ri4jpfMY]$>
%IlF@Xc:HWfe"TrB[<'-Z=^HC]7FOLaP8VVr:+p;!"jUgup;f:cIJ?PtH8o-g$2lc9X/T7@&`mYBH3LRt_4[_D7>3Ct(7%o7"P?[C
%7C#[-4"7#CZ_LOO7_N7\<m6,^OJp7#."P>iSa,p#4s@+oK$#`3Cb%ZLi*>JNH?P78gQR1dP@&\k=gC+=WBDL/kQmc!EJf,='FSML
%6CZCaSZ:sT#b/V7A\X0Qq9YVRU6V0<AIfgF.&rTTi,htZ+mWZ!\7I7;?f&o3-T+q`rG[AU[4.B/Z43?u/$!%e=3+H$PC2"*i4*&N
%7\q)B4iO@ZCb7D,i/mV?2(P&pRF:aEQ]p@/=jICh+jgp;^cH3ieLF7SeT<rl'2ksXUr@:X9Xt]jdA)u.8Cj^cVOm?,:SIOkY\D$#
%Bk`5a8TOV(2QMeD0!V50eTs?k6^J;XN\7g+(+RXs,I1k1)HZCp1O!YdnZ108<uN]!!djABY"h>t-2fulO2@M41!C/pX[=[UD5a`i
%;'OnuN&ad&$C-3(i-H\!-''>jek!#5\8cr-F.e!#N>4uC5ZN1R/3/=/'[0%T#GTV2J>[R[;Wm@]J^C(7Mhf6D4:)j>[.m[FMZ=9W
%+@5T;1.ZImTepG)?_?>OWX+Q"Q&*fnBG-)%Jd$h[8dLS0<mj3YkjkQBe?%#@`cbVmYU[8":lRWU;#W@3_5&^@afu;?AF'@iS\b]O
%,b4`2?"M%#,F800gi55Q0V/B\39Bf_png=pn.Y<"Pb2TCH5($B[4bi.3?#hTGg'p9d?gQKRTa/geoEe7jJL4e>qs!()go+7KXiS.
%ibBRC!hl9<a;@7.PJCO._0\>D28)R@Xb$V^S2EgQC?UsSq:2EX,Ca*^'o5H)RU.;ZBr`ECY#VF,o4A%#b/Q(fW^\,aS8.aW5dKBT
%=uuN0IM9:[8+T]QB%b#;+AmWEMJ9^mE%prA[:K-ea>Y=.Tt2#CgAUYiP+4nkQgP-28/jP6M6[N;Arf322bJE0#VAaO`2UlhcA>#)
%M&-t+j\FO$1SG&c2UX#d23b2jrMB5>NJG4#oRrXJZ,$B-=G+c$PXYd/P?&JB72<3Ie[f18Qoga8l2E,pL):ZNU#ua$YK"/!\l.pX
%hPR5!#a:\u]$``r+tQ#622=eC(iKUJ(f:J6_$3RV#Qn+Q\:+Z^>qhgV9T`*N"3*^('nn+BHR^aD3jU.:Cb0/8!?6<B4M[-g.!A\D
%Wl9R"MJ!(hZC-T[p%j>,"EVE"Na:f[]`XjL@/6n3i)$18C:$F\m;45?qQq0k]]]eo;46NV'0=W#6XO!U6S[tRkV0SNag\_F?gc:5
%7POEh(qg!K1)0Z-MFh*L6r`n19*J3]<VgBCNX1"pY3[&C!3+ci6j3Berejrc)td!+ZidKq2$K4/"U^rhc;Kd*Zn.8sRRp!l=O2BZ
%8?X*=\jFSH3a9$_Xm/^_ql/3]3VO8PMI\OElAR2[5s8]9:i[C%26!UYK&F!T[!R`]f&97s2)CB=;t+(nJFY@YOpQ8%7@3ZAG]?L^
%6a.7B5jMBV-37*`hF%&TAQpl`TZe,CAjDS9rMrEWep:8WIE`IQF*Ubc,sR+G2%!bn^QTrNTRF;PO`c"9P_>Sq5Lp`AZq`SS?M5p'
%IIh11I?K@D%Df1PE:h`hTPXhA;.fJI&Zl&cE+Cd'6KY/n=eE@FF)@VY0\9s61q/mt[^JF7*UPVLWUs$a53nm[lgN*[O6]&=\#fZf
%&].H,01OZgEfP$Dc?+F$23/P*/YGY_O_@5Q?b!Y4;Tq"<1'snWb.@;S6]YB;G,:ZuKds_ZVYsnHatiA8!VtHZ7[,eF[t(+`Wq&J2
%.f!ul@Gem*c*lh:*W-3*J$lD7<NGi;@L]cS'nKDA1+C$??<5$CmF?[TaDE-f$PCXJ[EhsYWVV>hfI6#J!K<mO[ZGg5Q%Mm:%uZWB
%R$rH&8;kHeC*P-fZY$sud.7rcpe"g1EZLJiWgIiu+!GCa.+>?W4:lsZUb<2h>::PKXP76djd1:gU,Kdm()@Wu]XGaWDHdlA4hHcK
%8\Y>BJc?L"KQ8#Z)R+n7h,tri/U'sUa@RB$iB9^@#BeV2r)THHP"Pn5_YXpDR?!FY4GRpg,>i;L+PWnoeTjqZO_X="^`c?&E-k"^
%QJ*L%c#t(0\;K!.PlE'K#]Hnqm$UBZrQeDM3R-f^Mcp`IpS1*e^#mGjM3OmD12)M;B"#@b;C,gAS!5g_FWC@Xf8j(hY]h,>'W/2F
%Iu/Su5:.ak]H42B`TV$%^59j7'1,V_DOmNsf48t9A]C*bO]nU9BZSnJaiHE:E[k)cbbDUEY,'BV.>Kf%Hd>c;\1^#&i@SF.QEU,H
%nhif>!-*<Z_IeB^4TJ3'9u;X2h%2eA$%:+Od!ngZqS,D_XtT5CR)Go$""bqKA1l%@515\>&bLGd&eq0NFWJ9`Cn1:h@]@^O(.jZs
%Y\_^N)c0+.Rp5_?rrutSbgYZU7Y9C-4QI^?K@(^KoGI>oQ*^Ss`RXi'0X$Ea7Y*^i6c9FpJKIe'o7"U#ji<&A8)2>HY)3R]J1;R=
%.UA<2C1_pF]!/n@](:\@8d=?]@51b>\0H;!>e5F;6pY/e"_HTNq<j5LYSC-1pu!6-]QFd+;G]AACe<<a:*"&]o7oeaH7Y?A:^+MH
%IdRu$E&\pVqOK^_*NF%5l8Nsd%LZ(HNXp1\B0kRsCCX>U%kG^NT0?5JXJ0h7hr1:*q<:p#,;b*p(mJ^Q$\o:PjQ\*#VpJ=kjhC5o
%r;#24T>1/Ofk4?;BuZ7.s",8fHe?Yg?H"8S2Dtq;8-8'#=,kd;qN,$3"pOlqR,/Jtf0A0+lglKV&24/B`q9VB$^IV4dnn!X1()Ds
%q)41R/K$#Ofe.R5`odC=9aXA==@iqKVPu6Ppg+<AN\Q2HRI4?TB:qNJ5XGSJdNWIk9+CE4cKkZVYBht?KX=cqfWe?tq!MH\pD5F0
%FGOQ?#JP6&d@0p;1*jk0F;9M>XuX&mjj3MHB3sSE?iMZ@J*FRhJ%dB!kVe_ONWK*49_5hHE])s[Pq1<GPci87\!@%;20Uo?.%bQ.
%N$/>..a3l_Hrf]soboL#kE?HZJYb/%7Wl9@^@Zf*2fn<0h"oUG/Q#GDEpsugCJ;Uuj-;>-2*RiIfhc<s.oBL^5BPLqdb9RgWcKm&
%KJ!@*UD"O/[OA9Edc[r9=uMjiEnoTUn9k2(hKmXThjWC':+NgGED:PbM,a^(bBS>mhBFQ)kudqlidtkhI*bsn`YDPX/$W7Oi'g'T
%dOW:*C$Yg6k?:I5Q(II6VRkV`f=.Wgb,2q$;dFl)eHP+opm>-OCC@<[(D3-#%;OjtU@(WL2gEeUDgL_Rdp#g`b4Em=qJ/O^,:IH0
%pAr=)5hY_3XV<1:QmEUh4Q5BDML5NJ(-q_lp)J%LpEuZG%#62X!<a@9M#n)99NQ?iY;]I*\HRqF1eXD..uZKu40S(AXPg?gh=nGY
%`I4_R9-mi(QY$?(['"9cl)=Y%k5!lqchAoW"W\DDl%"@;H.c.F!`+BQqG^".^o8;M>8q6?;@YHp2thjf^f=6.He]!b_['7Klu69a
%Cj>O`fDY.UCetd;'LmHP3?gfiOXOn97Q$/X1o:QWa++dX8':3J&>]J=5TH#BU6)l#ggqUa#nJ_#,nU?;OOSB),$N)8Qj@5E+@LQ4
%.PaRgR0L>Ocq!sV'phn+<lie`O@dnq((8!d\kP=+55Vuf`2jJ'emF"8"]%$uMAk_(U"ESZ2bpY-U%fVG8nCeP=TXt%jq$MT]e/IY
%K-UW%c7UDL/8;FC_e9KC_)V@-#ObJ`,@n-"+N#pCYf+Hf2ZtAEr'C)!jFT9hL1X&fHHZ\'ZOg\]8ujYN9KKHu&2]p\324>q8XjUn
%l(hB8b_"c1J=ZmMQ:H1debZq4e6=e*0BtnLN&"8#J?U8U*FT(($Pse![FV)F_bQo(;*!'iThB/N`X4^K;R*Vf%>7>uh4C/%P^P?:
%b#cX9W<P'CZ5>u`j"Jkp:iB)Doi,qsmE5GWL3F75F8m,j6^a0)(:mA1._BB)7R82_g*t2+%lGT(.X_f'<s<EFV@%5%lq4(@ZHJu[
%eE;X>(%)i6)e*uGoinamAT8R<?ne8D&3)=3s8#!F+=C:9^pTgBjj$2>qU1'e-`VtLWFBcA+bf9^)TY.Nl*i>CoJOBO"?/+P=@!>Q
%T%,^hL?:m-@AgCQMVX!'B5!qab.q%$9$e.%A.Ep3ZIW+X#t-StJDR163TY]c=Zh,HZIkYTdW3E4O6H0m&D2Z!.Emfu^@Sf%^@H(M
%9%9Wg*3rLf9A21o0E\s_08]XhWMA;n9>;i/]+l!!B%e.PL3]n1Fa?Y(c#b-3/.cR[6elAQViPM=;5L#WMtG,N`jb3./WM[s'=C)]
%LO)pEM^!h-q/GM>^[cKpbbr`1)G8b'1PFW.W<Gc5]ET#$C#Jg7-`fph.6l#gLn!G/5.W&B!qTSnZu":OD7kT#/l3WB8T2GHU);q)
%Zl(t.cUbk$K+6c>juF@am1RgdbL^1q9nOm#j.j$p!)iM(**s6qT/U$_TZQMB,M8KuY.F5^q'74d0@DRsjoH,@-)O;CnSi-<54KpK
%ckb[7$N#`5WX-hGNkn94\YBJY@0/MfH,-9kaEFDZ/Zgf0<)u9E@thE/^8.=:<_EWb,>^1dWuBo`.<2Hq&2Y^c9&bs>+t97-=V@/d
%JE0b2gG"nfd%==Qd7#?U?Q2-$5\4'0,)$IK=W0gX&AHCmET'#dk:F=ACKD6s%Fkcj?9K/N;*q[k7u9-c,RR&r/F,0$<e8V18EHg&
%"]@AUJHjAZXAO+;,RhmONBL"f_?Ct!P/bp]PCi]RBk9of$7^'Cd:4JZK(FT6$ue@Q-$QH_3CPYu2aM4<Z`YTHHu:La17O=B,GJts
%,_mW-W9XnU*_6]BL_AeljY1qck1<(<S;),k0VVDl-TT7A$P/#q7&B@9]Cc&,nQKS!o8]iZ\cIU21_N(@2!_8q6'h*T?6J^Q6!-R4
%h:1"Tm!$8[+*BQ6g$?Q0Yq]ulc2LhtO^RG5R')N89,+aY_<dK\/(3`)N'c(&.$'2N:]5*OT,#g!n28Sbplj#P^&J?A)^%_GO9C]i
%H<I#b`YR$055R-.H\]V@L-c3p#F7k!F@h`KBSCFhSa5tl24GBG@P_7ic_NQ@/Y],mBQ_-H8C!RM3[^b,@>3tD%]TiBPYa<>6>Bsb
%2_a=r[jQ5pRZgqW4e!H?9[\(WUl/3HY%MRu:\s$,VQSAY7G_mE`&_*M4<tOjm`@[f>6?^NpQ:FN%kAl.^O?n_D$L>3'"teuqJ[gZ
%WY^cB>qe?$etA`\FM<[@0,$YT:*:Jl@5hkI>ml<0<XP=<b5/;&_!);_&pR)f\(mtUXk'[@ONZ35+7#:`L7YK=$$+-2#-qp\BpJX<
%X'"7bn6:O3ejTI\F!Shhm_Al3c*UJ8=M_g%7]%TR=o#9*E.B4&j63C?`?gYf[l$o8+PFg[`k&ei&_Z:hP'$ee93SY%MJ;tJ0LN4u
%>SL=ABA+UD`X3o`C-Ho_=r19E]0qS_"-t-W@GsYPC5HR[N$+LpBY@0[;sqjU7=F[0-*!0'M#R#MZZ1&j^+-&+*;+P<W!g>G-'Gm;
%4/k<RCDl7!3jI,59sJ%<<XWM-"fo+jktkSiB_i97Y[%Fi@SM<e\6'4"Gm/7Ns'[80UI@=XY[<[^N\67);[A5e$"*^ILYrd#fh1]c
%H`k*8F4ZoQGPWJe\SP$>EOL(JqS7tj;F,Z6j'gl6_tIAhSP#6h$1`h!o-,=W8Zs)6+@84V<;uTeH#gT#<V?SRODoFVfb)G7SC<4k
%!s9tMb7;K'W.NM@_Qda#"QOSN0U@:dZ4hJMbCqb]F^&K5#W;#&oq"9(bPF*qcod9E-\AbUBE?OY%2W>E@_cr;^1@qWT9Z>i:bqO=
%GV^k^#\91+q8*H/j,<J&-H$\$30.sR2";VBODeN@$p"d[`7A)-aU+o!IPYr^cF-[mJk;D4c`LY)`E*/6T3`+Y<i0i<f@s't]&:(+
%fS:7?N856umi:+p\rBF;U>]!*6Ul%4cX:1uJfCp\XX1XP/eQJ'WJ9bD/!Fhe*El[$1K)7M.-CW]K$f]c:a!t930ip`a^6(pF50!4
%leks@>%8DSYR,G\!so,"(4a*g&-,9lrJNh3Fjjlh,BCIn'5e"8W;Fh)3iKm?.k!a60HKgVQGZRZSO[iL0sm->`Q@Dq@qR3(RD"1X
%N>;qih'l_n4mp)Vcpt3!T"<>$>(C=nm,k,,^Jt$@``,LYb@"VV?@_=g3b-b?7,J4MZ9&L`\(Ydu8m]Y!f6L6tI*1.-.nFM4&`Ae5
%DO3/l7U")I04!+#o*QTE.B!S]I0KQ4Ya;aNVl3R.;t$kQOcCm5:3^:>YTF>`06ZX]V,'\bPA<iVZ`=+I8,*<EbeQ%TF^RceV&^K`
%0POam5Ec_UbGIgg,"b2/$)4!tmWoYr/e?RUdAUX`42B"o6l&_*:o3rR[r1grK:D(X=A-1te;$mB7,We4?oa!!$Ep<;ruq.P;%W`b
%+X!d5#<S>7hZ#8>*JI<L_F4*NSus3+r6D^ceb6F]o>QK5hBWl[Pnd,@?<aoX`,#u1F9j%*"]]JDY-<`s/Y@YajNbejs1sbiBWis,
%RGua\#-;5IT,[&&K9:6r@B>R;XH1S9.,-JaPG[$l%5TjhkE=,bj1N,n^*;+[=p,0a,[9Fc,JSI"Z7#>oJ->6qQK9eG?9[ln'EQQO
%d0sbel;V+o+W4M3*$4t[mOF-.Rb`i_r-W^Y?[F!\%ADAPX=t"6?WC>0U+hsjPa5I^[-H@=GW=%NF.057<DDH3#qoXX^f8GM)`#dP
%!&d^XMqcF67scZ.Mko@l_Z8!+gP*KoNXt'GLo\4NM84\9]ZCS^(Sfk^P$\pT7ZeH_]0+0a*-EaJiE3ZTk("'=c$TETH*8kbcW5fo
%&B.<u6;)pFDb7th[X'?2n0si-.Db/'mS"ENLLi<h:7bj^`'&84"q4>&^9k3t)h>1#>Y1;u8PDk@(M@kh!LniL(-IUVLe\_R7:\eC
%%G5?*UNF7lodC@oI3`74OQ``4*0:/S(3]lu"NL\I3^MW\c)?-gRf(<8/!GmX1aZ-uLUh,fgnD+;)EZ%`D(D:R"!'?IZQd6b6I^NZ
%&[,m$LH-_)q25Rg?PMV/=NhKSblIZm%n+Kf*RVE&ilFQc=ih`J#=_>51\qrFBU9iK"Wf[cDoCa:N8ZLs4,%]XJ=?Vu9bG-p5I-R]
%-s*jj/)YTLXkodB^m7i\!@]RJ(sfCmTCDV)?lO('hO1='`fYc=pTuoMBVpY!)G@b@g()&e[=l_RK;jRSP1Wk;Z]q0bm6:FDM]&FF
%F1eH7SqM3lfd&pWne,6G,.?DQYo`Ig_W+^No&X7C[<@nU;1AdGnJ<2MCs(n)^:!i+aUqnF=Y-X?Adg`3)m+<*np<H^,W6`aNqsgc
%i6b8GrRhmkm;-X"&-r9$%,r*@@,sWPMM$AJ+H;$n!TZWUMG(2co+8:19+m@*rMXu!9H!;6UrZh4HE?%%77WZ#$8`\UW2$)<m72P2
%4LKj';1\;h=R&o^7POf)Ng-+JE1i4^+)_f%>1->^Z=spVA(QuGh?UfQ)8nK7hO5ZgBnf2L0MOhkR52RnKk=JFD=9K(Y2ECmd4Hd^
%8)QdlPLtAPJMPIG4Ng#1DKsV0<s0`%4<+kBOe=?.02jDk5D0(E9"%9'm*2!oWdF@'Ycm?ISFF(oEuU&0]uQS_D5-qhD_F[kitbH9
%3D(m9gMe)kTMYG=4e-DWJ?MWf<.\%F\f5@HPm/"'!ZXR4OO4TY27'-91:mVD3?RYtnY=VD5?l5EAXME2\se4ArXab6b8dJ;#8#Lf
%3Ja/)q(`2q*O"TJLs'>!k<M1kICtr"0TBH*1^>sLr2Oi-A]i?EC]Z/@oV=UBCsaeS6E4.!EYM:%IH'1Mk,D;A*)sBk%H>`MT)1+(
%#W.K<E$W&U]0bWim+XBbbGB50Op\f+AuGaWV/(oNP?1u&3Jfm^,T;a7ZDmAZ3:Ie@3,C8^%aJ1_</H+A@[Q8,nDT:/@>dO.[teYT
%]-,fF5/u3*dF7:>Ph4Yb=O#DDL"KYn\-&lg;^;&(`Zu/[R4_R@)\FK;bZ%1i[jdWZb*JtcE+T^+\8Fj12Rk=`*jVkp@;Rp^KLr1B
%@(>n^AGZA>QB^tX8KH=c;DHkmI+tj*b&3Cak"ZTC`c9/;_[XdiK;=m`;.6Z,SZ#Y<Vi2quQDCTI6q<4=dYp9W!:[NZJq,3JaX;Lb
%VCo>OJ9#k*r/$u1WGm*)CAp/AEDSYgp0bW?_n,(6)]!`d<AL'tm-WEJ&m.?=8S\hoUG"hV_>3Hc30pc'h?:P@OGSccXkQgMDFGm.
%=X2ErA?e8m[/kM?UfmLJbj@t(]mLRjP7eJ<OcMGBoP9^6j+fl+llRSP1)uW)%Us])JBVK&Vs`e-I%<jo%n/2fGV)X48.XEJ8i@Ad
%Qb6Etln&%6a194$be1E*.7J4PjtC;9J-Zm('=0*_iHY\&8hn?[!\SSRr^0-LZ.2?#h/Zc4#"QYqP@#8LEp5!oG+5]j,\hAsMRX!G
%QeGq80(#MXo\/#9Ab[]6<;#<E-;'MsQPQ<j13kGLZcJ_H:K:_UkJsBH:\4re,IY`m2sG;:("qaX<KLdk?su>0*@U5(+MqO'=]$>Y
%hLu3!E"6q4#sq$r,IDq4R^Zb+<#su&@S'!<Vt@9\5,i.:q/P"\POka*V3SpiA/1]:F.+Ta'ie(\XfHII^)oYFX?n(Yg5HDBgfc4F
%#9)1VK=t5rQa1.8pZ:D:=2j^MQ!b)g/i>.H+mLFV05H<n'SGd(>[orn(0m2fXHVm8V;[N7^hSAPN([9O!"Je1:pA)#3f/BmA=[[V
%pU%2kI]jQ]*FHp<L<$2\<rfOlW:!Ro390?ljaIbPOM^Wd385bEJ>a\j/]Enq<B2q+JV95]@jEOE#<o,%C=m$,)Z4^5R<e24eg4VQ
%Jff%9SoWu'.Mp@/*jr9u>Wou^-ooi0fuN[JOMuK%E#gK0$Vs]+"Yjq3^_PL.4!4cj?_]oi@e>lkfsEf>B<aEm'\7=cJaY*6RZ(Pi
%$b0iu1'rjDd@*J[^N6208^d6IKu*uGV$]"2&_RN81D3D+:2d:l8.Yd#D-%'X^A)qq[LAjI9YFOATNb8kN4HlD.*8)2e;Il8cH?RF
%[6UR(;Ap:6%i4"&Gn<PS+3h2Ja`oa(['M#-@UQ'<65_>jXTY"1"3IP`/jkMo,,pZ<M[G]rPiOYfp#e4Q2MjPE=3(_$*NuXe8o/q^
%i+$Lbab@L".=4k'3t@ltdaXLEf-rRnd2&rl,a-o?W0&.Rf-[M[U^V*'%79,0;Zj?ib4um5`/=9oK"#aB+s]4VcV#ERQ:.inM%AdE
%<ntjn\5q9C:5_++O?5Kr#=pIrer$Ff;6@:Q*eZr+d:h[K?@I[C0AZ?mJ3RWF'Tu@+JFur0EJK70!cd%+f0oGWbEgVA%I//4G/+*2
%,uHbNh/Hr-,fS0^]^,Ki2Lm?^cCI#*^',Ic.#6W,-4!>7Z3')mAHgo@<Yj;@SpE2%YBdqa.mkXC8IjbqeQ/<D"&rbLAj4Rb6f]LC
%P\h@KI?Q/8-;MU%7lggj#a`Gj8g%@sb\PB[$%p"RA55bHic/\PVUk!1F;,som"M8mZ\9CneqCXtLV<#:eIXIaSHOo=CoO.".:_qn
%^(aA,dN+\!%ULi/4na^flbrIZf[c%WL=u$2,A?l\dsEH,K_?u,W.H*m@iYYQ)C8QRU`+'[S.I>&7-ta>?Z8>3Tl'ePN0gAikPMp(
%C#OUcq*UOkSGs90PaIERXF%Pni+<Ll-F`?ebdLiQ>$[G9q5u;5Ugaa`R17Mi4O/_>?UcMTR2JDBarrbPMm7kpT++gQlLJtr6ZbFh
%C&UJgnGH+ea5,Be)/o0<e3g%PqVX!@]=ca8\(b!_R()bQL/pi8#?c^YKACJGnK7f#c[U8oYiid6qnmIc@(?)l^\bnZs8C:$s7kbu
%a'OO!V8'g33Nfl0=hJJl^&7#&mA&iWs7VNRqu#OP^Y;N:q3P%Z1IP(^*om:3N:CRq4FV=cU%("bMLLJehl=3Q,hQuKZSD<oZuig@
%=949lrWue&3NtggL>RM1\3@ZMm1:m8^"%^dG7T)^Ajsh,D@oWa2*qj>W2b%`_qI!sj[Trif0iI.'((-Y33A-OOBPe6'rs3j@uO:k
%FECN!Ap:(KX+=3,<*kOkpI2hpF8&$+OfC%edu=\egZd5>\MV4W@n$D(![uo;CA23A;E.g#2>3mFg][9fd]QQT%0[(e7%Bk^N?FL=
%aHNGMnXh%q[&=9A%L-07%7Nu`nG7]RL1DWlkG\##+r"*([6V*R/A"d:@]Gh*,6K!_+qapgDZ*;f5h?U1<3'K*VNDLSLb5JN&G7k\
%ig+RC]b*c.er$J[0se?!R>EnY"oQonTh%3>1r[gXL@Zb`V@$3n(tq=e&/)4(S6#!p`rfMI7Po^@BbX+*RQ9oU^+>rb-p>q5'gBs?
%2CX>/`>l5D.NFpBF$oqlW*jFP&8F#-\McfBThIeIA4:QEgB^=0P+[U54sU_]]H]62!pb8k3%]D1<QY-cd7!-@q$ONi;R`bAiV1to
%"8-Abi9"ejMC?B'CS!VnC_>KcCC(Pa&m`\^m[A^Xahgg]nn$,nG5?_LWGmBC+sjqD39V9$M:Mu8WM243kaD;8L#Idi.m_-*[L?7g
%Qp<Eoe<GR^$U'jOe'dZ<@EIb!V288N,tPNaDWrpF3Qeo+7U+[%$"!gP8s*YZE#*JlBmf%T@\4^Hn-L/S9hEk1<%pM8og6<C>(Vhs
%DKo"#ClC#$1$eh>-;pe&L\`.U_BSP)n]CTA(V(b.jFk4IP"l8hUWQ1`F3tdJOG#=)Y0Fu]/OmTN3EQpg,3'+V8K'JsQFJ2/4aamC
%aY17?4\^`FMIh]=Q^uKF$!#d'_hPSQjjGhUM>,J\BsF<>O\Tk2B*u$9gWZW5&69;b?*6D(0`OP-6<GWXC9T%c?Hm^I,`4Fm6,0n@
%iW'MWdt_1eqN+n'RI"RoR:SgD8@4^P9;.Tl,Yan@aT&-]-nbRqW\m$s".+=g_b$T%,i/9"^>mS#jrm.56pDDa[XjAi/up+H`BE2i
%nObhH;E7>EU0;"TAUE/hA+SZl'I1.egF)X'2tTTS#p8G'9JcMtR!X[KmEID05H%GG5c:uj:X:,ldO\Wk4^e_!Ef6ujN0eMs8r-1m
%4u-@J\>0n`U0:Wu:rR/M#?@Mk^CO<S1ci>OP,a_-EVYVb=Fb`e8A[l[cpdLrk))UU#Zn/>-.0<_^/W/:e0B"\'8!(LNKfR/KrCh]
%XF<VAV]+VcK6WY;_E)UOm]7l%*7ruiC1;$He;peg.U?(ChDbd@82=m.J6m3[UGR9`#fp&oT6Vk[is[2`KsYD?I1[GnUF%Nq+q/^h
%.hSb8rQ3q3p#O/'[,2Uh8F/,gmj\0*h+/CU]kj,EQ(N5[Q>4`BGhRVFJ<7KH'(o`kZ9c):T,KAT%Qr"un@8/X<ai!C0kCWp6ULM^
%ToN)G*.2_uD6^mBMG+WdKa_(>Z#q:,*&IoQ\]&s.:m"$hQ+#WY;]>>/[qkcp!J^LUou]p?JWRFte&S%2])Vb%)O6S!T23[p,jq>e
%gN$+p$Z3*,$mL<u3T8Gqm,3B*L^eN`/5\LdTP&kM@\Pn)FHPr6l'/mZOpG>oNB)sE0\B.$=r"V6d1P:LSZu*"fQR)Dl1Ob`DWg!7
%M*8Zd*bmLJVGrLY=YL#C+N,FO5"d=Feu!gYhr2<AI"sY*V)NXqD[g"ZrKqqZ-(@_*:*fTQGU3\T@<R#%mt$WZ+64I=2W9o$Wj#*"
%Nt:MT=Ghl-.[AkQ&;F6jh!2$m4U58*0Plat2H0:AI@$iC7RWB@DIODRq\%pg7J?8`6PEeoG,$&7?)c%-X]"n6\&]F/lM7D`A5<+F
%hW9O593gn.o<suQeNuF;DbB'j_t4;s#_gX.>!Ykt[q_HAG5K*J0X4BOZa1mqTij!G%+s>l%et%cLHIo):o7e#.(dQB%#VBqNq6%d
%o)m;(l'<.=Ie_CJ+l-TsX_i*&jB(ou)*<BF?S_Ji"+*Ld"iro7`lV4t24E2e'Xi?/La._@?,bEs!6_m4D?fV08kP^A<Nkd4bli<'
%,8.2aPMUaK!/F)qP'I[1p@6&DgDm]7IDL-ZT5EMNp4q,a#5oY*lFC-+(Q8gmpu1K!p?cbTpGTl26A.GLE[Cb='=4k@JuQ:e'0g\]
%HprMHoXn:Me)N.6":daeRAh'"E[]IH3D\XB,c$=C$3oZJMQ0a+M?F?%X1lY+r&KaTpA@iMO-<\p0=O'cr9:(!0B,_L(fUESb<u[-
%N)rg414/jPd,V%e(YZ@2oBotSCEZ@(?B]."n..`>eM9PO?IQ[S<"$N8^=U-u<6P(GU$sXOQg5i%B=9:."L;%5pqR3C%teN;dAY,4
%YuiNm%pS#lZ^OieH$-HOCd3-50jEF(g'[E=\7(MjE;eiLe)co>?@I3H_rI&lDs`"Pil@RZi$V?3rr,M\UOVgEk_(9)Bl+Er2UUQJ
%n]&%O8"N'alh9FqKVhp;hsM]Za4dq*8sE.SNlTri+f*uYo\;gBVntoJqWWHij*iZ=egiS+ShV/h%73kt'i'3b5o6N#-$[)>BX:sV
%E2@AM=a5`ROTW4>T3"8Dc@g;Nh')@Pm``+4`G25+_7gq0VpNbNFbsD7LNi[_nd`^RDI3$=36LO9#JMXdWV:%6<.0Ti-Rr[3IYEfa
%Gl%,<@\:@R'E$s)d(B`;lF>B1lmLKkEa`*/h@sq\E@YdC_Kc0"M63+-YiBACn<[@mI)l3RHTJ.m5.m:N89V!\q[S`t(Kt]Ffm\=M
%/[:F_pVc0+3Dgo>]$hGioB\5r6&LtmE8:1:NIZ7<4`3pd@ah8N5P("EDY<Q(Dp>`^hp:e:s2Y.Cs'_HQcenc;++ATb>_6>_h=n\a
%iICe#r?%>Wrmfp(r_MGOoY\T@J,CN=bRa`drorD95Q:/M5QB2n5<Sl.s8:@G7D_L6"i('0Du\RArmfp(IrP(&ci~>
%AI9_PrivateDataEnd
